<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PIN-YI – 哈囉 歡迎來到 Pin-Yi の 部落格</title><link>https://pin-yi.me/</link><description>Recent content in 哈囉 歡迎來到 Pin-Yi の 部落格 on PIN-YI</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><atom:link href="https://pin-yi.me/index.xml" rel="self" type="application/rss+xml"/><item><title>朝陽科技大學 - 安全前瞻：網站防護與 DevOps 技術講座 (2024/05/29)</title><link>https://pin-yi.me/blog/lecture/20240529-devops-introduce/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pin-yi.me/blog/lecture/20240529-devops-introduce/</guid><description>
&lt;h2>講座資訊&lt;span class="absolute -mt-20" id="講座資訊">&lt;/span>
&lt;a href="#%e8%ac%9b%e5%ba%a7%e8%b3%87%e8%a8%8a" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>
&lt;div class="overflow-x-auto mt-6 flex rounded-lg border py-2 ltr:pr-4 rtl:pl-4 contrast-more:border-current contrast-more:dark:border-current border-orange-100 bg-orange-50 text-orange-800 dark:border-orange-400/30 dark:bg-orange-400/20 dark:text-orange-300">
&lt;div class="ltr:pl-3 ltr:pr-2 rtl:pr-3 rtl:pl-2">&lt;/div>
&lt;div class="w-full min-w-0 leading-7">
&lt;div class="mt-6 leading-7 first:mt-0">
&lt;ul>
&lt;li>時間：2024/05/29 19:00 - 21:00&lt;/li>
&lt;li>地點：朝陽科技大學 &amp;amp; Google Meet &lt;a href="https://meet.google.com/aiq-qcoy-wid" target="_blank" rel="noopener">線上連結&lt;/a>&lt;/li>
&lt;li>Google Developer Student Clubs 相關連結：&lt;a href="https://gdsc.community.dev/events/details/developer-student-clubs-chaoyang-university-of-technology-taichung-taiwan-presents-wang-zhan-fang-hu-yu-devopsji-shu-jiang-zuo-ft-zhuang-pin-yi-gong-cheng-shi/" target="_blank" rel="noopener">https://gdsc.community.dev/events/details/developer-student-clubs-chaoyang-university-of-technology-taichung-taiwan-presents-wang-zhan-fang-hu-yu-devopsji-shu-jiang-zuo-ft-zhuang-pin-yi-gong-cheng-shi/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2>雲端和地端的差別&lt;span class="absolute -mt-20" id="雲端和地端的差別">&lt;/span>
&lt;a href="#%e9%9b%b2%e7%ab%af%e5%92%8c%e5%9c%b0%e7%ab%af%e7%9a%84%e5%b7%ae%e5%88%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>首先，想問一下大家，你們知道雲端和地端的差別嗎？&lt;/p>
&lt;br>
&lt;h3>地端&lt;span class="absolute -mt-20" id="地端">&lt;/span>
&lt;a href="#%e5%9c%b0%e7%ab%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>我們先來説説「地端」是什麼？地端的英文是 &lt;a href="https://en.wikipedia.org/wiki/On-premises_software" target="_blank" rel="noopener">On-Premises&lt;/a>，簡稱 On-Prem，代表所有安裝、運行都在個人電腦或公司自己內部的伺服器上所執行的運行方式。&lt;/p>
&lt;p>最好的例子就是你電腦裡面裝的 Windows 作業系統、Office 文書軟體、或是公司內部的 ERP 系統等等。這些軟體都是安裝在你的電腦或公司伺服器上，並且由你自己或公司的 IT 團隊負責管理，所以這也是目前最普遍的ㄧ種軟體運行方式。&lt;/p>
&lt;br>
&lt;h4>地端的優點是什麼？&lt;span class="absolute -mt-20" id="地端的優點是什麼">&lt;/span>
&lt;a href="#%e5%9c%b0%e7%ab%af%e7%9a%84%e5%84%aa%e9%bb%9e%e6%98%af%e4%bb%80%e9%ba%bc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>&lt;strong>控制權&lt;/strong>：你可以完全控制你的伺服器和軟體，不用擔心第三方服務商的服務品質，想把機器擺在哪裡就放哪裡、用什麼型號都可以自己決定。&lt;/li>
&lt;li>&lt;strong>安全性&lt;/strong>：企業或是個人可以自行控制資料的存取權限，不用擔心第三方服務商的資料外洩問題。&lt;/li>
&lt;li>&lt;strong>成本&lt;/strong>：一次性購買伺服器和軟體，不需要每個月支付雲端服務費用。&lt;/li>
&lt;/ol>
&lt;br>
&lt;h4>地端的缺點是什麼？&lt;span class="absolute -mt-20" id="地端的缺點是什麼">&lt;/span>
&lt;a href="#%e5%9c%b0%e7%ab%af%e7%9a%84%e7%bc%ba%e9%bb%9e%e6%98%af%e4%bb%80%e9%ba%bc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>&lt;strong>成本&lt;/strong>：一次性購買伺服器和軟體，需要花費大量的資金，且不確定是否符合需求使用。&lt;/li>
&lt;li>&lt;strong>維護&lt;/strong>：需要自行管理伺服器和軟體，包括硬體維護、軟體更新、資料備份等等。&lt;/li>
&lt;li>&lt;strong>擴充性&lt;/strong>：當使用者或是需求增加時，需要自行擴充伺服器和軟體，且需要花費大量的時間和金錢。&lt;/li>
&lt;/ol>
&lt;br>
&lt;p>那相信大家已經大致了解地端的定義了，接下來我們來看看「雲端」是什麼？&lt;/p>
&lt;h3>雲端&lt;span class="absolute -mt-20" id="雲端">&lt;/span>
&lt;a href="#%e9%9b%b2%e7%ab%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>「雲端」的英文是 Cloud，不需要安裝在個人電腦或公司伺服器上，而是透過網際網路存取的伺服器，以及在這些伺服器上執行的軟體或是資料庫。常見的例子有 Google 雲端硬碟、Dropbox、或是 Google Cloud、AWS、Azure 等雲端服務商。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/lecture/20240529-devops-introduce/cloud.png"
alt="如何使用雲端 圖片來源" width="700">&lt;figcaption>
&lt;p>如何使用雲端 &lt;a href="https://www.cloudflare.com/zh-tw/learning/cloud/what-is-the-cloud/" target="_blank" rel="noopener">圖片來源&lt;/a>&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>雲端得以實現，是因為一種稱為虛擬化的技術。虛擬化允許在一台實體的電腦上建立許多模擬「虛擬」電腦，其行為如同具有自己硬體的實體電腦，這類電腦的術語稱為&lt;a href="https://www.cloudflare.com/zh-tw/learning/cloud/what-is-a-virtual-machine/" target="_blank" rel="noopener">虛擬機器&lt;/a>。虛擬主機簡單介紹到這邊，後面的 &lt;a href="#docker-%e4%bb%8b%e7%b4%b9" >Docker 介紹&lt;/a> 會在提到。&lt;/p>
&lt;p>一個資料中心有多台的伺服器，一個伺服器可以執行許多虛擬「伺服器」，能夠為許多組織或是客戶提供不同的服務，即使個別伺服器故障，雲端供應商會在多個機器及多個區域備份服務。&lt;a href="https://www.youtube.com/watch?v=zDAYZU4A3w0&amp;amp;ab_channel=GoogleCloudTech" target="_blank" rel="noopener">Google Data Center 影片連結&lt;/a>&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/lecture/20240529-devops-introduce/google-data-center.webp"
alt="Google Data Center 圖片來源" width="700">&lt;figcaption>
&lt;p>Google Data Center &lt;a href="https://www.youtube.com/watch?v=kd33UVZhnAA&amp;amp;ab_channel=GoogleCloudTech" target="_blank" rel="noopener">圖片來源&lt;/a>&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>雲端又可以分為以下幾種：&lt;/p>
&lt;h4>公有雲（Public Cloud）&lt;span class="absolute -mt-20" id="公有雲public-cloud">&lt;/span>
&lt;a href="#%e5%85%ac%e6%9c%89%e9%9b%b2public-cloud" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>故名思義，公有雲由第三方雲端服務商提供，如 Google Cloud、AWS、Azure 等。這些服務商提供的平台允許用戶租用伺服器、資料庫、儲存空間等資源，用戶只需一組帳號和密碼即可訪問。公有雲的特點包括：&lt;/p>
&lt;ul>
&lt;li>彈性和可擴展性：用戶可以根據需求動態調整資源的規模。&lt;/li>
&lt;li>成本效益：按需付費模式，企業可以根據實際使用情況支付費用。&lt;a href="https://cloud.google.com/products/calculator?hl=zh_tw" target="_blank" rel="noopener">Google Cloud Pricing Calculator&lt;/a>&lt;/li>
&lt;li>全球覆蓋：可選擇部署的地區範圍廣泛。&lt;a href="https://status.cloud.google.com/index.html" target="_blank" rel="noopener">Goolge Cloud Service Health&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>除了彈性和成本效益，最重要的還有全球部署和服務商管理安全和維護及 SLA 的優勢。&lt;a href="https://cloud.google.com/terms/sla" target="_blank" rel="noopener">Google Cloud Platform Service Level Agreements&lt;/a>&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/lecture/20240529-devops-introduce/Top-10-Cloud-Service-Providers-Globally-in-2022.jpg.webp"
alt="Top 10 Cloud Service Providers Globally in 2024 圖片來源" width="600">&lt;figcaption>
&lt;p>Top 10 Cloud Service Providers Globally in 2024 &lt;a href="https://dgtlinfra.com/top-cloud-service-providers/" target="_blank" rel="noopener">圖片來源&lt;/a>&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h4>私有雲（Private Cloud）&lt;span class="absolute -mt-20" id="私有雲private-cloud">&lt;/span>
&lt;a href="#%e7%a7%81%e6%9c%89%e9%9b%b2private-cloud" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>私有雲是由企業自建或由第三方供應商為特定企業提供的雲端基礎設施，僅供企業內部使用。其特點包括：&lt;/p>
&lt;ul>
&lt;li>專屬使用：企業獨享全部資源，不與其他用戶共享。&lt;a href="https://cloud.google.com/spot-vms?hl=zh-tw" target="_blank" rel="noopener">Spot VM&lt;/a>&lt;/li>
&lt;li>高可控和安全性：企業可以自行管理和控制數據，確保數據安全性和合規性。&lt;/li>
&lt;li>高成本：需要自行購買和維護硬體和基礎設施，初期投資和運營成本較高。&lt;/li>
&lt;/ul>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/lecture/20240529-devops-introduce/akamai-public-private-cloud.png"
alt="What Is Private Cloud? 圖片來源" width="600">&lt;figcaption>
&lt;p>What Is Private Cloud? &lt;a href="https://www.akamai.com/glossary/what-is-private-cloud" target="_blank" rel="noopener">圖片來源&lt;/a>&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>聽完公有雲和私有雲的介紹，有沒有可以結合兩種雲端的優點，來達到更好的效果呢？&lt;/p>
&lt;h4>混合雲（Hybrid Cloud）&lt;span class="absolute -mt-20" id="混合雲hybrid-cloud">&lt;/span>
&lt;a href="#%e6%b7%b7%e5%90%88%e9%9b%b2hybrid-cloud" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>混合雲是一種結合了公有雲和私有雲優勢的雲端架構，允許企業在公有雲和私有雲之間靈活地配置和管理資源。這意味著企業可以將一些工作負載和應用程式部署在公有雲上，以利用其彈性和成本效益，同時將敏感資料和關鍵業務應用部署在私有雲或內部資料中心，以確保安全性和控制。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>彈性和可擴展性：企業可以根據需求動態調整公有雲和私有雲的使用比例。例如，當工作負載增加時，可以暫時使用公有雲資源來擴展運算能力，而不必立即擴展內部基礎設施。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>成本效益：通過利用公有雲的按需付費模式，企業可以降低運營成本，避免在私有雲上過度投資。而私有雲則可以用來運行穩定且持久的工作負載。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安全性和合規性：敏感數據和應用可以保存在私有雲或內部資料中心，以滿足企業的安全和合規要求。同時，非敏感的工作負載可以部署在公有雲上，以利用其便利性和成本優勢。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>高可用性和災難恢復：混合雲架構允許企業在公有雲和私有雲之間設置冗餘和備份方案，增強系統的高可用性和災難恢復能力。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>所以混合雲也是目前最多企業採用的雲端架構，可以兼顧公有雲和私有雲的優勢，並根據實際需求靈活調整資源的使用。&lt;/p>
&lt;br>
&lt;h3>雲端還是地端好，要如何選擇？&lt;span class="absolute -mt-20" id="雲端還是地端好要如何選擇">&lt;/span>
&lt;a href="#%e9%9b%b2%e7%ab%af%e9%82%84%e6%98%af%e5%9c%b0%e7%ab%af%e5%a5%bd%e8%a6%81%e5%a6%82%e4%bd%95%e9%81%b8%e6%93%87" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>沒有一個明確的答案，要看你的需求和預算，以及公司的規模和發展方向。&lt;/p>
&lt;p>假設你是一個小型公司，可能沒有太多資金去購買伺服器和軟體，也沒有太多人力去管理、或是者你的公司業務是跨國的，需要在全球提供服務以及需求高可用性，或是長時間有大量的流量，例如：遊戲公司，那麼雲端就是一個不錯的選擇。&lt;/p>
&lt;p>如果公司資料敏感性高，需要自行控制資料存取權限，或是公司有自己的 IT 團隊，有能力管理伺服器和軟體，那麼地端就是一個不錯的選擇。&lt;/p>
&lt;br>
&lt;p>我們了解了雲端和地端的差別，接下來了解一下有什麼技術可以幫助我們更好的部署我們的服務呢？&lt;/p>
&lt;h2>Docker 和 Kubernetes 概念介紹&lt;span class="absolute -mt-20" id="docker-和-kubernetes-概念介紹">&lt;/span>
&lt;a href="#docker-%e5%92%8c-kubernetes-%e6%a6%82%e5%bf%b5%e4%bb%8b%e7%b4%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;br>
&lt;h3>Docker 介紹&lt;span class="absolute -mt-20" id="docker-介紹">&lt;/span>
&lt;a href="#docker-%e4%bb%8b%e7%b4%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Docker 是一種軟體平台，它可以快速建立、測試和部署應用程式。為什麼可以快速建立呢？因為 Docker 會將軟體封裝到名為『容器』的標準單位。其中會包含程式庫、系統工具、程式碼、執行軟體所需的所有項目。 剛剛有提到容器 (Container)，是一種虛擬化技術，它高效率虛擬化及易於遷移和擴展的特性，非常適合現代雲端的開發及佈署。&lt;/p>
&lt;p>那 Container 與傳統的虛擬機 (VM) 有什麼差別呢？我們來看看下面這張圖&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/lecture/20240529-devops-introduce/container-vm.png"
alt="Container 與 VM 的差異 圖片來源" width="700">&lt;figcaption>
&lt;p>Container 與 VM 的差異 &lt;a href="https://www.todaysoftmag.com/article/2576/container-based-micro-services-in-the-cloud" target="_blank" rel="noopener">圖片來源&lt;/a>&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>可以看到 Container 是以應用程式為單位，而 VM 則是以作業系統為單位。雖然本質來說兩者都是運行在有實體的硬體機器上，但 Container 是一個封裝了相依性資源與應用程式的執行環境。VM 則是一個需要配置好 CPU、RAM 與 Storage 的作業環境，為了更好的做區別，我把 Container、VM 兩個差別用表格來說明：&lt;/p>
&lt;br>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">比較&lt;/th>
&lt;th style="text-align:center">容器 (Container)&lt;/th>
&lt;th style="text-align:center">虛擬機(VM)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">單位&lt;/td>
&lt;td style="text-align:center">應用程式&lt;/td>
&lt;td style="text-align:center">作業系統&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">適用服務&lt;/td>
&lt;td style="text-align:center">多使用於微服務&lt;/td>
&lt;td style="text-align:center">使用較大型的服務&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">硬體資源&lt;/td>
&lt;td style="text-align:center">是以程式為單位，需要的硬體資源很少&lt;/td>
&lt;td style="text-align:center">VM 會先佔用 CPU、RAM 等等硬體資源，不管有沒有使用都會先佔用&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">造成衝突&lt;/td>
&lt;td style="text-align:center">Container 間是彼此隔離的，因此在同一台機器可以執行不同版本的服務&lt;/td>
&lt;td style="text-align:center">會因為版本不同造成環境衝突&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">系統支援數量&lt;/td>
&lt;td style="text-align:center">單機支援上千個容器&lt;/td>
&lt;td style="text-align:center">一般最多幾十個&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">優點&lt;/td>
&lt;td style="text-align:center">Image 較小，通常都幾 MB&lt;br>啟動速度快，通常幾秒就可以生成一個 Container&lt;br>更新較為容易，只需要利用新的 Image 重新啟動就會更新完了&lt;/td>
&lt;td style="text-align:center">因為硬體層以上都虛擬化，因此安全性相對較高&lt;br>系統選擇較多，在 VM 可以選擇不同的 OS&lt;br>不需要降低應用程式內服務的耦合性，不需要將程式內的服務個別拆開來部署&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">缺點&lt;/td>
&lt;td style="text-align:center">安全性較 VM 差，因為環境與硬體都與本機共用&lt;br>在同一台機器中，每一個 Container 的 OS 都是相同的，無法一個為 Windows、一個為 Linux，還是依賴 Host OS&lt;br>Container 通常會切成微服務的方式作部署，在各元件中的網路連結會比較複雜&lt;/td>
&lt;td style="text-align:center">Image 的大小通常 GB 以上，比 Container 大很多&lt;br>啟動速度通常要花幾分鐘，因此服務重啟速度較慢&lt;br>資源使用較多，因為不只程式本身，還要將一部分資源分給 VM 的作業系統&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;br>
&lt;h3>Docker 小總結&lt;span class="absolute -mt-20" id="docker-小總結">&lt;/span>
&lt;a href="#docker-%e5%b0%8f%e7%b8%bd%e7%b5%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>
&lt;p>更快速的交付和部署：對於開發和維運人員來說，最希望就是一次建立或設定，可以再任意地方正常運行。開發者可以使用一個標準的映像檔來建立一套開發容器，開發完成之後，維運人員可以直接使用這個容器來部署程式。Docker 容器很輕很快！容器的啟動時間都是幾秒中的事情，大量地節約開發、測試、部署的時間。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>更有效率的虛擬化：Docker 容器的執行不需要額外的虛擬化支援，它是核心層級的虛擬化，因此可以實作更高的效能和效率。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>更輕鬆的遷移和擴展：Docker 容器幾乎可以在任意的平台上執行，包括實體機器、虛擬機、公有雲、私有雲、個人電腦、伺服器等。 這種兼容性可以讓使用者把一個服務從一個平台直接遷移到另外一個。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>更簡單的管理：使用 Docker，只需要小小的修改，就可以替代以往大量的更新工作。所有的修改都以增量的方式被分發和更新，從而實作自動化並且有效率的管理&lt;/p>
&lt;/li>
&lt;/ul>
&lt;br>
&lt;h3>Docker 三大元素&lt;span class="absolute -mt-20" id="docker-三大元素">&lt;/span>
&lt;a href="#docker-%e4%b8%89%e5%a4%a7%e5%85%83%e7%b4%a0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Docker 是由這三個東西所組成，了解後就可以知道整個 Docker 的生命週期。&lt;/p>
&lt;ul>
&lt;li>映像檔 (Image)&lt;/li>
&lt;li>容器 (Container)&lt;/li>
&lt;li>倉庫 (Repository)&lt;/li>
&lt;/ul>
&lt;h4>映像檔 (Image)&lt;span class="absolute -mt-20" id="映像檔-image">&lt;/span>
&lt;a href="#%e6%98%a0%e5%83%8f%e6%aa%94-image" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>Docker 映像檔是一個唯獨的模板。&lt;/p>
&lt;p>例如：一個映像檔可以用一個 Ubuntu Linux 作業系統當作基底，裡面只安裝 Nginx 或使用者想用的套件等。&lt;/p>
&lt;p>我們會使用映像檔來建立 Docker 的容器 (Container) ，Docker 也提供很簡單的機制來建立映像檔或是更新現有的映像檔，也可以去下載別人已經做好的映像檔。&lt;/p>
&lt;br>
&lt;h4>容器 (Container)&lt;span class="absolute -mt-20" id="容器-container">&lt;/span>
&lt;a href="#%e5%ae%b9%e5%99%a8-container" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>Docker 是利用容器來執行應用程式。&lt;/p>
&lt;p>每一個容器都是由映像檔所建立的的執行程式。它可以被啟動、開始、停止、刪除。且每一個容器都是相互隔離的，不會相互影響。&lt;/p>
&lt;br>
&lt;h4>倉庫 (Repository)&lt;span class="absolute -mt-20" id="倉庫-repository">&lt;/span>
&lt;a href="#%e5%80%89%e5%ba%ab-repository" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>倉庫是集中放置映像檔的所在地，倉庫分為公開倉庫 (Public) 和 私有倉庫 (Private) 兩種形式。最大的倉庫註冊伺服器當然是 &lt;a href="https://hub.docker.com/" target="_blank" rel="noopener">Docker hub&lt;/a>，存放數量龐大的映像檔供使用者下載，使用者也可以在本地網路內建立一個私有倉庫。可以將倉庫的概念理解成跟 Git 相似。&lt;/p>
&lt;br>
&lt;p>這樣講還是有點抽象，我們來看一個實際的例子：&lt;/p>
&lt;p>首先我們先看一下 Docker 的 Logo，你們覺得這是什麼動物呢？&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/lecture/20240529-devops-introduce/Docker.png"
alt="Docekr Logo 圖片來源" width="600">&lt;figcaption>
&lt;p>Docekr Logo &lt;a href="https://logowik.com/docker-vector-logo-2767.html" target="_blank" rel="noopener">圖片來源&lt;/a>&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>沒錯就是鯨魚，但你們有沒有注意圖片有三個大元素呢？&lt;/p>
&lt;ul>
&lt;li>海洋&lt;/li>
&lt;li>鯨魚&lt;/li>
&lt;li>貨櫃&lt;/li>
&lt;/ul>
&lt;p>海洋代表的是 Docker 的執行環境，不論是在哪個海洋 (計算環境)，都可以執行，鯨魚代表的是 Docker 這個平台 (或可以指 Image)，而貨櫃代表的是 Docker 的容器，也就是說我們可以有很多個 Container 在同一個 Image 上執行，且互不影響，能夠快速的部署和遷移，並在不同的環境中執行。&lt;/p>
&lt;br>
&lt;p>其他 Docker 詳細介紹可以參考我之前寫的文章：&lt;a href="../../docker/docker" >Docker 介紹 (如何使用 Docker-compose 建置 PHP+MySQl+Nginx 環境)&lt;/a>&lt;/p>
&lt;br>
&lt;h2>什麼是 CICD&lt;span class="absolute -mt-20" id="什麼是-cicd">&lt;/span>
&lt;a href="#%e4%bb%80%e9%ba%bc%e6%98%af-cicd" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;br>
&lt;h2>如何最快恢復網站&lt;span class="absolute -mt-20" id="如何最快恢復網站">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e6%9c%80%e5%bf%ab%e6%81%a2%e5%be%a9%e7%b6%b2%e7%ab%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;br>
&lt;h2>網站維運日常&lt;span class="absolute -mt-20" id="網站維運日常">&lt;/span>
&lt;a href="#%e7%b6%b2%e7%ab%99%e7%b6%ad%e9%81%8b%e6%97%a5%e5%b8%b8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;br>
&lt;h2>要走軟體工程師需要具備哪些技能？&lt;span class="absolute -mt-20" id="要走軟體工程師需要具備哪些技能">&lt;/span>
&lt;a href="#%e8%a6%81%e8%b5%b0%e8%bb%9f%e9%ab%94%e5%b7%a5%e7%a8%8b%e5%b8%ab%e9%9c%80%e8%a6%81%e5%85%b7%e5%82%99%e5%93%aa%e4%ba%9b%e6%8a%80%e8%83%bd" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>當然，想成為一個軟體工程師，你一定要會程式語言，例如 PHP、Python、JavaScript 等等&lt;/p>
&lt;p>也可以看看 stackoverflow 每年的調查報告，了解目前最流行的程式語言是哪些：
&lt;a href="https://survey.stackoverflow.co/2023/#most-popular-technologies-language" target="_blank" rel="noopener">https://survey.stackoverflow.co/2023/#most-popular-technologies-language&lt;/a>&lt;/p>
&lt;p>但除了這些基本的技能外，還需要具備以下幾項技能：&lt;/p>
&lt;br>
&lt;h3>Git 版本控制&lt;span class="absolute -mt-20" id="git-版本控制">&lt;/span>
&lt;a href="#git-%e7%89%88%e6%9c%ac%e6%8e%a7%e5%88%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Git 可以說是現代軟體工程師必備的技能之一，可以幫助你管理程式碼的版本，也是你跟其他工程師協作的最好工具。&lt;/p>
&lt;br>
&lt;h3>寫 Blog&lt;span class="absolute -mt-20" id="寫-blog">&lt;/span>
&lt;a href="#%e5%af%ab-blog" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;br>
&lt;h3>溝通能力&lt;span class="absolute -mt-20" id="溝通能力">&lt;/span>
&lt;a href="#%e6%ba%9d%e9%80%9a%e8%83%bd%e5%8a%9b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>自我學習&lt;/p>
&lt;br>
&lt;h2>參考資料&lt;span class="absolute -mt-20" id="參考資料">&lt;/span>
&lt;a href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>地端是什麼？可以吃嗎？：&lt;a href="https://wanchunghuang.com/what-is-on-premises/s" target="_blank" rel="noopener">https://wanchunghuang.com/what-is-on-premises/&lt;/a>&lt;/p>
&lt;p>雲端 VS 地端，數位轉型怎麼選？：&lt;a href="https://blog.hackmd.io/zh/blog/2022/02/22/cloud-vs-on-premises" target="_blank" rel="noopener">https://blog.hackmd.io/zh/blog/2022/02/22/cloud-vs-on-premises&lt;/a>&lt;/p>
&lt;p>什麼是雲端？ | 雲端定義： &lt;a href="https://www.cloudflare.com/zh-tw/learning/cloud/what-is-the-cloud/" target="_blank" rel="noopener">https://www.cloudflare.com/zh-tw/learning/cloud/what-is-the-cloud/&lt;/a>&lt;/p>
&lt;p>企業如何挑選合適的雲端服務？公有雲、私有雲差異比較總整理：&lt;a href="https://aws.amazon.com/tw/events/taiwan/techblogs/public-cloud-private-cloud/" target="_blank" rel="noopener">https://aws.amazon.com/tw/events/taiwan/techblogs/public-cloud-private-cloud/&lt;/a>&lt;/p>
&lt;p>給資料科學家的 Docker 指南：3 種活用 Docker 的方式（上）：&lt;a href="https://leemeng.tw/3-ways-you-can-leverage-the-power-of-docker-in-data-science-part-1-learn-the-basic.html" target="_blank" rel="noopener">https://leemeng.tw/3-ways-you-can-leverage-the-power-of-docker-in-data-science-part-1-learn-the-basic.html&lt;/a>&lt;/p></description></item></channel></rss>