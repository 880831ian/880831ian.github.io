<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PIN-YI – Git 或 CICD 相關</title><link>https://pin-yi.me/blog/git-or-cicd/</link><description>Recent content in Git 或 CICD 相關 on PIN-YI</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><atom:link href="https://pin-yi.me/blog/git-or-cicd/index.xml" rel="self" type="application/rss+xml"/><item><title>如何啟用 GitLab 的 Package Registry 以及將儲存位置從伺服器改到 GCS 上</title><link>https://pin-yi.me/blog/git-or-cicd/gitlab-package-registry-to-gcs/</link><pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate><guid>https://pin-yi.me/blog/git-or-cicd/gitlab-package-registry-to-gcs/</guid><description>
&lt;p>今天接到一個案子，RD 部門之後想要使用 GitLab 的 Package Registry 功能來發布套件，且不想把它存在 GitLab 伺服器上，希望可以直接存到 GCP 的 Google Cloud Storage 上，所以才會有了此篇筆記來記錄一下整個過程。&lt;/p>
&lt;br>
&lt;p>版本資訊&lt;/p>
&lt;ul>
&lt;li>GitLab 14.10 (有部分設定會於新版本棄用，請記得確認好自己的版本是否支援)&lt;/li>
&lt;/ul>
&lt;p>先說一下，我們的 GitLab 是使用 docker-compose 來建置，所以後續的實作內容都會以 docker-compose 的方式來介紹。&lt;/p>
&lt;br>
&lt;h2>啟動 GitLab 的 Package Registry&lt;span class="hx-absolute -hx-mt-20" id="啟動-gitlab-的-package-registry">&lt;/span>
&lt;a href="#%e5%95%9f%e5%8b%95-gitlab-%e7%9a%84-package-registry" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>首先，我們當然要先啟動這項 Package Registry 功能，才可以再之後使用它，我們先看一下 GitLab 啟動的 docker-compose.yml 檔案：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;3&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">gitlab&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;gitlab/gitlab-ee:14.10.5-ee.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">restart&lt;/span>: &lt;span style="color:#ae81ff">always&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">container_name&lt;/span>: &lt;span style="color:#ae81ff">gitlab&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hostname&lt;/span>: &lt;span style="color:#ae81ff">gitlab-pid&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">logging&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">driver&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;json-file&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">options&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">max-size&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;100m&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">max-file&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;50&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">GITLAB_OMNIBUS_CONFIG&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> external_url &amp;#39;${GITLAB_DOMAIN}&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> letsencrypt[&amp;#39;enable&amp;#39;] = false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> gitlab_rails[&amp;#39;initial_root_password&amp;#39;] = &amp;#39;${GITLAB_ROOT_PASSWORD}&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> gitlab_rails[&amp;#39;gitlab_shell_ssh_port&amp;#39;] = &amp;#39;${GITLAB_HOST_SSH_PORT}&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> gitlab_rails[&amp;#39;backup_keep_time&amp;#39;] = 79200
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> gitlab_rails[&amp;#39;omniauth_allow_single_sign_on&amp;#39;] = [&amp;#39;google_oauth2&amp;#39;]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> gitlab_rails[&amp;#39;omniauth_block_auto_created_users&amp;#39;] = false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> gitlab_rails[&amp;#39;omniauth_sync_profile_from_provider&amp;#39;] = [&amp;#39;google_oauth2&amp;#39;]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> gitlab_rails[&amp;#39;omniauth_sync_profile_attributes&amp;#39;] = [&amp;#39;name&amp;#39;, &amp;#39;email&amp;#39;]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> gitlab_rails[&amp;#39;omniauth_providers&amp;#39;] = [
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">略過．．．&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#39;${GITLAB_HOST_SSH_PORT}:22&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#39;${GITLAB_HOST_HTTP_PORT}:80&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#39;${GITLAB_HOST_HTTPS_PORT}:443&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#39;./config:/etc/gitlab&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#39;./logs:/var/log/gitlab&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#39;./data:/var/opt/gitlab&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>有些設定有略過或是省略不寫，大家就依照自己的設定來看就好～&lt;/p>
&lt;br>
&lt;h2>新增 Package Registry 設定&lt;span class="hx-absolute -hx-mt-20" id="新增-package-registry-設定">&lt;/span>
&lt;a href="#%e6%96%b0%e5%a2%9e-package-registry-%e8%a8%ad%e5%ae%9a" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>我們在上方的 &lt;code>gitlab_rails['omniauth_providers'] = [ ... 略 ... ] &lt;/code> 之後加上新增 Package Registry 設定內容：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">gitlab_rails[&amp;#39;packages_enabled&amp;#39;] = true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">gitlab_rails[&amp;#39;packages_object_store_enabled&amp;#39;] = true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">gitlab_rails[&amp;#39;packages_object_store_remote_directory&amp;#39;] = &amp;#34;GCS 名稱&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">gitlab_rails[&amp;#39;packages_object_store_direct_upload&amp;#39;] = true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">gitlab_rails[&amp;#39;packages_object_store_background_upload&amp;#39;] = true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">gitlab_rails[&amp;#39;packages_object_store_proxy_download&amp;#39;] = true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">gitlab_rails[&amp;#39;packages_object_store_connection&amp;#39;] = {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;provider&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">=&amp;gt; &amp;#39;Google&amp;#39;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;google_project&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">=&amp;gt; &amp;#39;專案 ID&amp;#39;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;google_json_key_location&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">=&amp;gt; &amp;#39;/etc/gitlab/google_key.json&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>packages_enabled：啟動 packages&lt;/li>
&lt;li>packages_object_store_enabled：啟動 packages 對象存儲&lt;/li>
&lt;li>packages_object_store_remote_directory：設定 packages 對象存儲位置，這邊要輸入 GCS 的名稱&lt;/li>
&lt;li>packages_object_store_direct_upload：設定是否可以直接上傳到對象存儲位置&lt;/li>
&lt;li>packages_object_store_background_upload：設定是否以後台方式上傳到對象存儲位置&lt;/li>
&lt;li>packages_object_store_proxy_download：設定是否可以透過代理伺服器進行套件下載&lt;/li>
&lt;li>packages_object_store_connection：設定連接到對象存儲，由於我們要存到 GCS 上面，需要有這三項 provider、google_project、google_json_key_location 才可以將 packages 存到 GCS 上。如果想用其他的儲存位置，例如 Amazon S3、Azure Blob storage 可以參考 &lt;a href="https://docs.gitlab.com/ee/administration/object_storage.html" target="_blank" rel="noopener">Object storage 詳細設定&lt;/a> ( 其中的 google_json_key_location 是要放可以讀寫 GCS 的 SA SECRET 檔案 )&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2>先查看尚未重啟的 GitLab Package&lt;span class="hx-absolute -hx-mt-20" id="先查看尚未重啟的-gitlab-package">&lt;/span>
&lt;a href="#%e5%85%88%e6%9f%a5%e7%9c%8b%e5%b0%9a%e6%9c%aa%e9%87%8d%e5%95%9f%e7%9a%84-gitlab-package" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>由於公司 GitLab 預設有先開啟 packages_enabled，所以我就拿同事用 Helm 寫的 CI，來做測試。當更新 value.yaml 後會自動打包 Package 放到 Package Registry 中，我們直接進入到預設 Package Registry 的儲存位置，是在 &lt;code>/var/opt/gitlab/gitlab-rails/shared/packages/&lt;/code>，用指令發現打包的 Package 的確存放於此 ，如下：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/gitlab-package-registry-to-gcs/1.webp"
alt="檢查是否還有 Package 在預設儲存位置 (尚未遷移)" width="800">&lt;figcaption>
&lt;p>檢查是否還有 Package 在預設儲存位置 (尚未遷移)&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h2>重啟設定後再次檢查 GitLab Package&lt;span class="hx-absolute -hx-mt-20" id="重啟設定後再次檢查-gitlab-package">&lt;/span>
&lt;a href="#%e9%87%8d%e5%95%9f%e8%a8%ad%e5%ae%9a%e5%be%8c%e5%86%8d%e6%ac%a1%e6%aa%a2%e6%9f%a5-gitlab-package" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>當我們重啟設定後，也有建立好可供我們權限 SA 的 GCS 後，會發現原本存在預設 &lt;code>/var/opt/gitlab/gitlab-rails/shared/packages/&lt;/code> 沒有自動跑到 GCS 上，是因為我們還需要手動下指令將他遷移過去，指令是 &lt;code>gitlab-rake &amp;quot;gitlab:packages:migrate&amp;quot;&lt;/code>，最後等他跑完我們在檢查一下預設儲存位置就發現已經沒有 Package 了&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/gitlab-package-registry-to-gcs/2.webp"
alt="檢查是否還有 Package 在預設儲存位置 (已遷移)" width="800">&lt;figcaption>
&lt;p>檢查是否還有 Package 在預設儲存位置 (已遷移)&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>開 GCS 網站來看會發現原先在預設儲存位置的 Package 都可以跑到 GCS 上：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/gitlab-package-registry-to-gcs/3.webp"
alt="查看已遷移到 Google Cloud Storage 的 Package" width="800">&lt;figcaption>
&lt;p>查看已遷移到 Google Cloud Storage 的 Package&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h2>參考資料&lt;span class="hx-absolute -hx-mt-20" id="參考資料">&lt;/span>
&lt;a href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>GitLab Package Registry administration：&lt;a href="https://docs.gitlab.com/14.10/ee/administration/packages/" target="_blank" rel="noopener">https://docs.gitlab.com/14.10/ee/administration/packages/&lt;/a>&lt;/p></description></item><item><title>如何合併多個 commit，且推到遠端呢？</title><link>https://pin-yi.me/blog/git-or-cicd/git-merge-multiple-commit/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><guid>https://pin-yi.me/blog/git-or-cicd/git-merge-multiple-commit/</guid><description>
&lt;p>當我們在使用 Git 時，常常修改完內容後，會推 commit 到 github or gitlab，在一個分支上開發久了， commit 會累積很多，很雜且很亂，所以我們可以試著將 commit 給合併。&lt;/p>
&lt;br>
&lt;p>大家可以使用這個檔案來做練習：&lt;a href="https://github.com/880831ian/git-merge-multiple-commit" target="_blank" rel="noopener">點我 GoGo&lt;/a> 😉&lt;/p>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-merge-multiple-commit/1.webp"
alt="git commit" width="400">&lt;figcaption>
&lt;p>git commit&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>可以看到上面這張圖，這個與&lt;a href="https://github.com/880831ian/git-merge-multiple-commit" target="_blank" rel="noopener">範例檔案&lt;/a>的 commit 相似(不同專案，所以 SHA-1 也會不同，為了模擬所以 commit 相同而已)，我們模擬在同一個分支底下，有很多的 commit，那我們試著把他給合併起來。先說明一下目前的 commit 狀況，我們在 master 分支上有 3 個 commit，且已經推到遠端上。所以我們本地修改後，還要讓遠端的也合併，這個步驟要怎麼做呢？大家可以先想想看，後面會告訴大家答案 🥰&lt;/p>
&lt;br>
&lt;h2>合併本地端 commit&lt;span class="hx-absolute -hx-mt-20" id="合併本地端-commit">&lt;/span>
&lt;a href="#%e5%90%88%e4%bd%b5%e6%9c%ac%e5%9c%b0%e7%ab%af-commit" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>首先我們目的是想要讓 add 2.txt 與 add 3.txt 的 commit 合併成 add txt，可以先使用以下指令來找到他的 commit 的 SHA-1：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git log&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-merge-multiple-commit/2.webp"
alt="git log 查看 commit 的 SHA-1" width="600">&lt;figcaption>
&lt;p>git log 查看 commit 的 SHA-1&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>要怎麼合併呢？我們先使用 rebase 到不會變動的 commit，也就是 add 1.txt 這個 commit：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git rebase -i 3b5bab9d5fb65b965ae55236734103b178f9daf2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-merge-multiple-commit/3.webp"
alt="git rebase" width="600">&lt;figcaption>
&lt;p>git rebase&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>下完後，會跳出上面圖片內容，可以看到上面是 rebase interactive (-i) 要執行的指令，下面是每個指令的簡單說明，我們本次會使用的只有 &lt;code>pick&lt;/code> 以及 &lt;code>squash&lt;/code>，分別的意思是：&lt;/p>
&lt;ul>
&lt;li>pick：會執行該 commit。&lt;/li>
&lt;li>squash：會把這個版本的 commit 合併到前一個 commit。&lt;/li>
&lt;/ul>
&lt;br>
&lt;p>所以我們要將它改成以下：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>pick f8e5882 add 2.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>squash 3eb0ef4 add 3.txt&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;p>也就是將 3eb0ef4 這個版本的 commit 合併到 f8e5882 的 commit，對應我們的例子，將 add 3.txt 合併到 add 2.txt 這個 commit。&lt;/p>
&lt;p>儲存離開後，會跳出以下的畫面，他會告訴你原本兩個的 commit message 分別是 add 2.txt 以及 add 3.txt，這時候我們要輸入新的 commit message，也就是 add txt，建議可以把原本的訊息註解掉。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-merge-multiple-commit/4.webp"
alt="輸入新的 commit" width="600">&lt;figcaption>
&lt;p>輸入新的 commit&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>儲存後，我們查看 &lt;code>git log&lt;/code>，就可以看到我們將 add 2.txt 跟 add 3.txt 合併成 add txt 😝&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-merge-multiple-commit/5.webp"
alt="查看目前合併狀態的 git log" width="600">&lt;figcaption>
&lt;p>查看目前合併狀態的 git log&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h2>合併遠端 commit&lt;span class="hx-absolute -hx-mt-20" id="合併遠端-commit">&lt;/span>
&lt;a href="#%e5%90%88%e4%bd%b5%e9%81%a0%e7%ab%af-commit" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>可以看到下方是我們已經將本機端的 commit 給合併，但遠端還是一樣有 3 個 commit，如果我們就這樣直接推上去，只會多一次的 commit，所以我們該怎辦呢 ?&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-merge-multiple-commit/6.webp"
alt="遠端與本地端的 commit 不同" width="450">&lt;figcaption>
&lt;p>遠端與本地端的 commit 不同&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>我們就是要使用大家都害怕的：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git push -f&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>強制覆蓋掉分支上的內容，但&lt;strong>切記切記&lt;/strong>，這個只適用於自己的分支上歐～不然會直接大爆炸 💣&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-merge-multiple-commit/7.webp"
alt="使用 git push -f 後的 commit" width="450">&lt;figcaption>
&lt;p>使用 git push -f 後的 commit&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h2>參考資料&lt;span class="hx-absolute -hx-mt-20" id="參考資料">&lt;/span>
&lt;a href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>如何合併多個 commits：&lt;a href="https://zerodie.github.io/blog/2012/01/19/git-rebase-i/" target="_blank" rel="noopener">https://zerodie.github.io/blog/2012/01/19/git-rebase-i/&lt;/a>&lt;/p>
&lt;p>【狀況題】聽說 git push -f 這個指令很可怕，什麼情況可以使用它呢？：&lt;a href="https://gitbook.tw/chapters/github/using-force-push" target="_blank" rel="noopener">https://gitbook.tw/chapters/github/using-force-push&lt;/a>&lt;/p></description></item><item><title>部署 Laravel 於 Heroku 搭配 GitLab CI/CD</title><link>https://pin-yi.me/blog/git-or-cicd/laravel-gitlab-cicd-heroku/</link><pubDate>Thu, 26 May 2022 00:00:00 +0000</pubDate><guid>https://pin-yi.me/blog/git-or-cicd/laravel-gitlab-cicd-heroku/</guid><description>
&lt;p>經過上一篇文章 &lt;a href="../../git-or-cicd/gitlab-cicd/" >如何從頭打造專屬的 GitLab CI/CD&lt;/a> 的學習，讓我們了解到 GitLab CI/CD 的整個流程，接著我們本次要把 Laravel 給部署到 Heroku 透過 GitLab 的 CI/CD 去達成，不需要透過任何人工去測試，並上架程式到 HeroKu 上，全部都依賴 GitLab CI/CD，讓我們接著看下去吧！&lt;/p>
&lt;br>
&lt;p>當然，此文章程式碼也會同步到 Github ，需要的也可以去查看歐！要記得先確定一下自己的版本 &lt;a href="https://github.com/880831ian/Laravel-GitLab-CICD-Heroku" target="_blank" rel="noopener">Github 程式碼連結&lt;/a> 😏&lt;/p>
&lt;h2>版本資訊&lt;span class="hx-absolute -hx-mt-20" id="版本資訊">&lt;/span>
&lt;a href="#%e7%89%88%e6%9c%ac%e8%b3%87%e8%a8%8a" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>macOS：11.6&lt;/li>
&lt;li>Docker：Docker version 20.10.14, build a224086&lt;/li>
&lt;li>Laravel Installer：2.3.0&lt;/li>
&lt;li>Laravel Framework：9.14.1&lt;/li>
&lt;li>gitlab.com：GitLab Enterprise Edition 15.1.0-pre&lt;/li>
&lt;/ul>
&lt;br>
&lt;p>首先，我們第一步驟就是先建立一個 Laravel 專案，至於為什麼要選擇用 Laravel 來當作 GitLab CI/CD 的範例呢？因為 Laravel 內建有 PHPUnit 的測試腳本，可以讓我們在 CI 測試時，更好的展現 CI 的功能！，有關於 Laravel 相關內容，這邊一樣推薦兩篇文章給大家閱讀：🤣&lt;/p>
&lt;ul>
&lt;li>&lt;a href="../../code/laravel/" >Laravel 介紹 (使用 Laravel 從零到有開發出一個留言板功能並搭配 RESTful API 來實現 CRUD)&lt;/a>&lt;/li>
&lt;li>&lt;a href="../../code/laravel-advanced/" >Laravel 進階 (內建會員系統、驗證 RESTful API 是否登入、使用 Repository 設計模式)&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>又工商了一波 XD&lt;/p>
&lt;br>
&lt;h2>建立 Laravel 專案&lt;span class="hx-absolute -hx-mt-20" id="建立-laravel-專案">&lt;/span>
&lt;a href="#%e5%bb%ba%e7%ab%8b-laravel-%e5%b0%88%e6%a1%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>請大家依照 Laravel 官方文件來建立 Laravel 環境，也可以看小弟我的文章拉 👆👆👆，請記得要先安裝好 php 以及 composer，接著按照以下步驟來建立。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/create.webp"
alt="新建一個 Laravel 新專案" width="900">&lt;figcaption>
&lt;p>新建一個 Laravel 新專案&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>這時候瀏覽 &lt;code>http://127.0.0.1:8000&lt;/code>，如果都正確，應該會看到 Laravel 的首頁&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/laravel.webp"
alt="Laravel 首頁" width="900">&lt;figcaption>
&lt;p>Laravel 首頁&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h2>測試本地 Unit Test&lt;span class="hx-absolute -hx-mt-20" id="測試本地-unit-test">&lt;/span>
&lt;a href="#%e6%b8%ac%e8%a9%a6%e6%9c%ac%e5%9c%b0-unit-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>接著我們剛剛有提到選用 Laravel 的原因是 Laravel 有 PHPUnit 單元測試可以使用，所以我們現在先在本地端來測試 Unit Test，專案預設有放一個單元測試在 &lt;code>tests/Unit/ExampleTest.php&lt;/code>。我們先再次確認環境是否有安裝好，再來執行單元測試。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/unittest.webp"
alt="在本地端執行單元測試" width="900">&lt;figcaption>
&lt;p>在本地端執行單元測試&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>執行後，應該都會是通過的畫面，如下圖：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/demo_test.webp"
alt="執行單元測試結果" width="900">&lt;figcaption>
&lt;p>執行單元測試結果&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h2>GitLab CI 建置&lt;span class="hx-absolute -hx-mt-20" id="gitlab-ci-建置">&lt;/span>
&lt;a href="#gitlab-ci-%e5%bb%ba%e7%bd%ae" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>上傳 Laravel 專案&lt;span class="hx-absolute -hx-mt-20" id="上傳-laravel-專案">&lt;/span>
&lt;a href="#%e4%b8%8a%e5%82%b3-laravel-%e5%b0%88%e6%a1%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>接下來我們要上傳含有 Unit Test 專案到 GitLab 上，步驟如下，如果已經熟悉如何將專案推到 GitLab，可以直接跳到 &lt;a href="#%e5%9c%a8-gitlab-%e4%b8%8a%e5%9f%b7%e8%a1%8c%e5%96%ae%e5%85%83%e6%b8%ac%e8%a9%a6" >在 GitLab 上執行單元測試&lt;/a>&lt;/p>
&lt;ol>
&lt;li>在 &lt;a href="https://gitlab.com" target="_blank" rel="noopener">gitlab.com&lt;/a> 上點選建立專案，選擇 &lt;strong>Create blank project&lt;/strong>，也可以直接瀏覽該網址 &lt;code>https://gitlab.com/projects/new#blank_project&lt;/code>。&lt;/li>
&lt;li>輸入專案名稱可以選擇 Project deployment target 為 &lt;strong>Heroko&lt;/strong>，選擇 Public，最後按下 &lt;strong>Create project&lt;/strong>&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/gitlab.webp"
alt="在 GitLab 上建立新專案" width="800">&lt;figcaption>
&lt;p>在 GitLab 上建立新專案&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;ol start="3">
&lt;li>於專案資料夾下加入 remote 遠端 GitLab，並 Push 將專案推上去。&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/gitlab_push.webp"
alt="將 Laravel 專案推到 GitLab 上" width="800">&lt;figcaption>
&lt;p>將 Laravel 專案推到 GitLab 上&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>成功推上去，可以到 GitLab 上，看到我們剛剛的專案！&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/gitlab_show.webp"
alt="成功推到 GitLab 上" width="800">&lt;figcaption>
&lt;p>成功推到 GitLab 上&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h3>在 GitLab 上執行單元測試&lt;span class="hx-absolute -hx-mt-20" id="在-gitlab-上執行單元測試">&lt;/span>
&lt;a href="#%e5%9c%a8-gitlab-%e4%b8%8a%e5%9f%b7%e8%a1%8c%e5%96%ae%e5%85%83%e6%b8%ac%e8%a9%a6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>要在 GitLab 上執行 CI/CD 就需要有 Runner，這次我們選擇使用 &lt;a href="https://gitlab.com" target="_blank" rel="noopener">gitlab.com&lt;/a> 的 Shared runners，想要使用 Specific runners，可以查看上一篇 &lt;a href="../../git-or-cicd/gitlab-cicd/#%E8%87%AA%E6%9E%B6-runner-specific-runners" >如何從頭打造專屬的 GitLab CI/CD&lt;/a> 文章&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/runner.webp"
alt="本次使用 Share runners" width="800">&lt;figcaption>
&lt;p>本次使用 Share runners&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>接下來在專案的根目錄撰寫我們的 &lt;code>.gitlab-ci.yml&lt;/code> 檔案，之後再次上傳 GitLab，當我們根目錄有此檔案，GitLab-CI 就會讀取並依照內容啟動 Runner 來執行工作：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">.gitlab-ci.yml&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">lorisleiva/laravel-docker:latest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">Unit_test&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">before_script&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">script&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">./vendor/bin/phpunit --testsuit Unit --coverage-text --colors=never&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;p>說明一下這個 &lt;code>yml&lt;/code> 檔內的設定是在做什麼：&lt;/p>
&lt;ul>
&lt;li>image：因為我們執行 CI/CD 過程中，需要有 PHP、Compose、NPM 等工具，有這些套件管理工具就可以延伸去安裝更多套件，如果一開始沒有安裝，就會很麻煩，其中一個辦法就是去 Runner 環境修改並安裝，但因為方便以及我們這次使用 Share runners，所以不能修改別人的 Runner，另一個辦法是可以使用 &lt;code>image&lt;/code> 關鍵字，可以讓 Runner 切換到另一個環境去執行工作 (Job)，我們這邊使用 &lt;a href="https://github.com/lorisleiva/laravel-docker" target="_blank" rel="noopener">lorisleiva/laravel-docker:latest&lt;/a> ，他裡面已經幫我們安裝好上述的工具了！&lt;/li>
&lt;li>Unit_test：這邊也是我們的 Job，那裡面主要是先用 composer install 去安裝我們需要的套件，最後在執行 phpunit 來做單元測試。&lt;/li>
&lt;/ul>
&lt;br>
&lt;h3>上傳 .gitlab-ci.yml&lt;span class="hx-absolute -hx-mt-20" id="上傳-gitlab-ciyml">&lt;/span>
&lt;a href="#%e4%b8%8a%e5%82%b3-gitlab-ciyml" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>接著我們使用以下指令將含有 &lt;code>.gitlab-ci.yml&lt;/code> 的專案上傳到 GitLab，並回到 GitLab 選擇 CI/CD，可以查看目前的 Pipelines，會有我們剛剛所新增的 Runner。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/gitlab-ci.webp"
alt="將 .gitlab-ci.yml 推到 GitLab" width="600">&lt;figcaption>
&lt;p>將 &lt;code>.gitlab-ci.yml&lt;/code> 推到 GitLab&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/pipeline.webp"
alt="查看 Runner 已經進行執行單元測試檢測" width="700">&lt;figcaption>
&lt;p>查看 Runner 已經進行執行單元測試檢測&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/runner-cicd.webp"
alt="可以看到 Runner 先安裝我們的環境，再執行單元測試的腳本" width="700">&lt;figcaption>
&lt;p>可以看到 Runner 先安裝我們的環境，再執行單元測試的腳本&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h3>設置須通過測試才可以合併&lt;span class="hx-absolute -hx-mt-20" id="設置須通過測試才可以合併">&lt;/span>
&lt;a href="#%e8%a8%ad%e7%bd%ae%e9%a0%88%e9%80%9a%e9%81%8e%e6%b8%ac%e8%a9%a6%e6%89%8d%e5%8f%af%e4%bb%a5%e5%90%88%e4%bd%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>當我們有了測試還不夠，要怎麼確保每隻要上線 (合併到主分支) 的程式都有經過測試才上線呢？&lt;/p>
&lt;p>接下來我們可以在 GitLab 裡面做這些設定，先到專案的 Setting → General → Merge requests → Merge checks 點選 &lt;strong>Pipelines must succeed&lt;/strong>：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/mergechecks.webp"
alt="點選 Pipelines must succeed 來確保程式合併前都必須經過測試" width="700">&lt;figcaption>
&lt;p>點選 &lt;strong>Pipelines must succeed&lt;/strong> 來確保程式合併前都必須經過測試&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h3>測試是否可以阻擋未成功情況&lt;span class="hx-absolute -hx-mt-20" id="測試是否可以阻擋未成功情況">&lt;/span>
&lt;a href="#%e6%b8%ac%e8%a9%a6%e6%98%af%e5%90%a6%e5%8f%af%e4%bb%a5%e9%98%bb%e6%93%8b%e6%9c%aa%e6%88%90%e5%8a%9f%e6%83%85%e6%b3%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>我們先模擬要開發新功能，所以在 master 最新 commit 下，建立一個新分支 &lt;code>new&lt;/code>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>git checkout -b &lt;span style="color:#e6db74">&amp;#34;new&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;p>接著修改單元測試，故意新增錯誤的測試，開啟專案的 &lt;code>tests/Unit/ExampleTest.php&lt;/code>，最下面加上紅色框框程式碼：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/exampletest.webp"
alt="新增錯誤測試，還模擬看看是否能成功擋住" width="500">&lt;figcaption>
&lt;p>新增錯誤測試，還模擬看看是否能成功擋住&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>&lt;code>assertEquals&lt;/code> 會檢查這兩個值是否相同，不同的話，就會跳出錯誤，所以我們故意輸入 1 和 2。&lt;/p>
&lt;br>
&lt;p>並將它上傳到 GitLab，並發出 Merge Request 看看會有什麼結果！&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/gitlab-test.webp"
alt="將新增錯誤的 ExampleTest 加入暫存，推到 GitLab" width="600">&lt;figcaption>
&lt;p>將新增錯誤的 ExampleTest 加入暫存，推到 GitLab&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/mergerequest.webp"
alt="並將 new 分支透過 Merge Request 來合併到 master" width="1000">&lt;figcaption>
&lt;p>並將 new 分支透過 Merge Request 來合併到 master&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>可以看到我們合併在 Pipeline 測試時，因為 new 沒有通過測試，所以也沒有辦法進行合併！&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/mergeerror.webp"
alt="分支 new 沒有通過測試，所以沒有進行 Merge" width="700">&lt;figcaption>
&lt;p>分支 new 沒有通過測試，所以沒有進行 Merge&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h2>GitLab CD 建置&lt;span class="hx-absolute -hx-mt-20" id="gitlab-cd-建置">&lt;/span>
&lt;a href="#gitlab-cd-%e5%bb%ba%e7%bd%ae" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>我們玩完 CI 後，接著要把程式部署到伺服器或是雲端上，這時候我們不需要透過人工手動的方式，只需要有 CD 來幫我們自動化部署就可以拉！如果不太清楚，可以參考這張圖片：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/gitlab_workflow.webp"
alt="GitLab CI/CD workflow (圖片來源：GitLab)" width="900">&lt;figcaption>
&lt;p>GitLab CI/CD workflow (圖片來源：&lt;a href="https://docs.gitlab.com/ee/ci/introduction/" target="_blank" rel="noopener">GitLab&lt;/a>)&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>當我們剛剛進行 CI 的整合測試，最後經過 Review and approve 合併到主分支，這時候如果我們有設定 CD，CD 就會幫我們部署到服務上，我把 CD 流程轉成文字步驟說明：&lt;/p>
&lt;br>
&lt;ol>
&lt;li>把新功能分支合併到 master 分支，代表功能已經可以上線&lt;/li>
&lt;li>GitLab 觸發 Gitlab-CI 執行 pipeline&lt;/li>
&lt;li>Gitlab-CI 執行自動化測試&lt;/li>
&lt;li>Gitlab-CI 測試成功後，執行部署到正式伺服器&lt;/li>
&lt;li>回傳執行結果至 GitLab&lt;/li>
&lt;/ol>
&lt;br>
&lt;p>那想要達成自動化部署之前，必須能在遠端用指令下達部署更新！簡單來說有兩件事情：&lt;/p>
&lt;ol>
&lt;li>要先整理再更新專案時需要哪些指令，並將其寫成腳本&lt;/li>
&lt;li>需要獲得伺服器的授權，可以對伺服器下達更新專案的腳本&lt;/li>
&lt;/ol>
&lt;br>
&lt;p>我們以現在 Laravel 專案來說，套用上面講的兩件事情：&lt;/p>
&lt;ol>
&lt;li>腳本製作：上線新版本大概要執行以下圖片的內容&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/laravel_up.webp"
alt="Laravel 專案上線前會下達的指令" width="800">&lt;figcaption>
&lt;p>Laravel 專案上線前會下達的指令&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;ol start="2">
&lt;li>對遠端伺服器下指令：通常使用 ssh 與 伺服器做溝通，所以先在伺服器產生授權金鑰給要遠端控制的電腦，如果要給 Gitlab-CI 控制的話，也需要把金鑰存在 GitLab 上，通常使用 &lt;code>ssh user@remote.server 'git pull'&lt;/code> 來下達更新專案的指令&lt;/li>
&lt;/ol>
&lt;br>
&lt;p>本篇我們要部署的是 PaaS 的 HeroKu，可以減少時間去架設環境，就可以達到我們想要的效果，那接著會帶大家從 Heroku 設定開始歐！先簡單介紹一下 Heroku：&lt;/p>
&lt;p>Heroku 是一個支援多種程式語言的雲平台即時服務(PaaS)， 是一種雲端運算服務，提供運算平台與解決方案服務，PaaS 提供使用者將雲端基礎設施部署與建立至使用者端，或者藉此獲得使用程式語言、程式庫與服務。使用者不需要管理與控制雲端基礎設施（包含網路、伺服器、作業系統或儲存），但需要控制上層的應用程式部署與應用代管的環境。&lt;/p>
&lt;br>
&lt;h3>創建 Heroku 專案&lt;span class="hx-absolute -hx-mt-20" id="創建-heroku-專案">&lt;/span>
&lt;a href="#%e5%89%b5%e5%bb%ba-heroku-%e5%b0%88%e6%a1%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>那要使用 Heroku 當然需要一組帳號拉，建立帳號我應該不用再多介紹了吧 🤡  我們直接到 Heroku 頁面，右上角 New，點選 Create new app，輸入本次專案名稱，我就取叫 &lt;code>laravel-gitlab-cicd-heroku&lt;/code> (這個不能與別人重複，因為他會生成專屬網頁)， 進去後，點選右上角有一個 &lt;strong>Open app&lt;/strong>，就會跳出這個專案專屬的網頁：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/herokuapp.webp"
alt="Heroku 專屬網頁" width="1000">&lt;figcaption>
&lt;p>Heroku 專屬網頁&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h3>設定 HeroKu 與 GitLab 連線&lt;span class="hx-absolute -hx-mt-20" id="設定-heroku-與-gitlab-連線">&lt;/span>
&lt;a href="#%e8%a8%ad%e5%ae%9a-heroku-%e8%88%87-gitlab-%e9%80%a3%e7%b7%9a" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>先點選右上角個人頭像 → Account setrtings → 在 Account 往下滑 → API Key，點選 &lt;strong>Reveal&lt;/strong> 並將該 API 記住，這是等等透過 GitLab 部署時會用到的 API Token：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/token.webp"
alt="取得部署的 API Token" width="1000">&lt;figcaption>
&lt;p>取得部署的 API Token&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>回到 GitLab 專案底下，Settings → CI/CD → Variables，他可以將變數設定在這邊，再讓 &lt;code>.gitlab-ci.yml&lt;/code> 來抓取變數，設定以下兩個變數：(詳細可以參考&lt;a href="https://docs.gitlab.com/ee/ci/variables/index.html#add-a-cicd-variable-to-a-project" target="_blank" rel="noopener">官網&lt;/a>)&lt;/p>
&lt;ol>
&lt;li>Key 名稱(HEROKU_PRODUCTION_PROJECT_NAME)，Value 值(設定我們剛剛在 Heroku 部署的專案名稱，我的是 &lt;code>laravel-gitlab-cicd-heroku&lt;/code>)&lt;/li>
&lt;li>Key 名稱(HEROKU_PRODUCTION_API_KEY)，Value 值(這個就是我們上面的 API Key，每個人都要用自己的歐！上面的我已經重設了 😎  )&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/variables.webp"
alt="gitLab 設定 Variables" width="800">&lt;figcaption>
&lt;p>gitLab 設定 Variables&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;ul>
&lt;li>這邊要注意先把預設的 Protect variable 給關閉，他預設會只能在受保護的分支或標籤運行，但我們這此以簡單為主，所以這些設定都先關掉。&lt;/li>
&lt;/ul>
&lt;br>
&lt;h3>新增 Heroku 識別檔案&lt;span class="hx-absolute -hx-mt-20" id="新增-heroku-識別檔案">&lt;/span>
&lt;a href="#%e6%96%b0%e5%a2%9e-heroku-%e8%ad%98%e5%88%a5%e6%aa%94%e6%a1%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>接下來我們要新增一個檔案名為 &lt;code>Procfile&lt;/code>，它是 Heroku 部署更新時會啟動的對象，注意他沒有副檔名，我們在裡面輸入以下：(我們使用合併後的 master)&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/procfile.webp"
alt="新增 HeroKu 識別檔案" width="650">&lt;figcaption>
&lt;p>新增 HeroKu 識別檔案&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>它代表我們網頁服務使用 apache2 指令運行並把入口指向專案資料夾中的 laravel 專案的入口資料夾。&lt;/p>
&lt;br>
&lt;h3>修改 .gitlab-ci.yml&lt;span class="hx-absolute -hx-mt-20" id="修改-gitlab-ciyml">&lt;/span>
&lt;a href="#%e4%bf%ae%e6%94%b9-gitlab-ciyml" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>我們修改原本用來 CI 的腳本，來設定自動化部署的任務 Job 及腳本&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">.gitlab-ci.yml&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">lorisleiva/laravel-docker:latest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">Production_Deploy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">stage&lt;/span>: &lt;span style="color:#ae81ff">Production_Deploy&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">before_script&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">apk add ruby ruby-dev ruby-irb ruby-rake ruby-io-console ruby-bigdecimal ruby-json ruby-bundler yarn ruby-rdoc &amp;gt;&amp;gt; /dev/null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">apk update&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">gem install dpl &amp;gt;&amp;gt; /dev/null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">script&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">dpl --provider=heroku --app=$HEROKU_PRODUCTION_PROJECT_NAME --api-key=$HEROKU_PRODUCTION_API_KEY&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;p>最後上傳 GitLab 來觸發 Gitlab-CI 執行自動化部署 (上傳指令就不多說囉，想必大家都會了吧！，不會的話可以去看 &lt;a href="../../git-or-cicd/git/" >Git 介紹&lt;/a>，裡面有詳細的介紹 😍  )&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/cd_pass.webp"
alt="觸發 Gitlab-CI 執行自動化部署" width="700">&lt;figcaption>
&lt;p>觸發 Gitlab-CI 執行自動化部署&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>可以看到部署成功，我們也來看看 Runner 運作狀況：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/cd_runner.webp"
alt="Runner 運作狀況" width="800">&lt;figcaption>
&lt;p>Runner 運作狀況&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>看到他成功將服務給部署到 &lt;code>https://laravel-gitlab-cicd-heroku.herokuapp.com/&lt;/code>。&lt;/p>
&lt;br>
&lt;p>既然已經部署好了，當然要去看一下我們的網頁啊，但當我們打開部署好的網頁，會發現跳出 500 Error，雖然他與我們 CI/CD 沒有關係，但我們還是試著解決，那這個問題會發生是因為我們沒有給環境變數的 APP_KEY，這個 Key 可以在專案的 .env 取得，拿到後開啟 Heroku → Setting → Config vars 將 APP_KEY 設定上去。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/key.webp"
alt="Runner 運作狀況" width="900">&lt;figcaption>
&lt;p>Runner 運作狀況&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>最後重新整理 &lt;code>https://laravel-gitlab-cicd-heroku.herokuapp.com/&lt;/code>，就可以看到我們部署上去的網站囉！&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/laravel-gitlab-cicd-heroku/laravel_show.webp"
alt="透過 CD 部署到 Heroku 的 Laravel 首頁" width="1000">&lt;figcaption>
&lt;p>透過 CD 部署到 Heroku 的 Laravel 首頁&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h2>參考資料&lt;span class="hx-absolute -hx-mt-20" id="參考資料">&lt;/span>
&lt;a href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Gitlab-CI 入門實作教學 - 單元測試篇：&lt;a href="https://nick-chen.medium.com/gitlab-ci-%E5%85%A5%E9%96%80%E7%AD%86%E8%A8%98-%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6%E7%AF%87-156455e2ad9f" target="_blank" rel="noopener">https://nick-chen.medium.com/gitlab-ci-%E5%85%A5%E9%96%80%E7%AD%86%E8%A8%98-%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6%E7%AF%87-156455e2ad9f&lt;/a>&lt;/p>
&lt;p>Gitlab-CI 自動化部屬部署：&lt;a href="https://medium.com/@nick03008/%E6%95%99%E5%AD%B8-gitlab-ci-%E5%85%A5%E9%96%80%E5%AF%A6%E4%BD%9C-%E8%87%AA%E5%8B%95%E5%8C%96%E9%83%A8%E7%BD%B2%E7%AF%87-ci-cd-%E7%B3%BB%E5%88%97%E5%88%86%E4%BA%AB%E6%96%87-cbb5100a73d4" target="_blank" rel="noopener">https://medium.com/@nick03008/%E6%95%99%E5%AD%B8-gitlab-ci-%E5%85%A5%E9%96%80%E5%AF%A6%E4%BD%9C-%E8%87%AA%E5%8B%95%E5%8C%96%E9%83%A8%E7%BD%B2%E7%AF%87-ci-cd-%E7%B3%BB%E5%88%97%E5%88%86%E4%BA%AB%E6%96%87-cbb5100a73d4&lt;/a>&lt;/p>
&lt;p>部署 Laravel 於 Heroku 搭配 Gitlab CI/CD：&lt;a href="https://medium.com/@vip131430g/%E9%83%A8%E7%BD%B2-laravel-%E6%96%BC-heroku-%E6%90%AD%E9%85%8D-gitlab-ci-cd-6d59a66aebdb" target="_blank" rel="noopener">https://medium.com/@vip131430g/%E9%83%A8%E7%BD%B2-laravel-%E6%96%BC-heroku-%E6%90%AD%E9%85%8D-gitlab-ci-cd-6d59a66aebdb&lt;/a>&lt;/p></description></item><item><title>如何從頭打造專屬的 GitLab CI/CD</title><link>https://pin-yi.me/blog/git-or-cicd/gitlab-cicd/</link><pubDate>Thu, 26 May 2022 00:00:00 +0000</pubDate><guid>https://pin-yi.me/blog/git-or-cicd/gitlab-cicd/</guid><description>
&lt;p>自從上次學完 Jenkins 及 Ansible CI/CD，就覺得 CI/CD 實在太酷了！能夠自動化的去持續整合 (Continuous Integration, CI) 以及持續佈署 (Continuous Deployment,CD) 專案，再加上這幾天複習了 Git 的使用方法，突然想到，要怎麼設定我們將程式推到遠端的 Git Repo，能夠再搭配 CI/CD 去做測試，並且把程式碼自動部署到正式的服務機器設備上呢？&lt;/p>
&lt;br>
&lt;p>那我們就開始囉！此篇會複習一下 CI/CD 並且說明 GitLab CI/CD 運作的原理，關於實作部分會放到下一篇文章 &lt;a href="../laravel-gitlab-cicd-heroku/" >部署 Laravel 於 Heroku 搭配 GitLab CI/CD&lt;/a>&lt;/p>
&lt;p>對了工商一下，剛剛有提到的 Jenkins 及 Ansible CI/CD 總共有 3 篇文章，還沒看過的可以先飛過去看一下歐 👇👇👇&lt;/p>
&lt;p>&lt;a href="../../rd/jenkins-ansible/" >Jenkins 及 Ansible IT 自動化 CI/CD 介紹&lt;/a>&lt;/p>
&lt;p>&lt;a href="../../rd/jenkins/" >使用 Jenkins 設定 GitHub 觸發程序並通知 Telegram Bot&lt;/a>&lt;/p>
&lt;p>&lt;a href="../../rd/ansible/" >Ansible 介紹與實作 (Inventory、Playbooks、Module、Template、Handlers)&lt;/a>&lt;/p>
&lt;br>
&lt;p>老樣子文章也會同步到 Github，會附上範例中的程式碼，有需要的也可以去查看歐！ &lt;a href="https://github.com/880831ian/GitLab-CICD" target="_blank" rel="noopener">Github 程式碼連結&lt;/a> 💓&lt;/p>
&lt;br>
&lt;h2>GitLab CI/CD&lt;span class="hx-absolute -hx-mt-20" id="gitlab-cicd">&lt;/span>
&lt;a href="#gitlab-cicd" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>GitLab CI/CD 是 GitLab 內建強大的工具，在 GitHub 被稱為 Github Actions，這個之後有空再來介紹 XD，回歸正題，GitLab CI/CD 可以讓我們持續整合和部署，且不需要使用第三方的應用程式來整合。我們來複習一下 &lt;code>持續整合 CI&lt;/code>、&lt;code>持續部署 CD &lt;/code> 他們是什麼吧：&lt;/p>
&lt;br>
&lt;h3>持續整合 CI&lt;span class="hx-absolute -hx-mt-20" id="持續整合-ci">&lt;/span>
&lt;a href="#%e6%8c%81%e7%ba%8c%e6%95%b4%e5%90%88-ci" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>一個處於開發階段的專案或是軟體，它被我們放在 GitLab 的 Repository 裡，開發人員每天會推送不同的程式碼到 GitLab 上，GitLab 持續整合 CI 會在開發人員每次推送後，自動化的依照我們設定好的腳本進行建構與測試，從而減少開發中的專案發生錯誤的可能性。&lt;/p>
&lt;p>這種做法就被稱作持續整合，對於我們提交給專案的每一個更改、甚至是開發分支，它都是自動且持續地建構和測試，確保新加入的變動，符合我們在專案中所設計的所有測試。&lt;/p>
&lt;br>
&lt;h3>持續部署 CD&lt;span class="hx-absolute -hx-mt-20" id="持續部署-cd">&lt;/span>
&lt;a href="#%e6%8c%81%e7%ba%8c%e9%83%a8%e7%bd%b2-cd" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>持續部署，讓我們不太需要手動的去部署專案服務，而是將其設置為自動化部署，完全不需要有人工去干涉，減少了人為的部署錯誤。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/gitlab-cicd/cicd.webp"
alt="GitLab CI/CD (圖片來源：GitLab Agile Planning)" width="800">&lt;figcaption>
&lt;p>GitLab CI/CD (圖片來源：&lt;a href="https://about.gitlab.com/solutions/agile-delivery/" target="_blank" rel="noopener">GitLab Agile Planning&lt;/a>)&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>大致了解是如何運作之後，我們接著聊聊上面有提到的 &lt;code>設定好的腳本&lt;/code>：&lt;/p>
&lt;h3>.gitlab-ci.yml&lt;span class="hx-absolute -hx-mt-20" id="gitlab-ciyml">&lt;/span>
&lt;a href="#gitlab-ciyml" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>GitLab CI/CD 的工作原理是，要在專案根目錄新增一個名為 &lt;code>.gitlab-ci.yml&lt;/code> 的文件 (記得文件名稱開頭有 &lt;code>.&lt;/code> ，我一開始忘記要加，想說怎麼都沒有反應 😅 )，也就是我們上面說的 &lt;code>設定好的腳本&lt;/code>，可以先將所需建構、測試和部署的腳本編寫完成，以及定義很多規則，例如執行命令的先後順序、部署應用程式的位置以及指定是否自動運行或是手動觸發腳本等。&lt;/p>
&lt;p>將 &lt;code>.gitlab-ci.yml&lt;/code> 文件放入 Repository 裡，就會觸發 CI，負責管理的 GitLab-CI 就會依照 &lt;code>.gitlab-ci.yml&lt;/code> 設定檔來啟動名為 &lt;code>GitLab Runner&lt;/code> 的工具來運行腳本，這個 &lt;code>GitLab Runner&lt;/code> 我們放到後面來說，我們先來說說 &lt;code>.gitlab-ci.yml&lt;/code> 這個設定檔要怎麼編寫，以及編寫後的流程。&lt;/p>
&lt;br>
&lt;p>這是一個示範的 &lt;code>.gitlab-ci.yml&lt;/code>，選自優良的 &lt;a href="https://docs.gitlab.com/ee/ci/quick_start/" target="_blank" rel="noopener">GitLab&lt;/a> XD，為了說明有小修改程式碼，程式碼也會放在 &lt;a href="https://github.com/880831ian/GitLab-CICD" target="_blank" rel="noopener">GitHub&lt;/a> 上歐：&lt;/p>
&lt;ul>
&lt;li>.gitlab-ci.yml&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">stages&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">build&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">deploy&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">cache&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">paths&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">config/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">build-job&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">stage&lt;/span>: &lt;span style="color:#ae81ff">build&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">script&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">echo &amp;#34;Hello, $GITLAB_USER_LOGIN!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">test-job1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">stage&lt;/span>: &lt;span style="color:#ae81ff">test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">script&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">echo &amp;#34;This job tests something&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">test-job2&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">stage&lt;/span>: &lt;span style="color:#ae81ff">test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">before_script&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">echo &amp;#34;This job tests something, but takes more time than test-job1.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">script&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">echo &amp;#34;After the echo commands complete, it runs the sleep command for 20 seconds&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">echo &amp;#34;which simulates a test that runs 20 seconds longer than test-job1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">sleep 20&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">deploy-prod&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">stage&lt;/span>: &lt;span style="color:#ae81ff">deploy&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">script&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">echo &amp;#34;This job deploys something from the $CI_COMMIT_BRANCH branch.&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;p>那我來簡單說明一下上面這些設定檔案的功能：&lt;/p>
&lt;ul>
&lt;li>stages：代表這個 CI 設定檔有三個 stage 要跑，一個是 build、一個 test、一個 deploy，他們的順序也決定 CI 運作的順序，由 build → test → deploy，假如 test 沒有通過，就不會執行 deploy。&lt;/li>
&lt;li>cache：我們在寫 CI 時，常常需要裝 package，但我不想每次都重新跑一次，所以可以寫一個 cache，不要讓 GitLab 每次都重新拉新的 package。&lt;/li>
&lt;li>build-job、test-job1、test-job2、deploy-prod：代表我有 4 個 job 要執行，每個 job 裡面有不同的任務，也是顯示在 Pipeline 的名稱。&lt;/li>
&lt;li>stage：他現在要執行的階段，對應到 stages。&lt;/li>
&lt;li>before_script：可以把它當先需要先執行的指令，後面才會執行主要的 script 指令。所以需要安裝的可以先寫在這裡面。&lt;/li>
&lt;li>script：主指令，在實際運行的腳本中，通常會見到多行的指令被依序執行。&lt;/li>
&lt;li>$CI_COMMIT_BRANC：當然 &lt;code>.gitlab-ci.yml&lt;/code> 檔案也可以帶入參數，這個部分我們留到 &lt;a href="../laravel-gitlab-cicd-heroku/" >部署 Laravel 於 Heroku 搭配 GitLab CI/CD&lt;/a> 搭配實際操作來說明。&lt;/li>
&lt;/ul>
&lt;br>
&lt;p>當然 &lt;code>.gitlab-ci.yml&lt;/code> 有很多功能，上面只是簡單說明比較常用的，當你不確定自己寫的 CI 設定檔有沒有問題，沒關係就直接推上去，GitLab 還會先檢查一下設定檔是不是正確：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/gitlab-cicd/error.webp"
alt="GitLab CI/CD 檢查格式有錯" width="600">&lt;figcaption>
&lt;p>GitLab CI/CD 檢查格式有錯&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>當我們將 &lt;code>.gitlab-ci.yml&lt;/code> 連同專案一起推到 GitLab 上後，我們可以看到它會開始執行我們所寫的腳本，會顯示整個執行過程：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/gitlab-cicd/ci.webp"
alt="GitLab CI/CD 執行過程" width="1000">&lt;figcaption>
&lt;p>GitLab CI/CD 執行過程&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>查看執行的狀態：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/gitlab-cicd/status.webp"
alt="GitLab CI/CD 狀態" width="800">&lt;figcaption>
&lt;p>GitLab CI/CD 狀態&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>也可以在 GitLab Pipeline 看到執行的流程：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/gitlab-cicd/pipeline.webp"
alt="GitLab CI/CD Pipeline" width="800">&lt;figcaption>
&lt;p>GitLab CI/CD Pipeline&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h3>GitLab CI Runner&lt;span class="hx-absolute -hx-mt-20" id="gitlab-ci-runner">&lt;/span>
&lt;a href="#gitlab-ci-runner" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>我們上面有提到，我們在 CI 跑腳本，需要一個 Server 來代替 GitLab 來讓我們執行，這個 Server 我們稱為 Runner。我們來看一下整個執行的圖片：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/gitlab-cicd/gitlab-cicd.webp"
alt="Gitlab CI/CD 實際執行流程 (圖片來源：Gitlab-CI 入門實作教學 - 單元測試篇)" width="600">&lt;figcaption>
&lt;p>Gitlab CI/CD 實際執行流程 (圖片來源：&lt;a href="https://nick-chen.medium.com/gitlab-ci-%E5%85%A5%E9%96%80%E7%AD%86%E8%A8%98-%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6%E7%AF%87-156455e2ad9f" target="_blank" rel="noopener">Gitlab-CI 入門實作教學 - 單元測試篇&lt;/a>)&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>那這個 Runner 有分成兩種：&lt;/p>
&lt;ul>
&lt;li>共享 Runner (Shared Runners)&lt;/li>
&lt;li>自架 Runner (Specific Runners)&lt;/li>
&lt;/ul>
&lt;br>
&lt;h4>共享 Runner (Shared Runners)&lt;span class="hx-absolute -hx-mt-20" id="共享-runner-shared-runners">&lt;/span>
&lt;a href="#%e5%85%b1%e4%ba%ab-runner-shared-runners" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>因為本文章以及後續 &lt;a href="../laravel-gitlab-cicd-heroku/" >部署 Laravel 於 Heroku 搭配 GitLab CI/CD&lt;/a> 文章所使用的平台是 &lt;a href="https://gitlab.com" target="_blank" rel="noopener">gitlab.com&lt;/a>，由官方所提供，所以我們直接使用共享 Runner，可以在 repository Settings → CI / CD → Runners 中找到，有不少官方提供的共享 Runner 可以使用，也不需要做任何設定。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/gitlab-cicd/sharedrunners.webp"
alt="GitLab CI/CD 共享 Runner" width="800">&lt;figcaption>
&lt;p>GitLab CI/CD 共享 Runner&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>但也有幾個缺點：&lt;/p>
&lt;ul>
&lt;li>因為是共享，所以 Server 資源也會共享，理論上多人使用的速度還是會比較慢。&lt;/li>
&lt;li>以及如果是開源專案，是完全免費。但如果是私人專案，一個月有 400 分鐘的 CI 執行時間限制。&lt;/li>
&lt;/ul>
&lt;br>
&lt;h4>自架 Runner (Specific Runners)&lt;span class="hx-absolute -hx-mt-20" id="自架-runner-specific-runners">&lt;/span>
&lt;a href="#%e8%87%aa%e6%9e%b6-runner-specific-runners" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/gitlab-cicd/gitlab-runner.webp"
alt="GitLab CI/CD 自架 Runner (圖片來源：Best Practice for DevOps on GitLab and GCP : GitLab Runner 簡介與安裝 - Day 7)" width="600">&lt;figcaption>
&lt;p>GitLab CI/CD 自架 Runner (圖片來源：&lt;a href="https://ithelp.ithome.com.tw/articles/10214266" target="_blank" rel="noopener">Best Practice for DevOps on GitLab and GCP : GitLab Runner 簡介與安裝 - Day 7&lt;/a>)&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>GitLab Server 和 GitLab Runner 是 GitLab CI/CD 中不可或缺的兩者，但如果像公司是自架 GitLab，首先要先找一台電腦或是 Server 做為 Runner，那我們這邊以 Docker 作示範。&lt;/p>
&lt;p>GitLab Runner 的建議建置步驟如下：&lt;/p>
&lt;ol>
&lt;li>準備/安裝一個 GitLab Server (這邊我們直接使用 &lt;a href="https://gitlab.com" target="_blank" rel="noopener">gitlab.com&lt;/a>)&lt;/li>
&lt;li>安裝一個與 GitLab Server 對應版本的 GitLab Runner&lt;/li>
&lt;li>在安裝 GitLab Runner 的設備上設定 &lt;a href="https://docs.gitlab.com/runner/executors/" target="_blank" rel="noopener">Executor&lt;/a>&lt;/li>
&lt;/ol>
&lt;br>
&lt;p>什麼是 Executor ?&lt;/p>
&lt;p>如果把 GitLab Runner 當成一個工廠來看，那 Executor 就是工廠內一個又一個的產線，同一個工廠內可以擁有不同種類的產線，Runner 與 Executor 之間的關係就是如此，這些產線會根據專案中 &lt;code>.gitlab-ci.yml&lt;/code> 的內容，決定產線以及如何產出開發者期望的產品。&lt;/p>
&lt;p>另外 Executor 的種類非常多，可以看下方這些圖片，因為我們最常使用的就是 Docker，所以我們等等的範例，也是建置在 Docker 之上！&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/gitlab-cicd/executor.webp"
alt="GitLab Runner Executors" width="700">&lt;figcaption>
&lt;p>GitLab Runner Executors&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>那我們就開始來實作我們的 GitLab Runner 吧：&lt;/p>
&lt;ol>
&lt;li>首先，我們回去剛剛在 repository Settings → CI / CD → Runners 左側的 Specific runners&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/gitlab-cicd/specificrunners.webp"
alt="GitLab Runner Executors" width="700">&lt;figcaption>
&lt;p>GitLab Runner Executors&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>可以看到一個註冊的 URL 以及 Token，這個我們在設定 Executor 會使用到！&lt;/p>
&lt;br>
&lt;ol start="2">
&lt;li>接下來開始安裝 GitLab Runner，我們使用 Docker，以下是 Docker 執行的指令：本此使用 &lt;a href="https://hub.docker.com/layers/gitlab-runner/gitlab/gitlab-runner/alpine-v15.0.0/images/sha256-f44b39d92aa31186b4d6b986d1c3ffbf8ef4228c2e070410a7a417fb0aa159ce?context=explore" target="_blank" rel="noopener">gitlab-runner&lt;/a> 版本是 alpine-v15.0.0&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker run -d --name gitlab-runner --restart always &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-v ~/Shared/gitlab-runner/config:/etc/gitlab-runner &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-v /var/run/docker.sock:/var/run/docker.sock &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>gitlab/gitlab-runner:alpine-v15.0.0&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="3">
&lt;li>接著進入容器裡面，使用 &lt;code>docker exec -it gitlab-runner gitlab-runner register&lt;/code> 來註冊，可以參考下方圖片，輸入 URL 以及 自己的 Token：&lt;/li>
&lt;/ol>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/gitlab-cicd/register_executor.webp"
alt="GitLab Runner 註冊 Executors" width="1000">&lt;figcaption>
&lt;p>GitLab Runner 註冊 Executors&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;ol start="4">
&lt;li>可以回到 gitlab.com 查看 Specific runners 下方是否多了我們剛剛所註冊的 GitLab-Runner&lt;/li>
&lt;/ol>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/gitlab-cicd/available_runners.webp"
alt="GitLab Available specific runners" width="700">&lt;figcaption>
&lt;p>GitLab Available specific runners&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h3>GitLab CD&lt;span class="hx-absolute -hx-mt-20" id="gitlab-cd">&lt;/span>
&lt;a href="#gitlab-cd" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>GitLab CD 其實就是在 &lt;code>.gitlab-ci.yml&lt;/code> 後面加上我們要部署的設定，透過 CI 整合完，我們可以設定他要部署到哪一台機器或是設備上這部分就放到下一篇文章直接用實作來告訴大家要怎麼使用吧！，請大家接續看下一篇 &lt;a href="../laravel-gitlab-cicd-heroku/" >部署 Laravel 於 Heroku 搭配 GitLab CI/CD&lt;/a> ，一起學習吧 GoGo !&lt;/p>
&lt;br>
&lt;h2>參考資料&lt;span class="hx-absolute -hx-mt-20" id="參考資料">&lt;/span>
&lt;a href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Get started with GitLab CI/CD：&lt;a href="https://docs.gitlab.com/ee/ci/quick_start/" target="_blank" rel="noopener">https://docs.gitlab.com/ee/ci/quick_start/&lt;/a>&lt;/p>
&lt;p>Best Practice for DevOps on GitLab and GCP : GitLab CI/CD - Day 6：&lt;a href="https://ithelp.ithome.com.tw/articles/10214114" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10214114&lt;/a>&lt;/p>
&lt;p>Gitlab-CI 入門實作教學 - 單元測試篇：&lt;a href="https://nick-chen.medium.com/gitlab-ci-%E5%85%A5%E9%96%80%E7%AD%86%E8%A8%98-%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6%E7%AF%87-156455e2ad9f" target="_blank" rel="noopener">https://nick-chen.medium.com/gitlab-ci-%E5%85%A5%E9%96%80%E7%AD%86%E8%A8%98-%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6%E7%AF%87-156455e2ad9f&lt;/a>&lt;/p>
&lt;p>如何使用 GitLab CI：&lt;a href="https://medium.com/@mvpdw06/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-gitlab-ci-ebf0b68ce24b" target="_blank" rel="noopener">https://medium.com/@mvpdw06/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-gitlab-ci-ebf0b68ce24b&lt;/a>&lt;/p></description></item><item><title>Ansible 介紹與實作 (Inventory、Playbooks、Module、Template、Handlers)</title><link>https://pin-yi.me/blog/git-or-cicd/ansible/</link><pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate><guid>https://pin-yi.me/blog/git-or-cicd/ansible/</guid><description>
&lt;p>本篇文章是接續前面兩篇 &lt;a href="../jenkins-ansible/" >Jenkins 及 Ansible IT 自動化 CI/CD 介紹&lt;/a> 跟 &lt;a href="../jenkins-github-tg-bot/" >使用 Jenkins 設定 GitHub 觸發程序並通知 Telegram Bot&lt;/a> 文章，歡迎大家先去觀看前面兩篇文章 🤪&lt;/p>
&lt;p>本篇所使用到的程式碼都會整理於 &lt;a href="https://github.com/880831ian/Ansible" target="_blank" rel="noopener">GitHub 連結&lt;/a>，大家有興趣可以去瀏覽看看歐！&lt;/p>
&lt;br>
&lt;h2>Ansible 是如何運作的？&lt;span class="hx-absolute -hx-mt-20" id="ansible-是如何運作的">&lt;/span>
&lt;a href="#ansible-%e6%98%af%e5%a6%82%e4%bd%95%e9%81%8b%e4%bd%9c%e7%9a%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>在 Ansible 世界裡，我們會透過 &lt;code>Inventory 檔案&lt;/code> 來定義有哪些的 &lt;code>Managed Node&lt;/code>，並藉由 &lt;code>SSH&lt;/code> 與 &lt;code>Python&lt;/code> 來進行溝通。那我們先來看一張圖：&lt;/p>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/ansible/run.webp"
alt="Ansible 運作原理 (圖片來源：七分鐘掌握 Ansible 核心觀念)" width="600">&lt;figcaption>
&lt;p>Ansible 運作原理 (圖片來源：&lt;a href="https://school.soft-arch.net/courses/28546/lectures/655359" target="_blank" rel="noopener">七分鐘掌握 Ansible 核心觀念&lt;/a>)&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>誒 😱 突然多了很多新名詞，沒關係我來一一解釋，首先我們先從 &lt;code>Managed Node&lt;/code> 是什麼，以及圖片中的 &lt;code>Control machine&lt;/code> 開始說起吧！&lt;/p>
&lt;h3>什麼是控制主機及被控節點？&lt;span class="hx-absolute -hx-mt-20" id="什麼是控制主機及被控節點">&lt;/span>
&lt;a href="#%e4%bb%80%e9%ba%bc%e6%98%af%e6%8e%a7%e5%88%b6%e4%b8%bb%e6%a9%9f%e5%8f%8a%e8%a2%ab%e6%8e%a7%e7%af%80%e9%bb%9e" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>在 Ansible 裡，我們會把所有機器的角色做以下的區分：&lt;/p>
&lt;ul>
&lt;li>控制主機 (Control Machine)：顧名思義，這類主機可以透過運行 Ansible 的劇本 (Playbooks) 對被控節點進行部署。&lt;/li>
&lt;li>被控節點 (Managed Node)：也稱為遙控節點 (Remote Node)。相對於控制主機，這類節點就是我們透過 Ansible 進行部署的對象。&lt;/li>
&lt;/ul>
&lt;p>所以代表我們在操作這邊就是 Control Machine，要部署的機器就是 Managed Node，透過 SSH 來做連線。但什麽是 &lt;code>Inventory&lt;/code> 跟 &lt;code>Playbooks&lt;/code> 呢？&lt;/p>
&lt;br>
&lt;h3>什麼是 Ansible Inventory&lt;span class="hx-absolute -hx-mt-20" id="什麼是-ansible-inventory">&lt;/span>
&lt;a href="#%e4%bb%80%e9%ba%bc%e6%98%af-ansible-inventory" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;code>Inventory&lt;/code> 這個單字本身有&lt;strong>詳細目錄&lt;/strong>、&lt;strong>清單&lt;/strong>和&lt;strong>列表&lt;/strong>的意思。在這裡我們可以把它理解成一份主機列表，可以透過它來定義每個 Managed Node 的代號、IP 位址、連線設定和群組。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ vim hosts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ansible_ssh_host：遠端 SSH 主機位址&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ansible_ssh_port：遠端 SSH Port&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ansible_ssh_user：遠端 SSH 使用者名稱&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ansible_ssh_private_key_file：本機 SSH 私鑰檔案路徑&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ansible_ssh_pass：遠端 SSH 密碼 (建議使用私鑰)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>local&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>server1 ansible_ssh_host&lt;span style="color:#f92672">=&lt;/span>127.0.0.1 ansible_ssh_port&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">55000&lt;/span> ansible_ssh_pass&lt;span style="color:#f92672">=&lt;/span>docker&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>所以我們可以在這邊輸入很多個主機來做管理，可以把它想成一個設定檔。&lt;/p>
&lt;br>
&lt;h3>什麼是 Ansible Playbooks&lt;span class="hx-absolute -hx-mt-20" id="什麼是-ansible-playbooks">&lt;/span>
&lt;a href="#%e4%bb%80%e9%ba%bc%e6%98%af-ansible-playbooks" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>再談 Ansible Playbooks 之前，先說明我們要怎麼去操作 Ansible？一般來說，我們可以使用 Ad-Hoc Commands 和 Playbooks 兩種方式來操作 Ansible。&lt;/p>
&lt;br>
&lt;h4>Ad-Hoc Commands 是什麼？&lt;span class="hx-absolute -hx-mt-20" id="ad-hoc-commands-是什麼">&lt;/span>
&lt;a href="#ad-hoc-commands-%e6%98%af%e4%bb%80%e9%ba%bc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>Ad hoc 可以翻譯成&lt;strong>簡短地指令&lt;/strong>，也就是我們常用的指令模式，最常見的 &lt;code>ping&lt;/code>和&lt;code>echo&lt;/code> 為例。&lt;/p>
&lt;ul>
&lt;li>&lt;code>ping&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ ansible all -m ping
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>server1 | SUCCESS &lt;span style="color:#f92672">=&lt;/span>&amp;gt; &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_facts&amp;#34;&lt;/span>: &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;discovered_interpreter_python&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/usr/bin/python&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;changed&amp;#34;&lt;/span>: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ping&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;pong&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ul>
&lt;li>&lt;code>echo&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ ansible all -m command -a &lt;span style="color:#e6db74">&amp;#34;echo Hello World&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>server1 | CHANGED | rc&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> &amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Hello World&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>從上面的例子中可以看到 Ad-Hoc Commands 一次只能處理一件事情，這是它與 Playbooks 最大的差異。&lt;/p>
&lt;br>
&lt;h3>Playbooks 是什麼？&lt;span class="hx-absolute -hx-mt-20" id="playbooks-是什麼">&lt;/span>
&lt;a href="#playbooks-%e6%98%af%e4%bb%80%e9%ba%bc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Playbooks 就是字面上的意思為&lt;strong>劇本&lt;/strong>，我們可以先透過寫好的&lt;strong>劇本 (Playbooks)&lt;/strong> 來讓各個 Managed Node 進行指定的&lt;strong>動作 (Plays)&lt;/strong> 和&lt;strong>任務 (Tasks)&lt;/strong>。&lt;/p>
&lt;p>簡而言之，Playbooks 就是 Ansible 的腳本 (Script)，而且比傳統 Shell Script 還要強大好幾百倍的腳本！此外它是使用 &lt;strong>YAML&lt;/strong> 格式，寫 Code 就如同寫文件一樣，簡單易讀。&lt;/p>
&lt;p>有關詳細的&lt;strong>動作 (Plays)&lt;/strong> 和&lt;strong>任務 (Tasks)&lt;/strong>，等我們實際安裝好再來說明 😆&lt;/p>
&lt;br>
&lt;h2>Ansible 安裝與實作&lt;span class="hx-absolute -hx-mt-20" id="ansible-安裝與實作">&lt;/span>
&lt;a href="#ansible-%e5%ae%89%e8%a3%9d%e8%88%87%e5%af%a6%e4%bd%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>安裝之前先讓大家看一下版本吧！大家要記得檢查自己的版本與教學是否相同，如果不同，記得要先查看官網是否有修改內容。&lt;/p>
&lt;h3>版本&lt;span class="hx-absolute -hx-mt-20" id="版本">&lt;/span>
&lt;a href="#%e7%89%88%e6%9c%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>macOS：11.6&lt;/li>
&lt;li>Docker：Docker version 20.10.14, build a224086&lt;/li>
&lt;li>Aansible：ansible [core 2.12.5]&lt;/li>
&lt;/ul>
&lt;br>
&lt;h3>如何安裝 Ansible 在控制主機&lt;span class="hx-absolute -hx-mt-20" id="如何安裝-ansible-在控制主機">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e5%ae%89%e8%a3%9d-ansible-%e5%9c%a8%e6%8e%a7%e5%88%b6%e4%b8%bb%e6%a9%9f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>由於 Ansible 是一套開源的軟體，所以在目前大部分主流作業系統上都可以透過對應的套件管理 (package manager) 進行安裝。&lt;/p>
&lt;p>本人使用 macOS ，所以這邊僅列出 masOS 安裝方式，其他的可以參考&lt;a href="https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html#installing-ansible-on-specific-operating-systems" target="_blank" rel="noopener">官方的安裝指南&lt;/a>。&lt;/p>
&lt;br>
&lt;p>macOS 安裝可以使用兩種方式，官方較推薦使用 &lt;code>pip&lt;/code> 來做安裝：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://pip.pypa.io/en/stable/#" target="_blank" rel="noopener">Pip Install Packages (pip 官方較推薦)&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ sudo pip install ansible&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ul>
&lt;li>&lt;a href="https://formulae.brew.sh/formula/ansible#default" target="_blank" rel="noopener">Homebrew (brew)&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ sudo brew install ansible&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;p>安裝完後，可以使用 &lt;code>--version&lt;/code> 指令來檢查是否安裝完成：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ ansible --version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ansible &lt;span style="color:#f92672">[&lt;/span>core 2.12.5&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> config file &lt;span style="color:#f92672">=&lt;/span> None
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configured module search path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/Users/ian_zhuang/.ansible/plugins/modules&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;/usr/share/ansible/plugins/modules&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ansible python module location &lt;span style="color:#f92672">=&lt;/span> /usr/local/Cellar/ansible/5.7.1/libexec/lib/python3.10/site-packages/ansible
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ansible collection location &lt;span style="color:#f92672">=&lt;/span> /Users/ian_zhuang/.ansible/collections:/usr/share/ansible/collections
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> executable location &lt;span style="color:#f92672">=&lt;/span> /usr/local/bin/ansible
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> python version &lt;span style="color:#f92672">=&lt;/span> 3.10.4 &lt;span style="color:#f92672">(&lt;/span>main, Apr &lt;span style="color:#ae81ff">26&lt;/span> 2022, 19:43:24&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">[&lt;/span>Clang 13.0.0 &lt;span style="color:#f92672">(&lt;/span>clang-1300.0.29.30&lt;span style="color:#f92672">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jinja version &lt;span style="color:#f92672">=&lt;/span> 3.1.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> libyaml &lt;span style="color:#f92672">=&lt;/span> True&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3>如何安裝 Ansible 在被控節點&lt;span class="hx-absolute -hx-mt-20" id="如何安裝-ansible-在被控節點">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e5%ae%89%e8%a3%9d-ansible-%e5%9c%a8%e8%a2%ab%e6%8e%a7%e7%af%80%e9%bb%9e" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>不需要！！！ 透過 Ansible 進行管理的被控節點完全不需要安裝 Ansible。我們只需要確保這個節點可以透過 SSH 與控制主機做溝通，並安裝 Python 2.6 以上版本就可以透過控制主機來進行部署及管理了。&lt;/p>
&lt;br>
&lt;p>那我們為了要模擬，所以我們使用 Docker 來模擬 Managed Node，首先老樣子，一樣先寫一個 Dockerfile 來建立我們的映像檔，此映像檔是微調 &lt;a href="https://github.com/chusiang/ansible-managed-node.dockerfile/blob/master/ubuntu-14.04/Dockerfile" target="_blank" rel="noopener">chusiang/ansible-managed-node.dockerfile&lt;/a> 的內容，修改 ubuntu 版本以及內容作調整，我會把程式碼放在 &lt;a href="https://github.com/880831ian/Ansible" target="_blank" rel="noopener">GitHub 連結&lt;/a> ，以及 &lt;a href="https://hub.docker.com/r/880831ian/ansible-ubuntu-server" target="_blank" rel="noopener">DockerHub 連結&lt;/a>，歡迎大家前去下載使用。&lt;/p>
&lt;br>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span>&lt;span style="color:#e6db74"> ubuntu:22.10&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">LABEL&lt;/span> maintainer&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;880831ian@gmail.com&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># Update the index of available packages.&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> apt-get update&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># Install the requires package.&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> apt-get install -y openssh-server sudo curl wget bash-completion openssl &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> apt-get clean&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># Setting the sshd.&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> mkdir /var/run/sshd&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> echo &lt;span style="color:#e6db74">&amp;#39;root:root&amp;#39;&lt;/span> | chpasswd&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> sed -i &lt;span style="color:#e6db74">&amp;#39;s/PermitRootLogin without-password/PermitRootLogin yes/&amp;#39;&lt;/span> /etc/ssh/sshd_config&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># SSH login fix. Otherwise user is kicked off after login&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> sed &lt;span style="color:#e6db74">&amp;#39;s@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g&amp;#39;&lt;/span> -i /etc/pam.d/sshd&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">ENV&lt;/span> NOTVISIBLE &lt;span style="color:#e6db74">&amp;#34;in users profile&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> echo &lt;span style="color:#e6db74">&amp;#34;export VISIBLE=now&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/profile&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># Create a new user.&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e">#&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># - username: docker&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># - password: docker&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> useradd --create-home --shell /bin/bash &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --password &lt;span style="color:#66d9ef">$(&lt;/span>openssl passwd -1 docker&lt;span style="color:#66d9ef">)&lt;/span> docker&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># Add sudo permission.&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> echo &lt;span style="color:#e6db74">&amp;#39;docker ALL=(ALL) NOPASSWD: ALL&amp;#39;&lt;/span> &amp;gt;&amp;gt; /etc/sudoers&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># Setting ssh public key.&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> wget https://raw.githubusercontent.com/chusiang/ansible-jupyter.dockerfile/master/files/ssh/id_rsa.pub &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -O /tmp/authorized_keys &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> mkdir /home/docker/.ssh &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> mv /tmp/authorized_keys /home/docker/.ssh/ &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> chown -R docker:docker /home/docker/.ssh/ &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> chmod &lt;span style="color:#ae81ff">644&lt;/span> /home/docker/.ssh/authorized_keys &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> chmod &lt;span style="color:#ae81ff">700&lt;/span> /home/docker/.ssh&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">EXPOSE&lt;/span>&lt;span style="color:#e6db74"> 22&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># Run ssh server daemon.&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">CMD&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;/usr/sbin/sshd&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;-D&amp;#34;&lt;/span>]&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;p>接下來將它包成 Image 並啟動他：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ docker build -t ansible-ubuntu-server . &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> docker run --name server1 -d -p 8888:22 ansible-ubuntu-server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>64c51235e34a7ba42c0c45e690201dd80248c9aac76c3b855c99cf63f7f0af7c&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;p>可以用 &lt;code>exec&lt;/code> 進入容器：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>docker exec -it server1 /bin/bash&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3>如何讓 Ansible 操控 Docker 容器？&lt;span class="hx-absolute -hx-mt-20" id="如何讓-ansible-操控-docker-容器">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e8%ae%93-ansible-%e6%93%8d%e6%8e%a7-docker-%e5%ae%b9%e5%99%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>我們在工作目錄下，新增一個 &lt;code>ansible.cfg&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cfg" data-lang="cfg">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">[defaults]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">inventory&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">hosts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">remote_user&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">docker&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">host_key_checking&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">False&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;p>設定 inventory hosts：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>local&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>server1 ansible_ssh_host&lt;span style="color:#f92672">=&lt;/span>127.0.0.1 ansible_ssh_port&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8888&lt;/span> ansible_ssh_pass&lt;span style="color:#f92672">=&lt;/span>docker&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>其中 8888 是我們在啟動時所開放的 Port，也可以自行更改。&lt;/p>
&lt;ul>
&lt;li>&lt;code>ansible_ssh_host&lt;/code>：設為本機的 IP。&lt;/li>
&lt;li>&lt;code>ansible_ssh_port&lt;/code>：設為 &lt;code>docker ps &lt;/code>取得的 SSH Port 也就是我們的 8888。&lt;/li>
&lt;li>&lt;code>ansible_ssh_pass&lt;/code>：因為我們沒有連線用的金鑰，所以直接使用密碼方式做連結。(建議只用於練習環境使用)&lt;/li>
&lt;/ul>
&lt;br>
&lt;h3>Hello World On Managed Node&lt;span class="hx-absolute -hx-mt-20" id="hello-world-on-managed-node">&lt;/span>
&lt;a href="#hello-world-on-managed-node" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>當我們都設置完成後，就可以使用 Terminal 用 Docker 建立好的 Ansible 來練習了！&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ ansible all -m command -a &lt;span style="color:#e6db74">&amp;#39;echo Hello World on Docker.&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>server1 | CHANGED | rc&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> &amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Hello World on Docker.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-orange-100 hx-bg-orange-50 hx-text-orange-800 dark:hx-border-orange-400/30 dark:hx-bg-orange-400/20 dark:hx-text-orange-300">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>ansible 安裝時常見問題&lt;/p>
&lt;p>Q1. server1 | FAILED | rc=-1 &amp;raquo; to use the &amp;lsquo;ssh&amp;rsquo; connection type with passwords or pkcs11_provider, you must install the sshpass program&lt;/p>
&lt;p>Ans1. 會遇到這個問題是因為需要多安裝 sshpass，一般系統安裝 sshpass 很簡單，但在 macOS 上稍微麻煩，詳細可以參考&lt;a href="https://stackoverflow.com/questions/32255660/how-to-install-sshpass-on-mac" target="_blank" rel="noopener">這篇文章&lt;/a>。&lt;/p>
&lt;br>
&lt;p>Q2. ~paramiko/transport.py:236: CryptographyDeprecationWarning: Blowfish has been deprecated&lt;/p>
&lt;p>Ans2. 在我安裝過程中，發現上前幾天才出現這個 Bug 詳細情形可以參考 &lt;a href="https://github.com/paramiko/paramiko/issues/2038" target="_blank" rel="noopener">GitHub issues&lt;/a>，目前解決辦法有降板或是先將錯誤訊息給註解掉，之後再等新的版本出來再更新，大家可以自行選擇，我這邊是直接把出現問題的 &lt;code>transport.py&lt;/code> 內容註解掉，大概位於 236 行，可以看下方圖片。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/ansible/blowfish.webp"
alt="CryptographyDeprecationWarning 錯誤訊息修正" width="450">&lt;figcaption>
&lt;p>CryptographyDeprecationWarning 錯誤訊息修正&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h2>第一個 Playbook&lt;span class="hx-absolute -hx-mt-20" id="第一個-playbook">&lt;/span>
&lt;a href="#%e7%ac%ac%e4%b8%80%e5%80%8b-playbook" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>在我們都安裝好後，要來說說我們剛剛有偷偷提到的 Playbooks 的動作 (Plays) 和任務 (Tasks)。在一份 Playbooks 裡面，可以有多個 Play、多個 Task 和多個 Module：&lt;/p>
&lt;ul>
&lt;li>Play：通常為某個特定的目的，例如：
&lt;ul>
&lt;li>&lt;code>Setup a official website with Drupal&lt;/code> 藉由 Drupal 建置官網&lt;/li>
&lt;li>&lt;code>Restart the API Service&lt;/code> 重開 API 服務&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Task：要實行 Play 這個目的所需做的每個步驟，例如：
&lt;ul>
&lt;li>&lt;code>Install the Nginx&lt;/code> 安裝 Nginx&lt;/li>
&lt;li>&lt;code>Kill the djnago process&lt;/code> 強制停止 django 的行程&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Module：Ansible 所提供的各種操作方式，例如：
&lt;ul>
&lt;li>&lt;code>apt: name=vim state=present&lt;/code> 使用 apt 套件安裝 vim&lt;/li>
&lt;li>&lt;code>command: /sbin/shutdown -r now&lt;/code> 使用 shutdown 的指令關機&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;br>
&lt;p>有點聽不懂吧！我來舉個例子，我們最熟悉的 Hello World，先建立一個 &lt;code>helloworld.yaml&lt;/code> 的檔案：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">helloworld.yaml&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">say &amp;#39;hello world&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hosts&lt;/span>: &lt;span style="color:#ae81ff">all&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">tasks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">echo &amp;#39;hello world&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">command&lt;/span>: &lt;span style="color:#ae81ff">echo &amp;#39;hello world&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">register&lt;/span>: &lt;span style="color:#ae81ff">result&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">print stdout&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">debug&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">msg&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;{{ result.stdout }}&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>可以看到這整個就是 Play，我們想要達到 say &amp;lsquo;hello world&amp;rsquo; 的目的，其中有兩個 name 分別代表兩個 Task，也就是達成 Play 目的所需得步驟。最後 command 與 debug 就是我們的 Module 要怎麼達成這兩個步驟的操作方式。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/ansible/playbooks.gif"
alt="Playbooks 組成結構" width="800">&lt;figcaption>
&lt;p>Playbooks 組成結構&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>我們使用 &lt;code>ansible-playbook&lt;/code> 執行 Playbook，在這個範例中，我們執行了１個 Play、3 個 Tasks 和 2 個 Modules：&lt;/p>
&lt;br>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ ansible-playbook helloworld.yaml&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/ansible/helloworld.webp"
alt="執行 Playbooks" width="1000">&lt;figcaption>
&lt;p>執行 Playbooks&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-rounded-lg hx-border hx-py-2 ltr:hx-pr-4 rtl:hx-pl-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-orange-100 hx-bg-orange-50 hx-text-orange-800 dark:hx-border-orange-400/30 dark:hx-bg-orange-400/20 dark:hx-text-orange-300">
&lt;div class="ltr:hx-pl-3 ltr:hx-pr-2 rtl:hx-pr-3 rtl:hx-pl-2">&lt;/div>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>我們剛剛明明只寫兩個 tasks，為什麼執行就變成三個 tasks？&lt;/p>
&lt;p>這是因為 Ansible 預設會使用 &lt;code>Setup&lt;/code> task 來取得 Managed node 的 facts。關於 facts 的詳細說明，請滑到後面 &lt;a href="#%e5%8f%96%e5%be%97-managed-node-%e7%9a%84-facts" >取得-managed-node-的-facts&lt;/a> 觀看 😬&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;br>
&lt;p>那如果沒有 Ansible 時，我們是怎麼操作的？我會附上 Shell Script 的做法，我們來比較看看吧！&lt;/p>
&lt;br>
&lt;ul>
&lt;li>&lt;strong>Shell Script&lt;/strong> 建立 &lt;code>helloworld.sh&lt;/code> 檔案&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">helloworld.sh&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#! /bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>echo &lt;span style="color:#e6db74">&amp;#34;Hello World&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ul>
&lt;li>執行 &lt;code>helloworld.sh&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>./ helloworld.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Hello World&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;p>看起來 Shell Script 已經夠用了，為什麼還要寫 Playbook 呢？這邊整理幾個理由給大家參考：&lt;/p>
&lt;ol>
&lt;li>用 Ansible 的 Module 可以把很多複雜的指令給標準化，例如不同的 Linux 發行版本在安裝套件時需代各種不同的參數。&lt;/li>
&lt;li>在現有的雲原生 (cloud native) 的架構下，傳統的 Shell Script 已經不敷使用，一般而言 Shell Script 只能對一台機器 (instance) 進行操作。&lt;/li>
&lt;/ol>
&lt;br>
&lt;h2>常用的 Ansible Module 有哪些？&lt;span class="hx-absolute -hx-mt-20" id="常用的-ansible-module-有哪些">&lt;/span>
&lt;a href="#%e5%b8%b8%e7%94%a8%e7%9a%84-ansible-module-%e6%9c%89%e5%93%aa%e4%ba%9b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>接下來簡單介紹一下比較常用到的 8 個 Module：&lt;/p>
&lt;h3>&lt;code>ansible.builtin.apt&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="ansiblebuiltinapt">&lt;/span>
&lt;a href="#ansiblebuiltinapt" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_module.html#ansible-collections-ansible-builtin-apt-module" target="_blank" rel="noopener">apt module&lt;/a> 是給 Debian, Ubuntu 等作業系統使用的套件模組 (Packing Modules)，我們可以透過它管理 apt 套件。類似的有 &lt;code>apt-get&lt;/code>、&lt;code>dpkg&lt;/code>等。&lt;/p>
&lt;ol>
&lt;li>更新套件索引(快取)，等同於 &lt;code>apt-get update&lt;/code> 指令&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Update repositories cache&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.apt&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">update_cache&lt;/span>: &lt;span style="color:#66d9ef">yes&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="2">
&lt;li>安裝 vim 套件&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Install the package &amp;#34;vim&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.apt&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">vim&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">present&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="3">
&lt;li>移除 nano 套件&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Remove &amp;#34;nano&amp;#34; package&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.apt&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">nano&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">absent&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3>&lt;code>ansible.builtin.command&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="ansiblebuiltincommand">&lt;/span>
&lt;a href="#ansiblebuiltincommand" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/command_module.html#ansible-collections-ansible-builtin-command-module" target="_blank" rel="noopener">command module&lt;/a> 是可以在遠端上執行指令的指令模組，但它不支援變數 (variables) 和 &lt;code>&amp;lt;&lt;/code>、&lt;code>&amp;gt;&lt;/code>、&lt;code>|&lt;/code>、&lt;code>;&lt;/code>、&lt;code>&amp;amp;&lt;/code>，若有這類需求要改用 &lt;code>shell&lt;/code> module。&lt;/p>
&lt;ol>
&lt;li>重新開機&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Reboot at now&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.command&lt;/span>: &lt;span style="color:#ae81ff">/sbin/shutdown -r now&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="2">
&lt;li>當某個檔案不存在時才執行指令&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">create .ssh directory&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.command&lt;/span>: &lt;span style="color:#ae81ff">mkdir .ssh creates=.ssh/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="3">
&lt;li>先切換目錄再執行指令&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">cat /etc/passwd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.command&lt;/span>: &lt;span style="color:#ae81ff">cat passwd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">args&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">chdir&lt;/span>: &lt;span style="color:#ae81ff">/etc&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3>&lt;code>ansible.builtin.copy&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="ansiblebuiltincopy">&lt;/span>
&lt;a href="#ansiblebuiltincopy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html#ansible-collections-ansible-builtin-copy-module" target="_blank" rel="noopener">copy moudule&lt;/a> 是從本地複製檔案到遠端的檔案模組，若有使用變數需求，可以改用 &lt;code>template&lt;/code>。它類似 Linux 指令的 &lt;code>scp&lt;/code>。&lt;/p>
&lt;ol>
&lt;li>複製 ssh public key 到遠端 (chmod 644 /target/file)&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">copy ssh public key to remote node&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.copy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#ae81ff">files/id_rsa.pub&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/home/docker/.ssh/authorized_keys&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">docker&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">docker&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#ae81ff">0644&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="2">
&lt;li>複製 ssh public key 到遠端 (chmod u=rw,g=r,o=r /target/file)&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">copy ssh public key to remote node&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.copy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#ae81ff">files/id_rsa.pub&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/home/docker/.ssh/authorized_keys&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">docker&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">docker&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;u=rw,g=r,o=r&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="3">
&lt;li>複製 nginx vhost 設定檔到遠端，並備份原有的檔案&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">copy nginx vhost and backup the original&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.copy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#ae81ff">files/ironman.conf&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/etc/nginx/sites-available/default&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#ae81ff">0644&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">backup&lt;/span>: &lt;span style="color:#66d9ef">yes&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3>&lt;code>ansible.builtin.file&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="ansiblebuiltinfile">&lt;/span>
&lt;a href="#ansiblebuiltinfile" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html#ansible-collections-ansible-builtin-file-module" target="_blank" rel="noopener">file module&lt;/a> 是在遠端建立和刪除檔案 (file)、目錄 (directory) 和軟連結 (symlinks) 的檔案模組。它類似的 Linux 指令為 &lt;code>chown&lt;/code>、&lt;code>mkdir&lt;/code> 和 &lt;code>touch&lt;/code>。&lt;/p>
&lt;ol>
&lt;li>建立檔案 (touch)，並設定權限為 644&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">touch a file, and set the permissions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.file&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#ae81ff">/etc/motd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">touch&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;u=rw,g=r,o=r&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="2">
&lt;li>建立目錄 (mkdir)，並設定檔案擁有者為 docker&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">create a directory, and set the permissions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.file&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#ae81ff">/home/docker/.ssh/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">directory&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">docker&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;700&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="3">
&lt;li>建立軟連結 (ln)&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">create a symlink file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.file&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#ae81ff">/tmp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/home/docker/tmp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">link&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3>&lt;code>ansible.builtin.lineinfile&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="ansiblebuiltinlineinfile">&lt;/span>
&lt;a href="#ansiblebuiltinlineinfile" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/lineinfile_module.html" target="_blank" rel="noopener">lineinfile&lt;/a> module 是個可用正規表示法對檔案進行插入或取代文字的檔案模組。它類似的 Linux 指令是 &lt;code>sed&lt;/code>。&lt;/p>
&lt;ol>
&lt;li>移除 docker 使用者的 sudo 權限&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">remove sudo permission of docker&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.lineinfile&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/etc/sudoers&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">absent&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">regexp&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;^docker&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="2">
&lt;li>在 /etc/hosts 檔案裡用 127.0.0.1 localhost 取代開頭為 127.0.0.1 的一行&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">set localhost as 127.0.0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.lineinfile&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/etc/hosts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">regexp&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;^127\.0\.0\.1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">line&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;127.0.0.1 localhost&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#ae81ff">0644&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3>&lt;code>ansible.builtin.service&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="ansiblebuiltinservice">&lt;/span>
&lt;a href="#ansiblebuiltinservice" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/service_module.html#ansible-collections-ansible-builtin-service-module" target="_blank" rel="noopener">service module&lt;/a> 是用來管理遠端系統服務的系統模組。它類似的 Linux 指令為 &lt;code>service&lt;/code>。&lt;/p>
&lt;ol>
&lt;li>啟動 Nginx&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">start nginx service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.service&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">started&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="2">
&lt;li>停止 Nginx&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">stop nginx service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.service&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">stopped&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="3">
&lt;li>重開網路服務&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">restart network service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.service&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">network&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">restarted&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">args&lt;/span>: &lt;span style="color:#ae81ff">eth0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3>&lt;code>ansible.builtin.shell&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="ansiblebuiltinshell">&lt;/span>
&lt;a href="#ansiblebuiltinshell" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/shell_module.html#ansible-collections-ansible-builtin-shell-module" target="_blank" rel="noopener">shell module&lt;/a> 是可以在遠端用 &lt;code>/bin/sh&lt;/code> 執行指令的指令模組，支援變數 (variables) 和 &lt;code>&amp;lt;&lt;/code>、&lt;code>&amp;gt;&lt;/code>、&lt;code>|&lt;/code>、&lt;code>;&lt;/code> 和 &lt;code>&amp;amp;&lt;/code> 等運算。&lt;/p>
&lt;ol>
&lt;li>藉由 &lt;code>ls&lt;/code> 和 &lt;code>wc&lt;/code> 檢查檔案數量&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">check files number&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.shell&lt;/span>: &lt;span style="color:#ae81ff">ls /home/docker/ | wc -l&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="2">
&lt;li>把所有的 Python 行程給砍掉&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">kill all python process&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.shell&lt;/span>: &lt;span style="color:#ae81ff">kill -9 $(ps aux | grep python | awk &amp;#39;{ print $2 }&amp;#39;)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3>&lt;code>ansible.builtin.stat&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="ansiblebuiltinstat">&lt;/span>
&lt;a href="#ansiblebuiltinstat" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/stat_module.html#ansible-collections-ansible-builtin-stat-module" target="_blank" rel="noopener">stat module&lt;/a> 是用來檢查檔案狀態的檔案模組。其類似的 Linux 指令為 &lt;code>stat&lt;/code>。&lt;/p>
&lt;ol>
&lt;li>檢查檔案是否存在，若不存在則建立他。&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">check the &amp;#39;vimrc&amp;#39; target exists&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.stat&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#ae81ff">/home/docker/.vimrc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">register&lt;/span>: &lt;span style="color:#ae81ff">stat_vimrc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">touch vimrc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">file&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#ae81ff">/home/docker/.vimrc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.state&lt;/span>: &lt;span style="color:#ae81ff">touch&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;u=rw,g=r,o=r&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">when&lt;/span>: &lt;span style="color:#ae81ff">stat_vimrc.stat.exists == false&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="2">
&lt;li>取的某檔案的 md5sum&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Use md5sum to calculate checksum&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.stat&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#ae81ff">/path/to/something&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">checksum_algorithm&lt;/span>: &lt;span style="color:#ae81ff">md5sum&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3>其他&lt;span class="hx-absolute -hx-mt-20" id="其他">&lt;/span>
&lt;a href="#%e5%85%b6%e4%bb%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>其他還有很多可以使用的 Module ，詳情可以查看 &lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/index.html" target="_blank" rel="noopener">Ansible.Builtin&lt;/a>。&lt;/p>
&lt;br>
&lt;h2>Ansible 發送通知到 Telegram Bot&lt;span class="hx-absolute -hx-mt-20" id="ansible-發送通知到-telegram-bot">&lt;/span>
&lt;a href="#ansible-%e7%99%bc%e9%80%81%e9%80%9a%e7%9f%a5%e5%88%b0-telegram-bot" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>剛剛看了很多內建的模組，當然 Ansible 還有很多好玩的模組可以使用，我們就跟 &lt;a href="../jenkins-github-tg-bot/" >使用 Jenkins 設定 GitHub 觸發程序並通知 Telegram Bot 文章&lt;/a> 一樣，將我們取得的內容傳送到 Telegram Bot 吧！那首先我們要先創造一個 Telegram Bot，在 Telegram 找到一個機器人叫 &lt;code>BotFather&lt;/code> 的官方機器人帳號。並使用指令 &lt;code>/newbot&lt;/code>，會看到一下畫面：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/ansible/telegram_1.webp"
alt="Telegram 創建機器人" width="600">&lt;figcaption>
&lt;p>Telegram 創建機器人&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>他詢問你要幫機器人取叫什麼名稱，可以直接在輸入欄位輸入想要取的名稱，當然不能是別人已經取過的：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/ansible/telegram_2.webp"
alt="Telegram 創建機器人" width="600">&lt;figcaption>
&lt;p>Telegram 創建機器人&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>看到它回覆你 &lt;code>Done!&lt;/code> 代表成功了，接下來你會拿到一組 API Token，像我的是 &lt;code>5335968936:AAEDO_Tudhy0t577jtbF9TpgrzqOsL99h9c&lt;/code> (已更換，大家放心 😂 )，接下來開啟瀏覽器輸入以下網址 &lt;code>https://api.telegram.org/bot{API Token}/getupdates&lt;/code>，其中的 &lt;code>{API Token}&lt;/code> 請帶入自己的 Token，直到出現 &lt;code>{&amp;quot;ok&amp;quot;:true,&amp;quot;result&amp;quot;:[]}&lt;/code> 代表完成。&lt;/p>
&lt;br>
&lt;p>接下來開啟你自己的 Bot ，打上 &lt;code>/start&lt;/code> 指令，重新整理剛剛的網頁就可以看到以下這樣的文字：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ok&amp;#34;&lt;/span>:true,&lt;span style="color:#e6db74">&amp;#34;result&amp;#34;&lt;/span>:&lt;span style="color:#f92672">[{&lt;/span>&lt;span style="color:#e6db74">&amp;#34;update_id&amp;#34;&lt;/span>:606594112,&lt;span style="color:#e6db74">&amp;#34;message&amp;#34;&lt;/span>:&lt;span style="color:#f92672">{&lt;/span>&lt;span style="color:#e6db74">&amp;#34;message_id&amp;#34;&lt;/span>:1,&lt;span style="color:#e6db74">&amp;#34;from&amp;#34;&lt;/span>:&lt;span style="color:#f92672">{&lt;/span>&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>:493995679,&lt;span style="color:#e6db74">&amp;#34;is_bot&amp;#34;&lt;/span>:false,&lt;span style="color:#e6db74">&amp;#34;first_name&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;\u54c1\u6bc5&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;last_name&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;Ian&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;pinyichuchu&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;language_code&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;zh-hans&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;chat&amp;#34;&lt;/span>:&lt;span style="color:#f92672">{&lt;/span>&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>:493995679,&lt;span style="color:#e6db74">&amp;#34;first_name&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;\u54c1\u6bc5&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;last_name&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;Ian&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;pinyichuchu&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;type&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;private&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;date&amp;#34;&lt;/span>:1652695148,&lt;span style="color:#e6db74">&amp;#34;text&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;/start&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;entities&amp;#34;&lt;/span>:&lt;span style="color:#f92672">[{&lt;/span>&lt;span style="color:#e6db74">&amp;#34;offset&amp;#34;&lt;/span>:0,&lt;span style="color:#e6db74">&amp;#34;length&amp;#34;&lt;/span>:6,&lt;span style="color:#e6db74">&amp;#34;type&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;bot_command&amp;#34;&lt;/span>&lt;span style="color:#f92672">}]}}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>這是你傳訊息給 Bot 它所收到的 API，資料很多沒關係，我們找到 &lt;code>id&lt;/code>，像我的是 &lt;code>493995679&lt;/code>，這個就是我跟機器人的聊天室，我們就先回到 Ansible 這邊吧！&lt;/p>
&lt;br>
&lt;p>開啟一個新的檔案叫 &lt;code>send_notify_tg.yaml&lt;/code>，打以下內容：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Send notify&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hosts&lt;/span>: &lt;span style="color:#ae81ff">all&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">tasks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Send notify to Telegram&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">community.general.telegram&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">token&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;9999999:XXXXXXXXXXXXXXXXXXXXXXX&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">api_args&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">chat_id&lt;/span>: &lt;span style="color:#ae81ff">000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">parse_mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;markdown&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">text&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Your precious application has been deployed: https://example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">disable_web_page_preview&lt;/span>: &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">disable_notification&lt;/span>: &lt;span style="color:#66d9ef">True&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>可以看到我們使用的模組不是 Ansible 內建的，而是社群別人寫的，詳細可以參考 &lt;a href="https://docs.ansible.com/ansible/latest/collections/community/general/telegram_module.html#ansible-collections-community-general-telegram-module" target="_blank" rel="noopener">community.general.telegram module – module for sending notifications via telegram&lt;/a>：&lt;/p>
&lt;br>
&lt;p>其中 token 就是我們剛剛在 &lt;code>BotFather&lt;/code> 那邊所拿到的 Token，chat_id 就是我們剛剛在網頁上看到的 id，把資料都輸入進去後，我們可以修改 text 內容，改成 &amp;ldquo;Send notify to Telegram 測試傳送通知&amp;rdquo;，接著執行 &lt;code>ansible-ploybook send_notify_tg.yaml&lt;/code> ，看看能不能正常收到通知！&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/ansible/telegram_3.webp"
alt="發送通知至 Telegram Bot" width="600">&lt;figcaption>
&lt;p>發送通知至 Telegram Bot&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>這樣子就成功透過 Ansible Module 傳送通知給 Telegram 囉！&lt;/p>
&lt;br>
&lt;p>我們可能需要將機器人加入群組內，這時候需要更換一下 chat_id，先將機器人加入群組，再次到剛剛瀏覽器的網頁刷新，查看 chat 後面的 id 帶有 &lt;code>-&lt;/code>，像是 &lt;code>-540226836&lt;/code> 這樣，這個就是該群組的 ID，將 send_notify_tg.yaml 的 chat_id 修改成 &lt;code>-540226836&lt;/code> 在測試看看，他就會在群組中發送通知囉！&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>{&amp;#34;update_id&amp;#34;:606594124,&amp;#34;message&amp;#34;:{&amp;#34;message_id&amp;#34;:14,&amp;#34;from&amp;#34;:{&amp;#34;id&amp;#34;:493995679,&amp;#34;is_bot&amp;#34;:false,&amp;#34;first_name&amp;#34;:&amp;#34;\u54c1\u6bc5&amp;#34;,&amp;#34;last_name&amp;#34;:&amp;#34;Ian&amp;#34;,&amp;#34;username&amp;#34;:&amp;#34;pinyichuchu&amp;#34;,&amp;#34;language_code&amp;#34;:&amp;#34;zh-hans&amp;#34;},&amp;#34;chat&amp;#34;:{&amp;#34;id&amp;#34;:-540226836,&amp;#34;title&amp;#34;:&amp;#34;\u54c1\u6bc5 &amp;amp; AnsibleSendMessageBot&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;group&amp;#34;,&amp;#34;all_members_are_administrators&amp;#34;:true},&amp;#34;date&amp;#34;:1652696181,&amp;#34;group_chat_created&amp;#34;:true}}&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/ansible/telegram_4.webp"
alt="發送通知至 Telegram 群組 Bot" width="600">&lt;figcaption>
&lt;p>發送通知至 Telegram 群組 Bot&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h2>取得 Managed node 的 facts&lt;span class="hx-absolute -hx-mt-20" id="取得-managed-node-的-facts">&lt;/span>
&lt;a href="#%e5%8f%96%e5%be%97-managed-node-%e7%9a%84-facts" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>還記得我們在執行任務 (Tasks) 時，明明只有兩個，但最後結果顯示三個嗎？是因為在使用 Playbooks 時，Ansible 會自動執行 &lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/setup_module.html#ansible-collections-ansible-builtin-setup-module" target="_blank" rel="noopener">Setup module&lt;/a> 以蒐集各個 Managed node 的 &lt;strong>facts&lt;/strong>。 這個 facts 就好比是系統變數一樣，從 IP 位址、作業系統、CPU 等資訊應有盡有。&lt;/p>
&lt;br>
&lt;h3>Ad-Hoc Commands&lt;span class="hx-absolute -hx-mt-20" id="ad-hoc-commands">&lt;/span>
&lt;a href="#ad-hoc-commands" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>通常我們都會先使用 Ad-Hoc Commands 來呼叫 &lt;code>setup&lt;/code> 看看有哪些可用的資訊，這對於我們稍後撰寫較為複雜的 Playbooks 會很有幫助。&lt;/p>
&lt;ol>
&lt;li>可以藉由 &lt;code>less&lt;/code> 快速搜尋所有的變數&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ ansible all -m setup | less
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>server1 | SUCCESS &lt;span style="color:#f92672">=&lt;/span>&amp;gt; &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_facts&amp;#34;&lt;/span>: &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_apparmor&amp;#34;&lt;/span>: &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;status&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;disabled&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_architecture&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;x86_64&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_bios_date&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;03/14/2014&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_bios_vendor&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;BHYVE&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_bios_version&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1.00&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_board_asset_tag&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;NA&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_board_name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;NA&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_board_serial&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;NA&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_board_vendor&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;NA&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_board_version&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;NA&amp;#34;&lt;/span>,&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="2">
&lt;li>搭配 &lt;code>filter&lt;/code> 將發行版本 (distribution) 資訊給過濾出來&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ ansible all -m setup -a &lt;span style="color:#e6db74">&amp;#34;filter=ansible_distribution*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>server1 | SUCCESS &lt;span style="color:#f92672">=&lt;/span>&amp;gt; &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_facts&amp;#34;&lt;/span>: &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_distribution&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Ubuntu&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_distribution_file_parsed&amp;#34;&lt;/span>: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_distribution_file_path&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/etc/os-release&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_distribution_file_variety&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Debian&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_distribution_major_version&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;22&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_distribution_release&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;kinetic&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_distribution_version&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;22.10&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;discovered_interpreter_python&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/usr/bin/python3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;changed&amp;#34;&lt;/span>: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="3">
&lt;li>取得套件管理員的種類資訊，例子中取得的值是 &lt;strong>apt&lt;/strong>&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ ansible all -m setup -a &lt;span style="color:#e6db74">&amp;#34;filter=ansible_pkg_mgr&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>server1 | SUCCESS &lt;span style="color:#f92672">=&lt;/span>&amp;gt; &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_facts&amp;#34;&lt;/span>: &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ansible_pkg_mgr&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;apt&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;discovered_interpreter_python&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/usr/bin/python3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;changed&amp;#34;&lt;/span>: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h3>轉寫 Playbooks&lt;span class="hx-absolute -hx-mt-20" id="轉寫-playbooks">&lt;/span>
&lt;a href="#%e8%bd%89%e5%af%ab-playbooks" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>我來出個題目，我想要知道 Ansible 所使用的公鑰，並透過 Telegram Bot 發送到群組，要怎麼做呢！？&lt;/p>
&lt;p>首先要利用剛剛的 Ad-Hoc Commands filter，找到公鑰，再將公鑰透過 Telegram Bot 傳送，所以我們會有兩個 Tasks，那我們開始實作囉 🤓&lt;/p>
&lt;p>1.找到公鑰&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Filter rsa_public &amp;amp; Send notify&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hosts&lt;/span>: &lt;span style="color:#ae81ff">all&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">tasks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Filter setup rsa_public key&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.setup&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">filter&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;ansible_ssh_host_key_rsa_public&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">register&lt;/span>: &lt;span style="color:#ae81ff">result&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>可以看到我們將 filter setup 從 Ad-Hoc 轉成 Playbooks，並使用 result 來存在找到的公鑰。&lt;/p>
&lt;br>
&lt;ol start="2">
&lt;li>發送通知至 Telegram Bot&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Send notify to Telegram&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">community.general.telegram&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">token&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;5335968936:AAFhxxMRJy-rucGKgSE80Xss7qPq2iOHWlc&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">api_args&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">chat_id&lt;/span>: -&lt;span style="color:#ae81ff">540226836&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">parse_mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;markdown&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">text&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;{{ result }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">disable_web_page_preview&lt;/span>: &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">disable_notification&lt;/span>: &lt;span style="color:#66d9ef">True&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>老樣子，我們就使用上次 &lt;code>send_notify_tg.yaml&lt;/code> 內的 Send notify to Telegram 任務來傳送通知。&lt;/p>
&lt;br>
&lt;p>執行後，看看群組是否有收到我們找到的 ansible_ssh_host_key_rsa_public 通知。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/ansible/telegram_5.webp"
alt="發送通知至 Telegram 群組 Bot" width="800">&lt;figcaption>
&lt;p>發送通知至 Telegram 群組 Bot&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h2>使用 Ansible 的 Template 系統&lt;span class="hx-absolute -hx-mt-20" id="使用-ansible-的-template-系統">&lt;/span>
&lt;a href="#%e4%bd%bf%e7%94%a8-ansible-%e7%9a%84-template-%e7%b3%bb%e7%b5%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/template_module.html#ansible-collections-ansible-builtin-template-module" target="_blank" rel="noopener">Template module&lt;/a> 是常使用的檔案模組之一，我們在 &lt;a href="#%e5%b8%b8%e7%94%a8%e7%9a%84-ansible-module-%e6%9c%89%e5%93%aa%e4%ba%9b" >常用的 Ansible Module 有哪些？&lt;/a> 文章中有提到，可以用它和變數 (Variables) 來操作檔案。&lt;/p>
&lt;p>我們只需要事先定義變數和模板 (Templates)，即可用它動態產生遠端的 Shell Script、設定檔 (Configure)等。換句話說，我們可以用一份 template 來開發 (Development)、測試 (Test)、正式環境 (Production) 等不同環境設定。&lt;/p>
&lt;p>舉例說明：&lt;/p>
&lt;ol>
&lt;li>建立 template 檔案&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ vim hello_world.txt.j2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Hello &lt;span style="color:#e6db74">&amp;#34;{{ dynamic_word }}&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>由於 Ansible 是就由 &lt;a href="https://jinja.palletsprojects.com/en/3.1.x/" target="_blank" rel="noopener">Jinja2&lt;/a> 來實作 template 系統，所以需要使用 &lt;code>*.j2&lt;/code> 的副檔名。&lt;/li>
&lt;li>上面的 &lt;code>&amp;quot;{{ dynamic_word }}&amp;quot;&amp;quot;&lt;/code> 代表我們在 template 裡使用了名為 &lt;code>dynameic_word&lt;/code> 的變數。&lt;/li>
&lt;/ul>
&lt;br>
&lt;ol start="2">
&lt;li>建立 playbook，並加入變數 &lt;code>vim template_demo.yaml&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Play the template module&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hosts&lt;/span>: &lt;span style="color:#ae81ff">localhost&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">vars&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dynamic_word&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;World&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">tasks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">generation the hello_world.txt file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.template&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#ae81ff">hello_world.txt.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/tmp/hello_world.txt&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">show file context&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">command&lt;/span>: &lt;span style="color:#ae81ff">cat /tmp/hello_world.txt&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">register&lt;/span>: &lt;span style="color:#ae81ff">result&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">print stdout&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">debug&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">msg&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;{{ result.stdout_lines }}&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>在第 5 行，我們幫 &lt;code>dynamic_word&lt;/code> 變數設了一個預設值 &lt;code>World&lt;/code>。&lt;/li>
&lt;li>在 8 行的第 1 個 task 裡，我們使用 template module，並指定了檔案的來源 (src) 和目的地 (dest)。&lt;/li>
&lt;li>之後的 2 個 task 則是把 template module 產生的檔案給印出來。&lt;/li>
&lt;/ul>
&lt;br>
&lt;ol start="3">
&lt;li>直接使用 &lt;code>ansible-playbook template_demo.yaml&lt;/code> 執行 Playbook。&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/ansible/template.webp"
alt="Template Module 範例" width="900">&lt;figcaption>
&lt;p>Template Module 範例&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>也可以透過 &lt;code>-e&lt;/code> 參數將 &lt;code>dynamic_word&lt;/code> 覆寫成 &amp;ldquo;ansible&amp;rdquo;&lt;/p>
&lt;br>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span> $ ansible-playbook template_demo.yaml -e &lt;span style="color:#e6db74">&amp;#34;dynamic_word=ansible&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/ansible/template_1.webp"
alt="Template Module 使用 -e 覆寫參數" width="900">&lt;figcaption>
&lt;p>Template Module 使用 &lt;code>-e&lt;/code> 覆寫參數&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h3>如何切換不同環境&lt;span class="hx-absolute -hx-mt-20" id="如何切換不同環境">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e5%88%87%e6%8f%9b%e4%b8%8d%e5%90%8c%e7%92%b0%e5%a2%83" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>除了我們剛剛用 &lt;code>vars&lt;/code> 來宣告變以外，還可以使用 &lt;code>vars_files&lt;/code> 來 include 其他的變數檔：&lt;code>$ vim template_demo2.yaml&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Play the template module&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hosts&lt;/span>: &lt;span style="color:#ae81ff">localhost&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">vars&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">env&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;development&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">vars_files&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">vars/{{ env }}.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">tasks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">generation the hello_world.txt file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.template&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#ae81ff">hello_world.txt.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/tmp/hello_world.txt&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">show file context&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">command&lt;/span>: &lt;span style="color:#ae81ff">cat /tmp/hello_world.txt&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">register&lt;/span>: &lt;span style="color:#ae81ff">result&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">print stdout&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">debug&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">msg&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;{{ result.stdout_lines }}&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>可以看到上面例子中第 7 行，就是我們使用 &lt;code>vars_files&lt;/code> 來 include 其他的變數檔。&lt;/p>
&lt;br>
&lt;ol start="2">
&lt;li>建立 &lt;code>vars/development.yaml&lt;/code>、&lt;code>vars/test.yaml&lt;/code>、&lt;code>vars/production.yaml&lt;/code> 檔案，接下來將依不同得環境 include 不同的檔案變數檔案 (vars files)，這樣就可以用一份 Playbook 切換環境了！&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Development&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span> $ vim vars/development.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dynamic_word: &lt;span style="color:#e6db74">&amp;#34;development&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Test&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span> $ vim vars/test.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dynamic_word: &lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Production&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span> $ vim vars/production.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dynamic_word: &lt;span style="color:#e6db74">&amp;#34;production&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="3">
&lt;li>執行 &lt;code>ansible-playbook template_demo2.yaml -e &amp;quot;dynamic_word=Test&amp;quot;&lt;/code>，並有 &lt;code>-e&lt;/code> 去修改各個環境。&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/ansible/template_2.webp"
alt="Template Module 範例" width="900">&lt;figcaption>
&lt;p>Template Module 範例&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>Template 系統是實務上很常見的手法之一，藉由它我們可以很輕鬆地讓開發、測試、正式環境無縫接軌。但若是在大型的 Playbook 裡切換環境，建議使用較為進階的 &lt;code>group_vars&lt;/code> 跟 &lt;code>host_vars&lt;/code>。&lt;/p>
&lt;br>
&lt;h2>在 Playbooks 使用 Handlers&lt;span class="hx-absolute -hx-mt-20" id="在-playbooks-使用-handlers">&lt;/span>
&lt;a href="#%e5%9c%a8-playbooks-%e4%bd%bf%e7%94%a8-handlers" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_handlers.html" target="_blank" rel="noopener">Handlers&lt;/a> 是我們在 Ansible Playbooks 裡很常用來重開系統服務 (Service) 的手法，我們這邊透過安裝 Nginx 來介紹它。&lt;/p>
&lt;p>那什麼是 Handlers 呢？Handler 本身是一種非同步的 callback function ; 在這裡則是指關聯於特定 tasks 的事件 (event) 觸發機制。當這些特定的 tasks 狀態為 &lt;strong>被改變 (changed)&lt;/strong> 且都已被執行，才會觸發一次的 event。&lt;/p>
&lt;br>
&lt;ol>
&lt;li>我們建立 setup_nginx.yaml&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">setup the nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hosts&lt;/span>: &lt;span style="color:#ae81ff">all&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">vars&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">username&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;PinYi&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mail&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;880831ian@gmail.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">blog&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://pin-yi.me&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">tasks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 執行 &amp;#39;apt-get update&amp;#39; 指令。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">update apt repo cache&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">apt&lt;/span>: &lt;span style="color:#ae81ff">name=nginx update_cache=yes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 執行 &amp;#39;apt-get install nginx&amp;#39; 指令。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">install nginx with apt&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">apt&lt;/span>: &lt;span style="color:#ae81ff">name=nginx state=present&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 於網頁根目錄 (DocumentRoot) 編輯 index.html。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">modify index.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.template&lt;/span>: &lt;span style="color:#ae81ff">src=templates/index.html.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">dest=/var/www/html/index.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">owner=www-data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">group=www-data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">mode=&amp;#34;644&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">backup=yes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">notify&lt;/span>: &lt;span style="color:#ae81ff">restart nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># handlers&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># * 當確認事件有被觸發才會動作。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># * 一個 handler 可被多個 task 通知 (notify)，並於 tasks 跑完才會執行。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">handlers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 執行 &amp;#39;sudo service nginx restart&amp;#39; 指令。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">restart nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">service&lt;/span>: &lt;span style="color:#ae81ff">name=nginx enabled=yes state=restarted&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># post_tasks:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 在 tasks 之後執行的 tasks。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">post_tasks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 檢查網頁內容。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">review http state&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">command&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;curl -s http://localhost&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">register&lt;/span>: &lt;span style="color:#ae81ff">web_context&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 印出檢查結果。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">print http state&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">debug&lt;/span>: &lt;span style="color:#ae81ff">msg={{ web_context.stdout_lines }}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>來說明一下上面這個 yaml 檔案：&lt;/p>
&lt;ul>
&lt;li>首先我們想要安裝 Nginx，我們給了三個參數，分別是 username、mail、blog，等等會帶入我們的 template。&lt;/li>
&lt;li>我們一開始有 3 個 task，分別代表執行更新、安裝、編輯 index.html 檔案。&lt;/li>
&lt;li>以及 1 個 handlers 他會等 &lt;code>modify index.html&lt;/code> 有改變且執行後才會動作。&lt;/li>
&lt;li>最後是 post_tasks 他是等 tasks 之後執行的 tasks。&lt;/li>
&lt;/ul>
&lt;br>
&lt;ol start="2">
&lt;li>接下建立 Nginx html 的 template：&lt;code>vim templates/index.html.j2&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">_____________________________________&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">/ This is a ansible-playbook demo for \&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">\ automate-with-ansible at 2022/05/17./&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-------------------------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">\ ^__^&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">\ (oo)\_______&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">(__)\ )\/\&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">||----w |&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">|| ||&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ {{ &lt;span style="color:#ae81ff">username }}@automate-with-ansible ~ ]$&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ {{ &lt;span style="color:#ae81ff">username }}@automate-with-ansible ~ ]$&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[ {{ &lt;span style="color:#ae81ff">username }}@automate-with-ansible ~ ]$ cat .profile&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- {{ &lt;span style="color:#ae81ff">mail }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- {{ &lt;span style="color:#ae81ff">blog }}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="3">
&lt;li>執行 Playbook&lt;/li>
&lt;/ol>
&lt;p>可以看到因為我們 &lt;code>modify index.html&lt;/code> 沒有被改變，notify 沒有通知 handlers，所以他不會執行 handlers 該段程式。(正常來說，修改 html 不需要重啟，此為範例 🤣 )&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/ansible/handlers_1.webp"
alt="Handlers 範例" width="900">&lt;figcaption>
&lt;p>Handlers 範例&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;ol start="4">
&lt;li>那我們修改一下 index.html 來測試一下會不會把 index.html 的狀態&lt;strong>被改變&lt;/strong>，而讓 handlers 執行呢！我們隨意修改 index.html 內容，修改日期改成 05/17：&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/ansible/handlers_2.webp"
alt="Handlers 範例" width="900">&lt;figcaption>
&lt;p>Handlers 範例&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>可以看到我們的 &lt;code>modify index.html&lt;/code> 被改變了，所以 notify 通知 handlers 執行重新啟動。&lt;/p>
&lt;br>
&lt;h2>在 Playbooks 使用 loops&lt;span class="hx-absolute -hx-mt-20" id="在-playbooks-使用-loops">&lt;/span>
&lt;a href="#%e5%9c%a8-playbooks-%e4%bd%bf%e7%94%a8-loops" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>在 Shell Script 中，我們會使用 for 和 while 等迴圈 (loop) 來簡化重複的程式碼，而在 Ansible 我們也可以使用 loop 來簡化&lt;strong>重複的任務 (Tasks)&lt;/strong>。&lt;/p>
&lt;h3>標準迴圈&lt;span class="hx-absolute -hx-mt-20" id="標準迴圈">&lt;/span>
&lt;a href="#%e6%a8%99%e6%ba%96%e8%bf%b4%e5%9c%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>首先我們先以簡單的方式重複印出三筆資料。&lt;/p>
&lt;ul>
&lt;li>Shell Script&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>建立 for loop 的 Script&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ vim bash_loop.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> x in &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> 2; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo Loop $x
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>在第 4 行，我們用 &lt;code>for&lt;/code>，並  代入 0,1,2 三個值到 &lt;code>$x&lt;/code> 變數&lt;/li>
&lt;li>在第 5 行，則用了 &lt;code>echo&lt;/code>，印出訊息和 &lt;code>$x&lt;/code> 變數&lt;/li>
&lt;/ul>
&lt;br>
&lt;ol start="2">
&lt;li>執行 Script：可以看到底下跑了 3 次的 loop&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ chmod a+x bash_loop.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ./bash_loop.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Loop &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Loop &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Loop &lt;span style="color:#ae81ff">2&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ul>
&lt;li>Ansible Playbooks&lt;/li>
&lt;/ul>
&lt;p>我們需要透過 &lt;code>item&lt;/code> 和 &lt;code>with_items&lt;/code> 來使用 Ansible 的 loop，其 &lt;code>item&lt;/code> 為預設名。在 Ansible 2.5 中添加了 &lt;code>loop&lt;/code>，所以我們後續兩者都會提到 (目前兩者都可以使用！)&lt;/p>
&lt;ol>
&lt;li>建立 loop 的 playbook &lt;code>vim playbook_with_items.yaml&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">a basic loop with playbook&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hosts&lt;/span>: &lt;span style="color:#ae81ff">localhost&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">tasks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">print loop message&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.debug&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">msg&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Loop {{ item }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with_items&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">2&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>在第 6、7 行裡，我們用 &lt;code>debug&lt;/code> module 來印出訊息，並定義 &lt;code>item&lt;/code>&lt;/li>
&lt;li>在第 8 ~ 11 行，則用了 &lt;code>with_item&lt;/code> 將 0,1,2 的值傳入 &lt;code>item&lt;/code>&lt;/li>
&lt;/ul>
&lt;br>
&lt;ol start="2">
&lt;li>執行 &lt;code>ansible-playbook playbook_with_items.yaml&lt;/code> 後會得到：&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">TASK [print loop message] *************************************************************************************************************&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">ok&lt;/span>: [&lt;span style="color:#ae81ff">server1] =&amp;gt; (item=0) =&amp;gt; {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span style="color:#e6db74">&amp;#34;Loop 0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">ok&lt;/span>: [&lt;span style="color:#ae81ff">server1] =&amp;gt; (item=1) =&amp;gt; {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span style="color:#e6db74">&amp;#34;Loop 1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">ok&lt;/span>: [&lt;span style="color:#ae81ff">server1] =&amp;gt; (item=2) =&amp;gt; {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span style="color:#e6db74">&amp;#34;Loop 2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;p>另一種 在 Ansible 新增的 &lt;code>loop&lt;/code>&lt;/p>
&lt;ol>
&lt;li>建立 loop 的 playbook &lt;code>vim playbook_loop.yaml &lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">a basic loop with playbook&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hosts&lt;/span>: &lt;span style="color:#ae81ff">all&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">tasks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">print loop message&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.debug&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">msg&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;{{ item }} {{ my_idx }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">loop&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">Loop&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">Loop&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">Loop&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">loop_control&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">index_var&lt;/span>: &lt;span style="color:#ae81ff">my_idx&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;ol start="2">
&lt;li>執行 &lt;code>ansible-playbook playbook_loop.yaml&lt;/code> 後會得到：&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">TASK [print loop message] *************************************************************************************************************&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">ok&lt;/span>: [&lt;span style="color:#ae81ff">server1] =&amp;gt; (item=0) =&amp;gt; {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span style="color:#e6db74">&amp;#34;Loop 0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">ok&lt;/span>: [&lt;span style="color:#ae81ff">server1] =&amp;gt; (item=1) =&amp;gt; {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span style="color:#e6db74">&amp;#34;Loop 1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">ok&lt;/span>: [&lt;span style="color:#ae81ff">server1] =&amp;gt; (item=2) =&amp;gt; {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span style="color:#e6db74">&amp;#34;Loop 2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;p>會使用 Loop 就可以減少我們在寫重複的程式碼，當然上面的只是簡單的範例，詳細請參考 &lt;a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html#query-vs-lookup" target="_blank" rel="noopener">Loops - Ansible Documentation&lt;/a>。&lt;/p>
&lt;br>
&lt;h2>參考資料&lt;span class="hx-absolute -hx-mt-20" id="參考資料">&lt;/span>
&lt;a href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>現代 IT 人一定要知道的 Ansible 自動化組態技巧：&lt;a href="https://chusiang.gitbooks.io/automate-with-ansible/content/" target="_blank" rel="noopener">https://chusiang.gitbooks.io/automate-with-ansible/content/&lt;/a>&lt;/p>
&lt;p>Ansible 安裝：&lt;a href="https://tso-liang-wu.gitbook.io/learn-ansible-and-jenkins-in-30-days/ansible/ansible/ansible-installation" target="_blank" rel="noopener">https://tso-liang-wu.gitbook.io/learn-ansible-and-jenkins-in-30-days/ansible/ansible/ansible-installation&lt;/a>&lt;/p>
&lt;p>怎麼用 Docker 練習 Ansible？：&lt;a href="https://chusiang.gitbooks.io/automate-with-ansible/content/05.how-to-practive-the-ansible-with-docker.html" target="_blank" rel="noopener">https://chusiang.gitbooks.io/automate-with-ansible/content/05.how-to-practive-the-ansible-with-docker.html&lt;/a>&lt;/p>
&lt;p>community.general.telegram module – module for sending notifications via telegram：&lt;a href="https://docs.ansible.com/ansible/latest/collections/community/general/telegram_module.html#ansible-collections-community-general-telegram-module" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/collections/community/general/telegram_module.html#ansible-collections-community-general-telegram-module&lt;/a>&lt;/p></description></item><item><title>使用 Jenkins 設定 GitHub 觸發程序並通知 Telegram Bot</title><link>https://pin-yi.me/blog/git-or-cicd/jenkins-github-tg-bot/</link><pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate><guid>https://pin-yi.me/blog/git-or-cicd/jenkins-github-tg-bot/</guid><description>
&lt;p>此文章是接續前面 &lt;a href="../jenkins-ansible/" >Jenkins 及 Ansible IT 自動化 CI/CD 介紹&lt;/a> 文章，此篇會實際安裝及實作 Jenkins，大家記得在學習前要先檢查自己的版本是否有新的更新！那我們開始囉 😘&lt;/p>
&lt;h2>Jenkins 安裝與實作&lt;span class="hx-absolute -hx-mt-20" id="jenkins-安裝與實作">&lt;/span>
&lt;a href="#jenkins-%e5%ae%89%e8%a3%9d%e8%88%87%e5%af%a6%e4%bd%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>我這次會使用 Docker-compose 來進行安裝，除了 Docker 以外也有不同的安裝方式，可以參考 &lt;a href="https://www.jenkins.io/download/" target="_blank" rel="noopener">Jenkins download and deployment&lt;/a>，本次使用的環境版本如下：&lt;/p>
&lt;h3>版本&lt;span class="hx-absolute -hx-mt-20" id="版本">&lt;/span>
&lt;a href="#%e7%89%88%e6%9c%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>macOS：11.6&lt;/li>
&lt;li>Docker：Docker version 20.10.14, build a224086&lt;/li>
&lt;li>Jenkins：jenkins/jenkins:lts-jdk11&lt;/li>
&lt;li>yamllint：1.26.0&lt;/li>
&lt;/ul>
&lt;br>
&lt;h3>安裝&lt;span class="hx-absolute -hx-mt-20" id="安裝">&lt;/span>
&lt;a href="#%e5%ae%89%e8%a3%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>這邊會使用 Jenkins 提供的 &lt;a href="https://hub.docker.com/layers/jenkins/jenkins/jenkins/lts-jdk11/images/sha256-ec98cb8b367b0f9426f71345efe11e001c901704cea0e61fd91beb37af34ef98?context=explore" target="_blank" rel="noopener">官方 LTS 映像檔&lt;/a> 來作為基底，因為我們要多安裝測試程式 &lt;a href="https://yamllint.readthedocs.io/en/stable/index.html" target="_blank" rel="noopener">yamllint&lt;/a>，所以就自己寫一個 Docker-compose：(同樣的程式碼會放在 &lt;a href="https://github.com/880831ian/jenkins-github-tg-bot" target="_blank" rel="noopener">GitHub&lt;/a>，也直接包成映像檔放在 &lt;a href="https://hub.docker.com/r/880831ian/jenkins" target="_blank" rel="noopener">DockerHub&lt;/a>，歡迎大家自行取用)&lt;/p>
&lt;br>
&lt;p>&lt;a href="https://github.com/adrienverge/yamllint" target="_blank" rel="noopener">yamlint&lt;/a>，它是語法檢查工具，可以用來檢查 yaml 檔案的語法是否正確以及符合規範，我們看一下實際操作的畫面：&lt;/p>
&lt;br>
&lt;p>&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/yamllint.webp"
alt="yamllint 測試" width="800">&lt;figcaption>
&lt;p>yamllint 測試&lt;/p>
&lt;/figcaption>
&lt;/figure>
可以看到如果不符合 yaml 規範就會跳出錯誤訊息。&lt;/p>
&lt;br>
&lt;p>接下來先看一下整個 Docker-compose 結構以及各參數：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── Docker-compose.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── Dockerfile&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;p>&lt;strong>Docker-compose.yaml&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;3.8&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">jenkins&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">build&lt;/span>: &lt;span style="color:#ae81ff">./jenkins/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">container_name&lt;/span>: &lt;span style="color:#ae81ff">jenkins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">8080&lt;/span>:&lt;span style="color:#ae81ff">8080&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">50000&lt;/span>:&lt;span style="color:#ae81ff">50000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">restart&lt;/span>: &lt;span style="color:#ae81ff">always&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">./jenkins_home:/var/jenkins_home&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>參數說明：&lt;/p>
&lt;ul>
&lt;li>&lt;code>build: ./jenkins/&lt;/code>：因為要先安裝 yamllint，所以使用 Dockerfile 另外寫。&lt;/li>
&lt;li>&lt;code>container_name:jenkins&lt;/code>：容器的名稱。&lt;/li>
&lt;li>&lt;code>ports: -8080:8080 - 50000:50000&lt;/code>：8080 是待會我們瀏覽儀表板會使用到的 Port，如果本機上 8080 已經被佔用，可以自行更換，50000 是 Jenkins 所使用的 Port。&lt;/li>
&lt;li>&lt;code>restart: always&lt;/code>：當容器停止時，會自動重新啟動容器。&lt;/li>
&lt;li>&lt;code>volumes: - ./jenkins_home:/var/jenkins_home&lt;/code>：掛載目錄，就算刪除容器一樣可以保留其他設定。我將啟動 &lt;code>Docker-compose.yaml&lt;/code> 的資料夾下多一個 jenkins_home 與容器內 /var/jenkins_home 做映射，大家可以自己去調整。&lt;/li>
&lt;/ul>
&lt;br>
&lt;p>&lt;strong>jenkins/Dockerfile&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span>&lt;span style="color:#e6db74"> jenkins/jenkins:lts-jdk11&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">LABEL&lt;/span> maintainer&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;880831ian@gmail.com&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">USER&lt;/span>&lt;span style="color:#e6db74"> root&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> apt-get upgrade -y&lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> apt-get update -y&lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> apt-get install yamllint -y&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>參數說明：&lt;/p>
&lt;ul>
&lt;li>&lt;code>FROM&lt;/code>：我們使用 Jenkins 官方提供的 LTS 維護版本。&lt;/li>
&lt;li>&lt;code>USER&lt;/code>：因為要先安裝東西，所以直接給 root 權限。&lt;/li>
&lt;li>&lt;code>RUN&lt;/code>：先升級完後，再更新，最後再裝 &lt;a href="https://yamllint.readthedocs.io/en/stable/index.html" target="_blank" rel="noopener">yamllint&lt;/a>。(-y 是同意所以詢問)&lt;/li>
&lt;/ul>
&lt;br>
&lt;p>最後使用 &lt;code>docker-compose&lt;/code> 來執行：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ docker-compose up -d&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>要在 Docker-compose.yaml 資料夾下指令才有用。&lt;/p>
&lt;br>
&lt;p>下完指令後，他就會在背景開始安裝，可以試著用瀏覽器瀏覽 &lt;code>http://localhost:8080&lt;/code>，查看有沒有跳出下面這個畫面：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/unlock.webp"
alt="瀏覽器訪問 http://localhost:8080" width="800">&lt;figcaption>
&lt;p>瀏覽器訪問 &lt;code>http://localhost:8080&lt;/code>&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>我們看到它需要輸入一組 Administrator password，我們要使用 &lt;code>docker logs&lt;/code> 來查看，會發現最後會有寫 Please use the following password to proceed to installation 的地方：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ docker logs jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*************************************************************
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*************************************************************
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*************************************************************
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Jenkins initial setup is required. An admin user has been created and a password generated.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Please use the following password to proceed to installation:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>70c0780f62a7441f90286be106908378
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>This may also be found at: /var/jenkins_home/secrets/initialAdminPassword
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*************************************************************
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*************************************************************
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*************************************************************&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>其中的 &lt;code>70c0780f62a7441f90286be106908378&lt;/code> ，就是我們的 Administrator password，直接複製並貼到欄位後按 Continue。&lt;/p>
&lt;br>
&lt;p>我們可以看到它詢問是否要安裝套件，我們選擇左邊 Install suggested plugins 安裝推薦的套件即可：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/plugins.webp"
alt="安裝推薦的套件" width="800">&lt;figcaption>
&lt;p>安裝推薦的套件&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>等待它安裝套件，安裝完後會自動跳到註冊畫面：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/install.webp"
alt="等待安裝&amp;hellip;" width="800">&lt;figcaption>
&lt;p>等待安裝&amp;hellip;&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>輸入完基本的資料後，按 Save and Continue：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/create_adminuser.webp"
alt="創建 Admin 使用者" width="800">&lt;figcaption>
&lt;p>創建 Admin 使用者&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>最後看到下面這個畫面就代表我們安裝好囉！&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/done.webp"
alt="Jenkins 儀表板" width="1200">&lt;figcaption>
&lt;p>Jenkins 儀表板&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h3>建立第一個 Jenkins Job&lt;span class="hx-absolute -hx-mt-20" id="建立第一個-jenkins-job">&lt;/span>
&lt;a href="#%e5%bb%ba%e7%ab%8b%e7%ac%ac%e4%b8%80%e5%80%8b-jenkins-job" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>我們已經成功安裝好並進入到 Jenkins 儀表板，我們先來建立第一個 Job，它的功用是告訴我們系統檔案的即時使用狀況，讓我們對 Jenkins 有初步的了解：&lt;/p>
&lt;ol>
&lt;li>點選儀表板的新增作業或是 Create a Job：&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/create_job.webp"
alt="新增作業" width="1200">&lt;figcaption>
&lt;p>新增作業&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;ol start="2">
&lt;li>輸入 Job 專案名稱並選擇建立 Free-Style 軟體專案：&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/disk.webp"
alt="設定 Job 專案" width="1200">&lt;figcaption>
&lt;p>設定 Job 專案&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>可以看到這邊有不同的專案類型可以選擇，&lt;strong>Free-Style&lt;/strong> 以及 &lt;strong>Pipeline&lt;/strong> 這兩種類型的專案基本上就涵蓋大部分的需求。&lt;strong>Free-Style&lt;/strong> 類型的專案提供了非常大的彈性讓使用者來做原始碼管理以及建置。如果建置流程涉及多個專案，則可以使用 &lt;strong>Pipeline&lt;/strong> 類型的專案來組合及定義建置邏輯。&lt;/p>
&lt;br>
&lt;ol start="3">
&lt;li>接下來設定專案組態：&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/describe.webp"
alt="設定專案組態" width="1200">&lt;figcaption>
&lt;p>設定專案組態&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>要記得幫每一個專案都加上描述，讓其他人知道該專案的用途或是使用時機等。&lt;/p>
&lt;br>
&lt;p>接著，在&lt;strong>建置&lt;/strong>的下拉式欄位選擇 &lt;code>選擇建置步驟 &amp;gt; 執行 Shell&lt;/code>&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/shell.webp"
alt="設定專案組態" width="1200">&lt;figcaption>
&lt;p>設定專案組態&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>輸入 &lt;code>df -h&lt;/code> 指令：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/df-h.webp"
alt="設定專案組態" width="1000">&lt;figcaption>
&lt;p>設定專案組態&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>我們這邊透過建置 &lt;code>執行 Shell&lt;/code> 這個建置步驟來告訴 Jenkins，未來這個專案被建置，就會執行 &lt;code>df -h&lt;/code> 這個指令。&lt;/p>
&lt;br>
&lt;ol start="4">
&lt;li>專案組態設置完後，我們點選左邊的&lt;strong>馬上建置&lt;/strong>來建置剛剛建好的專案，如果我們設定上沒有問題，應該會在左下角的&lt;strong>建置歷程&lt;/strong>這邊看到我們的第一個建置紀錄：&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/build.webp"
alt="建置專案" width="800">&lt;figcaption>
&lt;p>建置專案&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;ol start="5">
&lt;li>點進去後，再點 &lt;strong>Console Output&lt;/strong>，可以看到這次建置的結果：&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/console.webp"
alt="建置專案" width="800">&lt;figcaption>
&lt;p>建置專案&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>這樣我們的第一個 Jenkins Job 就設定完成囉！Jenkins 也確實的執行我們所設定的指令，並將系統的使用狀況呈現在終端機的輸出上。
&lt;br>&lt;/p>
&lt;p>以上就是我們第一個簡單的專案建置流程，當然，Jenkins 可以做到的事情不僅如此，在後面我們會透過安裝不同的套件來強化 Jenkins，來達到完整的持續整合 😁&lt;/p>
&lt;br>
&lt;h2>原始碼管理與建置觸發程序&lt;span class="hx-absolute -hx-mt-20" id="原始碼管理與建置觸發程序">&lt;/span>
&lt;a href="#%e5%8e%9f%e5%a7%8b%e7%a2%bc%e7%ae%a1%e7%90%86%e8%88%87%e5%bb%ba%e7%bd%ae%e8%a7%b8%e7%99%bc%e7%a8%8b%e5%ba%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>上面有提到 Jenkins 作為一個持續整合的工具，與原始碼管理系統的整合尤其重要。我們這一章節，會介紹如何在 Jenkins 上透過原始碼管理 (source code management,SCM) 系統，例如從 GitHub 獲得專案的原始碼，並設置建置觸發程序 (build triggers) 來實踐持續整合。&lt;/p>
&lt;br>
&lt;h3>建置專案&lt;span class="hx-absolute -hx-mt-20" id="建置專案">&lt;/span>
&lt;a href="#%e5%bb%ba%e7%bd%ae%e5%b0%88%e6%a1%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>HTTPS&lt;span class="hx-absolute -hx-mt-20" id="https">&lt;/span>
&lt;a href="#https" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>接下來我們先建立一個新的 Job，選擇 Free-style 模式，這次要在原始碼管理裡面選擇 Git，在 Repositories &amp;gt; Repository URL 裡面輸入我們這次要測試的 &lt;a href="https://github.com/880831ian/jenkins-github-tg-bot" target="_blank" rel="noopener">repository URL&lt;/a>：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/repository.webp"
alt="設定 Repository URL" width="1000">&lt;figcaption>
&lt;p>設定 Repository URL&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h4>SSH&lt;span class="hx-absolute -hx-mt-20" id="ssh">&lt;/span>
&lt;a href="#ssh" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>如果我們想要透過 SSH 來存取專案，我們會遇到以下狀況：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/ssh_error.webp"
alt="SSH 尚未設定錯誤訊息" width="1000">&lt;figcaption>
&lt;p>SSH 尚未設定錯誤訊息&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>會有錯誤訊息是因為我們還沒有把 Jenkins 與 GitHub 做 SSH 金鑰配對，所以 GitHub 拒絕 Jenkins 透過 SSH 存取。那要怎麼解決呢？&lt;/p>
&lt;p>最簡單的方法就是在 Jenkins 主機下&lt;a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/" target="_blank" rel="noopener">建立 SSH 金鑰&lt;/a>，並&lt;a href="https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/" target="_blank" rel="noopener">將公開金鑰 Key 加入到 GitHub 帳號中&lt;/a>，有需要的朋友可以再自行使用，該範例使用 HTTPS 來做設定。&lt;/p>
&lt;br>
&lt;h3>建置觸發程序&lt;span class="hx-absolute -hx-mt-20" id="建置觸發程序">&lt;/span>
&lt;a href="#%e5%bb%ba%e7%bd%ae%e8%a7%b8%e7%99%bc%e7%a8%8b%e5%ba%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>由於我們還沒有定義任何建置的觸發程序，所以除非我們手動去操作 Jenkins，不然 Jenkins 並不會主動幫我們進行建置。因此，在&lt;strong>建置觸發程序&lt;/strong>這個欄位內，我們可以自由設定我們希望 Jenkins 何時自動幫我們進行建置專案。那依照專案的屬性不同，我們也可以採用不同的建置時機。那最常見的有以下兩種：&lt;/p>
&lt;br>
&lt;h4>定期建置&lt;span class="hx-absolute -hx-mt-20" id="定期建置">&lt;/span>
&lt;a href="#%e5%ae%9a%e6%9c%9f%e5%bb%ba%e7%bd%ae" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>在 Jenkins 中，我們是採用 &lt;a href="https://cloud.google.com/scheduler/docs/configuring/cron-job-schedules" target="_blank" rel="noopener">Cron Format&lt;/a> 的方式來定義建置行程。Cron Format 總共五個欄位，欄位與欄位之間可用空白或 Tab 鍵做區隔：&lt;/p>
&lt;ol>
&lt;li>分 (minute)：0 - 59 分&lt;/li>
&lt;li>時 (hour)：0 - 23 時&lt;/li>
&lt;li>日 (day of month)：1 - 31 日&lt;/li>
&lt;li>月 (month)：1 - 12 月&lt;/li>
&lt;li>星期 (day of week)：星期 0 - 7 (其中 0 與 7 都代表星期天)&lt;/li>
&lt;/ol>
&lt;p>假設我們希望每個 30 分鐘就建置一次當前專案，我們可以在定義規則裡面填入 &lt;code>H/15 * * * *&lt;/code>：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/cron.webp"
alt="定期建置" width="1000">&lt;figcaption>
&lt;p>定期建置&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h4>GitHub hook trigger for GITScm polling&lt;span class="hx-absolute -hx-mt-20" id="github-hook-trigger-for-gitscm-polling">&lt;/span>
&lt;a href="#github-hook-trigger-for-gitscm-polling" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>這種觸發方式在持續整合時非常實用。我們可以讓 Jenkins 自動監測當在原始碼專案有任何的 push event 發生時就進行建置。為了要使用這種方式建置，需要以下幾個步驟來設定：&lt;/p>
&lt;h5>新增 GitHub personal access token&lt;span class="hx-absolute -hx-mt-20" id="新增-github-personal-access-token">&lt;/span>
&lt;a href="#%e6%96%b0%e5%a2%9e-github-personal-access-token" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>進入 GitHub 首頁，點選右上角下拉選單，點選 &lt;strong>Settings&lt;/strong>：&lt;/li>
&lt;/ol>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/setting_1.webp"
alt="GitHub hook trigger for GITScm polling 設定" width="1000">&lt;figcaption>
&lt;p>GitHub hook trigger for GITScm polling 設定&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;ol start="2">
&lt;li>先點選左邊的 &lt;strong>Developer settings&lt;/strong> &amp;gt; 點選左邊的 &lt;strong>Personal access tokens&lt;/strong> &amp;gt; 點選右上角的 &lt;strong>Generate new token&lt;/strong>，輸入 token 的描述並勾選 &lt;code>repo&lt;/code> scope 以及 &lt;code>admin:repo_hook&lt;/code> scope 跟 &lt;code>admin:org_hook&lt;/code> scope，點選 &lt;strong>Generate token&lt;/strong>：&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/setting_2.webp"
alt="GitHub hook trigger for GITScm polling 設定" width="700">&lt;figcaption>
&lt;p>GitHub hook trigger for GITScm polling 設定&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;ol start="3">
&lt;li>會產生一個 token，請先把 token 複製下來，離開這個畫面後，token 就會看不到了！(此 token 已刪除 ✌️)&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/setting_3.webp"
alt="GitHub hook trigger for GITScm polling 設定" width="1000">&lt;figcaption>
&lt;p>GitHub hook trigger for GITScm polling 設定&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h5>設定 Jenkins GitHub&lt;span class="hx-absolute -hx-mt-20" id="設定-jenkins-github">&lt;/span>
&lt;a href="#%e8%a8%ad%e5%ae%9a-jenkins-github" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>進入 Jenkins 儀表板頁面，點選左邊&lt;strong>管理 Jenkins&lt;/strong> &amp;gt; System Configuration 的&lt;strong>設定系統&lt;/strong>，往下滑找到 GitHub：&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/setting_4.webp"
alt="GitHub hook trigger for GITScm polling 設定" width="1000">&lt;figcaption>
&lt;p>GitHub hook trigger for GITScm polling 設定&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;ol start="2">
&lt;li>找到後，再 GitHub Servers 下拉欄位選擇 Add GitHub Server，會看到下面畫面，API URL 輸入 &lt;code>https://api.github.com&lt;/code>，Credentials 點 Add：&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/setting_5.webp"
alt="GitHub hook trigger for GITScm polling 設定" width="1000">&lt;figcaption>
&lt;p>GitHub hook trigger for GITScm polling 設定&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;ol start="3">
&lt;li>Kind 選擇 Secret Text，Secret 輸入剛剛存的 Personal Access Token，Description 簡單描述一下：&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/setting_6.webp"
alt="GitHub hook trigger for GITScm polling 設定" width="1000">&lt;figcaption>
&lt;p>GitHub hook trigger for GITScm polling 設定&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;ol start="4">
&lt;li>設定完後，點選一下右邊的 &lt;strong>Test connection&lt;/strong>，如果我顯示 &lt;code>Credentials verified for user UserName, rate limit: xxx&lt;/code> 就代表成功囉！&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/setting_7.webp"
alt="GitHub hook trigger for GITScm polling 設定" width="1000">&lt;figcaption>
&lt;p>GitHub hook trigger for GITScm polling 設定&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h5>設定專案組態&lt;span class="hx-absolute -hx-mt-20" id="設定專案組態">&lt;/span>
&lt;a href="#%e8%a8%ad%e5%ae%9a%e5%b0%88%e6%a1%88%e7%b5%84%e6%85%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>接著我們跳回來剛剛的專案組態，並勾選 &lt;strong>GitHub hook trigger for GITScm polling&lt;/strong>：&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/setting_8.webp"
alt="設定專案組態" width="1000">&lt;figcaption>
&lt;p>設定專案組態&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;ol start="2">
&lt;li>寫一個 Shell Script 來建置專案：&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> file in &lt;span style="color:#66d9ef">$(&lt;/span>find . -type f -name &lt;span style="color:#e6db74">&amp;#34;*yaml&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> yamllint $file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/setting_9.webp"
alt="設定專案組態" width="1000">&lt;figcaption>
&lt;p>設定專案組態&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>這邊利用一個簡單的 Shell Script 迴圈來對所有 YAML file 進行 yamllint 的檢查，最後點選儲存離開。&lt;/p>
&lt;br>
&lt;h5>GitHub 上整合 Jenkins&lt;span class="hx-absolute -hx-mt-20" id="github-上整合-jenkins">&lt;/span>
&lt;a href="#github-%e4%b8%8a%e6%95%b4%e5%90%88-jenkins" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>
&lt;p>先到 GitHub 被建置專案的頁面下點 &lt;strong>Setting&lt;/strong> 標籤 &amp;gt; 點選左邊的 &lt;strong>Webhook&lt;/strong> &amp;gt; 點選右上角的 &lt;strong>Add webhook&lt;/strong> &amp;gt; 輸入 &lt;strong>Jenkins Hook URL&lt;/strong> 到 Payload URL：&lt;/p>
&lt;p>記得 Jenkins Hook URL 後面要加 &lt;code>/github-webhook/&lt;/code>，小弟我卡在這裡很久 😢 😢&lt;/p>
&lt;/li>
&lt;/ol>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/setting_10.webp"
alt="Webhooks 設定" width="800">&lt;figcaption>
&lt;p>Webhooks 設定&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;ul>
&lt;li>Jenkins Hook URL 設定&amp;quot;&lt;/li>
&lt;/ul>
&lt;p>由於我們是將 Jenkins 運行在本機端，所以 Jenkins Hook URL &lt;code>http://localhost:8080&lt;/code> 是 Private IP。GitHub 沒有辦法抓 Private IP，為了練習，我們可以透過 &lt;a href="https://ngrok.com/" target="_blank" rel="noopener">ngrok&lt;/a> 這套簡單小工具來暫時將 &lt;code>http://localhost:8080&lt;/code> 變成 Public IP。&lt;/p>
&lt;p>&lt;a href="https://ngrok.com/" target="_blank" rel="noopener">ngrok&lt;/a> 的使用方式很簡單，只要先下載 &lt;code>brew install ngrok/ngrok/ngrok&lt;/code> ，並使用 &lt;code>ngrok http 8080&lt;/code> 指令，將 Private IP 變成 Public IP：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/setting_11.webp"
alt="ngrok 將 Private IP 變成 Public IP" width="1000">&lt;figcaption>
&lt;p>ngrok 將 Private IP 變成 Public IP&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>圖片中 &lt;code>https://2063-111-235-135-57.jp.ngrok.io&lt;/code> 就是 Public 的 Jenkins Hook URL&lt;/p>
&lt;br>
&lt;p>完成後，先點選 &lt;strong>Recent Deliveries&lt;/strong> 檢查是否成功，底下的 Response 需要是 &lt;font color=green>200&lt;/font>，才是對的歐！(這裡一定要先檢查，不然後面會找問題到死 XD)&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/setting_12.webp"
alt="Webhooks 設定" width="1000">&lt;figcaption>
&lt;p>Webhooks 設定&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h3>測試&lt;span class="hx-absolute -hx-mt-20" id="測試">&lt;/span>
&lt;a href="#%e6%b8%ac%e8%a9%a6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>我們都設定好後，要開始來測試，我們可以直接先點選 &lt;strong>馬上建置&lt;/strong>，來測試是否可以透過 &lt;strong>GitHub personal access token&lt;/strong>，抓取 GitHub 的檔案。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/test_1.webp"
alt="馬上建置" width="800">&lt;figcaption>
&lt;p>馬上建置&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>可以看到在建置流程那邊發現建置失敗，點進去可以看詳細內容，&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/test_2.webp"
alt="建置失敗" width="800">&lt;figcaption>
&lt;p>建置失敗&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>點選左側的 &lt;strong>Console Output&lt;/strong>，可以看到我們有成功獲取 GitHub 上得專案，並且執行我們的 Shell 來檢查 yaml 的檔案格式，發現是因為格式有錯誤，所以建置才會失敗 ❌&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/test_3.webp"
alt="Console Output" width="1000">&lt;figcaption>
&lt;p>Console Output&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>接下來我們先修改一下 yaml 的檔案，後重新 push 到 Github 上，並觀察 Jenkins 會不會自動建置 ！(修改位置大家可以直接看 &lt;a href="https://github.com/880831ian/jenkins-github-tg-bot/commit/729556412ef8796477a351040604aad8c8083c05" target="_blank" rel="noopener">Commit 結果&lt;/a>)&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/test_4.webp"
alt="Console Output" width="1000">&lt;figcaption>
&lt;p>Console Output&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>當你 push 完後，發現它會自動建置，請因為我們修改成正確格式，所以他也建置成功囉！&lt;/p>
&lt;br>
&lt;p>也可以點選左側有一個新的 &lt;strong>GitHub Hook Log&lt;/strong> ，可以看到我們成功透過 &lt;strong>GitHub hook trigger for GITScm polling&lt;/strong> 偵測到有新的 event，透過 WebHook 讓 Jenkins 知道。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/test_5.webp"
alt="GitHub Hook Log" width="1000">&lt;figcaption>
&lt;p>GitHub Hook Log&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h3>建置後觸發通知&lt;span class="hx-absolute -hx-mt-20" id="建置後觸發通知">&lt;/span>
&lt;a href="#%e5%bb%ba%e7%bd%ae%e5%be%8c%e8%a7%b8%e7%99%bc%e9%80%9a%e7%9f%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>當我們自動建置成功當然沒什麼問題，但如果失敗有可能就會影響後續程式的上線時間，所以我們希望建置完成後，可以收到通知，通知除了可以用 email 以外，也可以使用套件去串接我們常用的平台，例如 Telegram、Slack、Line 等等，接下來我會教大家要怎麼去串接這些服務，在開始之前要請大家先安裝兩個套件：&lt;/p>
&lt;h4>安裝/設定 Build Timestamp&lt;span class="hx-absolute -hx-mt-20" id="安裝設定-build-timestamp">&lt;/span>
&lt;a href="#%e5%ae%89%e8%a3%9d%e8%a8%ad%e5%ae%9a-build-timestamp" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;a href="https://plugins.jenkins.io/build-timestamp/" target="_blank" rel="noopener">Build Timestamp&lt;/a> 這個套件可以幫我們在稍後傳送通知時加上當下的時間戳，那要怎麼安裝套件呢？先到儀表板首頁，點選左側的 &lt;strong>管理 Jenkins&lt;/strong> &amp;gt; 點選 &lt;strong>管理外掛程式&lt;/strong>：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/trigger_1.webp"
alt="管理 Jenkins &amp;gt; 管理外掛程式" width="1200">&lt;figcaption>
&lt;p>管理 Jenkins &amp;gt; 管理外掛程式&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>再 Plugin Manager 的 可用的裡面搜尋 Build Timestamp，選擇後點下方的 &lt;strong>Download now and install after restart&lt;/strong>，等待他安裝後會自動重啟。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/trigger_2.webp"
alt="安裝 Build Timestamp" width="1200">&lt;figcaption>
&lt;p>安裝 Build Timestamp&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>重啟後從儀表板點選左側 &lt;strong>管理 Jenkins&lt;/strong> &amp;gt; 點選 &lt;strong>設定系統&lt;/strong>，找到 &lt;strong>Build Timestamp&lt;/strong>，開啟設定，並設定 Timezone 為 &lt;code>Asia/Taipei&lt;/code> 以及 pattern &lt;code>yyyy-MM-dd HH:mm:ss z&lt;/code>，這樣我們待會就可以使用 &lt;code>BUILD_TIMESTAMP&lt;/code> 參數來獲取當下時間，記得要按下儲存歐！&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/trigger_3.webp"
alt="設定 Build Timestamp" width="1200">&lt;figcaption>
&lt;p>設定 Build Timestamp&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h4>安裝/設定 Notify.Events&lt;span class="hx-absolute -hx-mt-20" id="安裝設定-notifyevents">&lt;/span>
&lt;a href="#%e5%ae%89%e8%a3%9d%e8%a8%ad%e5%ae%9a-notifyevents" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;a href="https://plugins.jenkins.io/notify-events/" target="_blank" rel="noopener">Notify.Events&lt;/a> 這個套件可以串接很多的平台，例如 Telegram、Slack、Line 等，也可以透過它寄發郵件，是一個十分方便的套件，但缺點是他需要註冊，免費版只有每個月 300 次的訊息傳輸量，但在我們測試階段已經十分夠用。一樣我們用剛剛的方法安裝 &lt;strong>Notify.Events&lt;/strong>。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/trigger_4.webp"
alt="安裝 Notify.Events" width="1200">&lt;figcaption>
&lt;p>安裝 Notify.Events&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>安裝好後，Notify.Events 他不需要先設定，它可以依據不同的 Job 有不同的設定，所以我們開啟剛剛的 Job 組態，拉到最下面找到 &lt;strong>建置後動作&lt;/strong> ，選擇 &lt;strong>Notify.Events&lt;/strong>：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/trigger_5.webp"
alt="安裝 Notify.Events" width="1200">&lt;figcaption>
&lt;p>安裝 Notify.Events&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>可以看到這邊要先輸入 Token，那 Token 就必須去官網註冊後設定。&lt;/p>
&lt;br>
&lt;p>我們先開啟瀏覽器，搜尋 &lt;a href="https://notify.events/en" target="_blank" rel="noopener">Notify.Events&lt;/a>，註冊帳號後，在 Channels 點選 &lt;strong>Create&lt;/strong>，輸入一下 Title 按下 &lt;strong>Save&lt;/strong>。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/trigger_6.webp"
alt="Notify.Events 官網設定" width="1200">&lt;figcaption>
&lt;p>Notify.Events 官網設定&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>完成後，應該可以看到以下畫面，這邊就可以讓我們選擇來源，以及要發送到哪裡：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/trigger_7.webp"
alt="Notify.Events 官網設定" width="1200">&lt;figcaption>
&lt;p>Notify.Events 官網設定&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>我們先選擇 Sources，點選 &lt;strong>Add source&lt;/strong>，可以看到很多來源，選擇 &lt;strong>CI/CD and Version control&lt;/strong> ，再選擇 &lt;strong>Jenkins&lt;/strong>：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/trigger_8.webp"
alt="Notify.Events 官網設定" width="1200">&lt;figcaption>
&lt;p>Notify.Events 官網設定&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>點選 &lt;strong>Next&lt;/strong>，就可以看到以下畫面，它告訴我們要將它提供的 &lt;code>Token&lt;/code> 貼入設定檔，也就是我們剛剛在 Job 組態裡面的那個 Token：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/trigger_9.webp"
alt="Notify.Events 官網設定" width="1200">&lt;figcaption>
&lt;p>Notify.Events 官網設定&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>設定好 Sources，接下來要設定接收方，回到剛剛 Notify.Events 的儀表板，點選 &lt;strong>Subscribe&lt;/strong>，我們測試使用 Telegram 來當接收方，它會跳出一個視窗，告訴你要怎麼把他的機器人加成好友或是加入群組，這邊就依大家需要自行選擇，那我就將它加入群組，使用 &lt;code>/subscribe DRr0bIZ0 @NotifyEventsBot&lt;/code> 指令來綁定&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/trigger_10.webp"
alt="Notify.Events 官網設定" width="1200">&lt;figcaption>
&lt;p>Notify.Events 官網設定&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>這時候我們都設定好了，我們回到 Job 組態的 Notify.Events 設定位置，將 Token 貼上去，它可以自訂訊息的模板，可以全部都一樣，也可以針對建置後的狀態，產生不同的訊息模板，我們來自定義設計一下：&lt;/p>
&lt;p>&lt;strong>Success&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>📢 Jenkins 建置通知 📣
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>時間：$BUILD_TIMESTAMP 🕐
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>名稱： &amp;lt;a href&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$PROJECT_URL&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&amp;gt;$PROJECT_NAME&amp;lt;/a&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>次數： &amp;lt;a href&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$BUILD_URL&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&amp;gt;#$BUILD_NUMBER&amp;lt;/a&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>建置狀態： 🟢 &amp;lt;b&amp;gt;$BUILD_STATUS&amp;lt;/b&amp;gt; 🟢
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;a href&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$BUILD_URL&lt;span style="color:#e6db74">/console&amp;#34;&lt;/span>&amp;gt;建置日誌連結&amp;lt;/a&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--------- 😍😍😍 ---------&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/trigger_11.webp"
alt="Notify.Events Success" width="1000">&lt;figcaption>
&lt;p>Notify.Events Success&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>&lt;strong>Failure&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>📢 Jenkins 建置通知 📣
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>時間：$BUILD_TIMESTAMP 🕐
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>名稱： &amp;lt;a href&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$PROJECT_URL&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&amp;gt;$PROJECT_NAME&amp;lt;/a&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>次數： &amp;lt;a href&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$BUILD_URL&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&amp;gt;#$BUILD_NUMBER&amp;lt;/a&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>建置狀態： 🔴 &amp;lt;b&amp;gt;$BUILD_STATUS&amp;lt;/b&amp;gt; 🔴
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;a href&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$BUILD_URL&lt;span style="color:#e6db74">/console&amp;#34;&lt;/span>&amp;gt;建置日誌連結&amp;lt;/a&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--------- 😭😭😭 ---------&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/trigger_12.webp"
alt="Notify.Events Failure" width="1000">&lt;figcaption>
&lt;p>Notify.Events Failure&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h4>Telegram 通知測試&lt;span class="hx-absolute -hx-mt-20" id="telegram-通知測試">&lt;/span>
&lt;a href="#telegram-%e9%80%9a%e7%9f%a5%e6%b8%ac%e8%a9%a6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>最後我們都設定好了，就來測試一下吧！我們先故意將程式碼格式用錯，&lt;a href="https://github.com/880831ian/jenkins-github-tg-bot/commit/e88d35d56f2b2d1b999682c0f748431999bb4b9e" target="_blank" rel="noopener">讓他先跳出錯誤&lt;/a>，&lt;a href="https://github.com/880831ian/jenkins-github-tg-bot/commit/ec0e9f9c2148cecde6f70ec391d4c775fc180029" target="_blank" rel="noopener">再修改&lt;/a>，來看看結果如何吧！(文字連結是對應的 Commit )&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-github-tg-bot/trigger_13.webp"
alt="Telegram 通知" width="600">&lt;figcaption>
&lt;p>Telegram 通知&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>可以看到，我們分別兩次的測試，會依據我們建置後的結果，觸發不同的通知模板。&lt;/p>
&lt;br>
&lt;h2>參考資料&lt;span class="hx-absolute -hx-mt-20" id="參考資料">&lt;/span>
&lt;a href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://ithelp.ithome.com.tw/users/20103346/ironman/1473" target="_blank" rel="noopener">30 天入門 Ansible 及 Jenkins&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://medium.com/@BuzonXXXX/ci-%E8%A8%AD%E5%AE%9Ajenkins%E9%80%A3%E7%B5%90github-private-repo-111c53d29047" target="_blank" rel="noopener">[CI]設定 jenkins 連結 GitHub Private Repo by Webhook&lt;/a>&lt;/p></description></item><item><title>Jenkins 及 Ansible IT 自動化 CI/CD 介紹</title><link>https://pin-yi.me/blog/git-or-cicd/jenkins-ansible-it-cicd/</link><pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate><guid>https://pin-yi.me/blog/git-or-cicd/jenkins-ansible-it-cicd/</guid><description>
&lt;p>在軟體開發領域中，IT 自動化 (automation) 及 持續整合 (Continuous Integration, CI) 、持續佈署 (Continuous Deployment,CD) 是 DevOps 精神中很重要的兩個部分，此文章是參考 &lt;a href="https://ithelp.ithome.com.tw/users/20103346/ironman/1473" target="_blank" rel="noopener">30 天入門 Ansible 及 Jenkins&lt;/a> ，再加上自己測試後的筆記紀錄，歡迎大家可先閱讀作者原文，那我們就開始一起學習吧 👊&lt;/p>
&lt;p>我會分別介紹 &lt;a href="https://www.ansible.com/" target="_blank" rel="noopener">Ansible&lt;/a> 與 &lt;a href="https://www.jenkins.io/" target="_blank" rel="noopener">Jenkins&lt;/a> 這兩個非常熱門的開源軟體再搭配實作來讓大家更了解他們，那在之前我們先來聊聊為什麼需要 IT 自動化以及什麼是持續整合/持續部署吧 🤠&lt;/p>
&lt;br>
&lt;h2>為什麼需要 IT 自動化 ?&lt;span class="hx-absolute -hx-mt-20" id="為什麼需要-it-自動化-">&lt;/span>
&lt;a href="#%e7%82%ba%e4%bb%80%e9%ba%bc%e9%9c%80%e8%a6%81-it-%e8%87%aa%e5%8b%95%e5%8c%96-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>當我們在開發任何軟體產品時，除了開發本身的過程需要花相當多的心力外，在產品部署的環節也是讓大家頭痛的一個部分。其環境的搭建或是參數的設定常常會因為一些小原因導致產品無法像在開發時一樣正常運作。尤其當需要部署的主機不只一台時，重複性的工作會花費我們大量的時間。再加上還會因為伺服器提供的作業環境不同、或是其他種種限制而必須做參數上的調整等等。&lt;/p>
&lt;p>這時候 &lt;code> IT 自動化&lt;/code> 就顯得十分重要，透過自動化，不但可以幫助開發人員有效減少部署產品所需時間外，還可以在有限度的修改下分別針對不同環境去做調整。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-ansible-it-cicd/automation.webp"
alt="Best Automation Tools for DevOps" width="700">&lt;figcaption>
&lt;p>&lt;a href="https://www.xenonstack.com/blog/best-automation-tools-for-devops" target="_blank" rel="noopener">Best Automation Tools for DevOps&lt;/a>&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h2>什麼是持續整合/持續部署&lt;span class="hx-absolute -hx-mt-20" id="什麼是持續整合持續部署">&lt;/span>
&lt;a href="#%e4%bb%80%e9%ba%bc%e6%98%af%e6%8c%81%e7%ba%8c%e6%95%b4%e5%90%88%e6%8c%81%e7%ba%8c%e9%83%a8%e7%bd%b2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>當環境搭建成功後，對於服務本身的維護以及監控也是開發流程中相當重要的一環。當我們從原始碼代管服務 (GitHub、GitLab)上取得原始碼後，要如何確保產品在發布前品質沒有問題，一直以來都是開發人員需要思考的一個課題。&lt;/p>
&lt;p>由於現在多數開發團隊都會透過版本控制來提交並整合開發人員各自修改的程式碼，若在合併分支時沒有把合併衝突 (conflict) 處理恰當，或是合併程式碼後產生某些邏輯錯誤，往往會到產品發佈後才發現不可預期的錯誤。&lt;/p>
&lt;p>所以有了持續整合/持續部署的機制下，我們可以透過高頻率的整合、測試並分析程式碼品質，在最短時間發現問題以及發生點，進而確保產品每一次的發布都是穩定且高品質的。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-ansible-it-cicd/CICD.webp"
alt="CI/CD 流程圖 (作者打錯是 rsync 不是 rsyne) Day12 什麼是 CICD" width="700">&lt;figcaption>
&lt;p>CI/CD 流程圖 (作者打錯是 rsync 不是 rsyne) &lt;a href="https://ithelp.ithome.com.tw/articles/10219083" target="_blank" rel="noopener">Day12 什麼是 CICD&lt;/a>&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>上面這張圖是簡化版的 CI/CD 流程圖，當我們 Developer 將程式 Push 到原始碼代管服務 (GitHub、GitLab)上，會經過 Webhook 給 Jenkins 這種自動化可以持續整合部署到各自的伺服器上。&lt;/p>
&lt;p>那 CI &amp;amp; CD 分別負責哪些工作呢？&lt;/p>
&lt;h3>持續整合 Continuous Integration&lt;span class="hx-absolute -hx-mt-20" id="持續整合-continuous-integration">&lt;/span>
&lt;a href="#%e6%8c%81%e7%ba%8c%e6%95%b4%e5%90%88-continuous-integration" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>持續整合的英文是 Continuous Integration 我們縮寫成 CI ，後續也會使用 CI 來做說明：&lt;/p>
&lt;ul>
&lt;li>流程：&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>
&lt;p>程式建置&lt;/p>
&lt;p>開發人員在每一次的 Commit &amp;amp; Push 後，都能夠於統一的環境自動 Build 程式，透過此步驟可以避免每個開發人員因本機的環境或是套件版本不同導致出現異常。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>程式測試&lt;/p>
&lt;p>當程式編譯完後，透過&lt;strong>單元測試&lt;/strong>測試新寫的功能是否正確，或者確定是否會影響現有功能，透過該步驟進行測試，可以避免開發人員遺忘先在本機檢查，作為&lt;strong>雙重驗證&lt;/strong>之功用。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>目的：
&lt;ol>
&lt;li>降低人為疏失風險&lt;/li>
&lt;li>減少人工手動的反覆動作&lt;/li>
&lt;li>進行版本控制&lt;/li>
&lt;li>增加系統一制性與透明化&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;br>
&lt;h3>持續佈署 Continuous Deployment&lt;span class="hx-absolute -hx-mt-20" id="持續佈署-continuous-deployment">&lt;/span>
&lt;a href="#%e6%8c%81%e7%ba%8c%e4%bd%88%e7%bd%b2-continuous-deployment" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>持續佈署的英文是 Continuous Deployment 我們縮寫成 CD ，後續也會使用 CD 來做說明：&lt;/p>
&lt;ul>
&lt;li>流程：&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>
&lt;p>部署服務&lt;/p>
&lt;p>透過自動化方式，將寫好的程式碼更新到機器上並公開對外服務，另外需要確保套件版本＆資料庫資料的完整性，也會透過監控系統進行服務存活檢查，若服務異常會即時發送通知告知開發人員。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>目的：
&lt;ol>
&lt;li>保持每次更新程式都可以順暢完成&lt;/li>
&lt;li>確保服務存活&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;br>
&lt;p>我們了解了自動化與 CI/CD 的重要性與功用，那我們要怎麼去實現這些呢！我們先看下面這張圖：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/jenkins-ansible-it-cicd/devops.webp"
alt="Top 5 DevOps Automation Tools in 2020" width="800">&lt;figcaption>
&lt;p>&lt;a href="https://plumlogix.com/top-5-devops-automation-tools-in-2020/" target="_blank" rel="noopener">Top 5 DevOps Automation Tools in 2020&lt;/a>&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>這邊整理 2020 年適合用於 DevOps Automation 的工具，那我們本次教學會介紹最多人使用的 Jenkins 以及 Ansible 兩種：&lt;/p>
&lt;br>
&lt;h2>Jenkins&lt;span class="hx-absolute -hx-mt-20" id="jenkins">&lt;/span>
&lt;a href="#jenkins" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Jenkins 是使用 Java 編成語言編寫最受歡迎的開源自動化服務器。它促進了軟體開發過程中的持續整合、持續部署的自動化過程。&lt;/p>
&lt;p>Jenkins 支持 1800 多個其他軟體套件，Jenkins 易於安裝和使用，它還提供方便瀏覽的項目管理儀表板，它的優點還有：&lt;/p>
&lt;ul>
&lt;li>免費開源&lt;/li>
&lt;li>充滿活力的用戶社群&lt;/li>
&lt;li>多種工具和技術集成&lt;/li>
&lt;li>插件支持&lt;/li>
&lt;li>易於安裝、配置和升級&lt;/li>
&lt;li>監控外部工作&lt;/li>
&lt;li>支持各種身份驗證方法、通知、版本控制等等&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2>Ansible&lt;span class="hx-absolute -hx-mt-20" id="ansible">&lt;/span>
&lt;a href="#ansible" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Ansible 是一種 IT 自動化工具。它可以部署軟體、配置系統，並編排更高級的自動化任務，例如 CD (持續部署) 或 RollingUpdate 零停機的滾動更新。&lt;/p>
&lt;p>自動化簡化了複雜的任務，不僅使開發人員的工作更容易管理，也讓他們的注意力可以放在對團體更有價值的其他任務上。換句話說，它可以節省時間並提高效率。Ansible 使用簡單的 YAML 語法，且 Ansible 是一種輕量級且安全的解決方案，它的優點還有：&lt;/p>
&lt;ul>
&lt;li>使用 Ansible 不需要任何特殊的編程技能，因為使用的是 YAML 語法&lt;/li>
&lt;li>Ansible 允許建立高複雜性的 IT 自動化。&lt;/li>
&lt;li>因為不需要安裝其他套件，所以伺服器上有更多空間來容納應用服務的支援&lt;/li>
&lt;li>Ansible 在設計上非常簡單且可靠一制性。&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2>Jenkins 跟 Ansible 比較&lt;span class="hx-absolute -hx-mt-20" id="jenkins-跟-ansible-比較">&lt;/span>
&lt;a href="#jenkins-%e8%b7%9f-ansible-%e6%af%94%e8%bc%83" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: center">名稱&lt;/th>
&lt;th style="text-align: center">Jenkins&lt;/th>
&lt;th style="text-align: center">Ansible&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: center">套件&lt;/td>
&lt;td style="text-align: center">Jenkins 支持 1800 多種套件&lt;/td>
&lt;td style="text-align: center">支持較少套件&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">語言&lt;/td>
&lt;td style="text-align: center">支持 C、C++、Java、Perl、Python、Ruby 等&lt;/td>
&lt;td style="text-align: center">支持 C、Python、JavaScript、Ruby 等&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">費用&lt;/td>
&lt;td style="text-align: center">Jenkins 是免費的&lt;/td>
&lt;td style="text-align: center">Ansible 不是免費的，但有試用版(Red hat)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">大小&lt;/td>
&lt;td style="text-align: center">重量級&lt;/td>
&lt;td style="text-align: center">輕量級&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">服務&lt;/td>
&lt;td style="text-align: center">基於伺服器的工具&lt;/td>
&lt;td style="text-align: center">基於雲上的工具&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;br>
&lt;h2>Jenkins 與 Ansible 介紹實作連結&lt;span class="hx-absolute -hx-mt-20" id="jenkins-與-ansible-介紹實作連結">&lt;/span>
&lt;a href="#jenkins-%e8%88%87-ansible-%e4%bb%8b%e7%b4%b9%e5%af%a6%e4%bd%9c%e9%80%a3%e7%b5%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>由於 Jenkins 與 Ansible 介紹與實作教學文章較長，故個別分開一篇文章來做說明，大家可以去看自己有興趣的文章歐 😎&lt;/p>
&lt;ul>
&lt;li>Jenkins：&lt;a href="../jenkins-github-tg-bot/" >使用 Jenkins 設定 GitHub 觸發程序並通知 Telegram Bot&lt;/a>&lt;/li>
&lt;li>Ansible：&lt;a href="../ansible" >Ansible 介紹與實作 (Inventory、Playbooks、Module、Template、Handlers)&lt;/a>&lt;/li>
&lt;/ul>
&lt;br>
&lt;h2>參考資料&lt;span class="hx-absolute -hx-mt-20" id="參考資料">&lt;/span>
&lt;a href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://ithelp.ithome.com.tw/users/20103346/ironman/1473" target="_blank" rel="noopener">30 天入門 Ansible 及 Jenkins&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/articles/10219083" target="_blank" rel="noopener">Day12 什麼是 CICD&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://www.srcmini.com/21799.html" target="_blank" rel="noopener">Jenkins 和 Ansible 的對比和區別&lt;/a>&lt;/p></description></item><item><title>Git 介紹</title><link>https://pin-yi.me/blog/git-or-cicd/git-introduce/</link><pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate><guid>https://pin-yi.me/blog/git-or-cicd/git-introduce/</guid><description>
&lt;h2>什麼是 Git ?&lt;span class="hx-absolute -hx-mt-20" id="什麼是-git-">&lt;/span>
&lt;a href="#%e4%bb%80%e9%ba%bc%e6%98%af-git-" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>不管是不是工程師，只要常常需要使用電腦工作，每天一定都會新增、修改、刪除許多檔案，我們看到這張圖：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/sample.webp"
alt="很多人的電腦裡面都有這樣的內容" width="450">&lt;figcaption>
&lt;p>很多人的電腦裡面都有這樣的內容&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>這張圖是一個菜鳥工程師在整理檔案時的方法，因為每一天都會對這份檔案做不同的處理，但為了保留以前的版本，所以也不會刪除舊的檔案，只好用日期或是版本來做分類，時間越久，檔案就累積越多，假如不小心刪除，也找不回來紀錄，也不清楚不同檔案的差異，所以有了 Git 這項工具。&lt;/p>
&lt;br>
&lt;ul>
&lt;li>Git 為分散式版本控制系統，是為了更好管理Linux內核而開發的。&lt;/li>
&lt;li>Git 的優點：免費開源、速度快、檔案體積小、分散式系統。&lt;/li>
&lt;li>Git 的缺點：指令繁雜，但可以透過 GUI 工具解決。&lt;/li>
&lt;li>Git 會紀錄哪些資料：更動前 vs 更動後的程式碼、修改者、修改時間、修改原因（修改者需要自行撰寫 commit message）。&lt;/li>
&lt;/ul>
&lt;br>
&lt;p>我們也常常聽到 GitHub or GitLab 那跟 Git 是一樣的東西嗎？&lt;/p>
&lt;p>Ans：GitHub(GitLab) 是基於 Web 的平台，結合了 Git 的版本控制功能，為開發團隊提供了儲存、分享、發布和合作開發項目的中心化雲存儲的場所。&lt;/p>
&lt;br>
&lt;h2>Git 操作指令&lt;span class="hx-absolute -hx-mt-20" id="git-操作指令">&lt;/span>
&lt;a href="#git-%e6%93%8d%e4%bd%9c%e6%8c%87%e4%bb%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Git 的操作指令繁多，包含環境類、查看類、提交類、分支類、遠端類、合併類、還原類等等，所以才有了 Git GUI 工具，筆者很推薦 &lt;a href="https://www.gitkraken.com/" target="_blank" rel="noopener">Gitkraken&lt;/a>，雖然需要付費，但真的很方便，畫面也很乾淨簡潔。如果是學生的話，還可以使用 &lt;a href="https://education.github.com/pack" target="_blank" rel="noopener">GitHub Student Developer Pack&lt;/a> 免費使用歐！&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/gitkraken.webp"
alt="Git GUI 工具 (Gitkraken)" width="600">&lt;figcaption>
&lt;p>Git GUI 工具 (Gitkraken)&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>接下來我們會依照環境類、查看類、提交類、分支類、遠端類、合併類、還原類依序下去介紹～&lt;/p>
&lt;h3>環境類&lt;span class="hx-absolute -hx-mt-20" id="環境類">&lt;/span>
&lt;a href="#%e7%92%b0%e5%a2%83%e9%a1%9e" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>使用每一個程式或工具，必須先把它安裝到自己電腦上對吧！但因為大家使用的系統都不一樣，所以這邊就不列出要怎麼進行安裝，可以參考 &lt;a href="https://git-scm.com/book/zh-tw/v2/%E9%96%8B%E5%A7%8B-Git-%E5%AE%89%E8%A3%9D%E6%95%99%E5%AD%B8" target="_blank" rel="noopener">Git 安裝教學&lt;/a>&lt;/p>
&lt;p>當我們安裝好後，我們就可以一起進入 Git 的世界囉！&lt;/p>
&lt;br>
&lt;h4>init&lt;span class="hx-absolute -hx-mt-20" id="init">&lt;/span>
&lt;a href="#init" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>首先，找一個你要開始進行版本控制 (Git) 的資料夾， 使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git init&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>要記得要到版本控制的資料夾目錄下才使用這個指令歐！&lt;/p>
&lt;br>
&lt;p>使用完後，會看到跑出下面這些文字：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/init.webp"
alt="Git init" width="600">&lt;figcaption>
&lt;p>Git init&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>此外資料夾內也會多一個隱藏檔案 &lt;code>.git&lt;/code> ，他是用來存放 git 的紀錄，所以不要亂刪除歐：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ tree -a -d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── .git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── hooks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── objects
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   ├── info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   └── pack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── refs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── heads
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── tags&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;p>回到剛剛圖片，它說明默認會使用 master 這個來作為初始分支，並記得要使用 &lt;code>git config&lt;/code> 來做設定，那 &lt;code>git config&lt;/code> 是要做什麼用的呢！？&lt;/p>
&lt;h4>config&lt;span class="hx-absolute -hx-mt-20" id="config">&lt;/span>
&lt;a href="#config" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>在推送 Commit 的時候，會顯示使用者名稱以及電子郵件，所以要先在推送前設定好，這時就使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>$ git config --global user.name &amp;#34;your name&amp;#34;
$ git config --global user.email &amp;#34;your email&amp;#34;&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>分別設定使用者名稱以及電子郵件，這樣共同使用版本控制的人，才分的出來誰是誰！ (若只要在單個專案下設定使用者名稱及電子郵件，就不需要設定 &amp;ndash;global 參數)&lt;/p>
&lt;br>
&lt;h3>查看類&lt;span class="hx-absolute -hx-mt-20" id="查看類">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b%e9%a1%9e" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>status&lt;span class="hx-absolute -hx-mt-20" id="status">&lt;/span>
&lt;a href="#status" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>我們剛剛已經設定好 config ，如果想查看檔案的 git 狀態，就使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git status&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>可以查看現在資料夾內有哪些檔案還沒加入版本控制，或是已經加入但還沒 Commit 變成新版本。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/status.webp"
alt="Git status" width="600">&lt;figcaption>
&lt;p>Git status&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>綠色代表已經加入版本控制但還沒有 Commit ，紅色代表尚未加入追蹤。&lt;/p>
&lt;br>
&lt;h4>log&lt;span class="hx-absolute -hx-mt-20" id="log">&lt;/span>
&lt;a href="#log" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>當我們想要查看 Commit 的幾個版本，或是是誰 Commit 的等等資訊，可以使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git log&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/log.webp"
alt="Git log" width="600">&lt;figcaption>
&lt;p>Git log&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>可以看到一串英文加數字，它是SHA-1 校驗碼也代表你推的這一個版本的識別 ID，也可以看到是由誰推送跟時間與推送的文字說明。&lt;/p>
&lt;br>
&lt;h4>diff&lt;span class="hx-absolute -hx-mt-20" id="diff">&lt;/span>
&lt;a href="#diff" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>當我們假設已經 Commit 後，想要比較不同版本內容的差異，就使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git diff 116e 442c&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>116e 代表最新的版本，442c 代表上一個版本，可以看上面 &lt;code>log&lt;/code> 的辨識 ID，因為校驗碼很長，最少需要前4個數字跟英文，才可以知道是哪一個版本。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/diff.webp"
alt="Git diff" width="600">&lt;figcaption>
&lt;p>Git diff&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>紅色代表最新版本因為我們是用 116e 最新版本來跟綠色上一個版本 442c 來做比較。&lt;/p>
&lt;br>
&lt;h4>reflog&lt;span class="hx-absolute -hx-mt-20" id="reflog">&lt;/span>
&lt;a href="#reflog" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>如果我們在操作 Git 的時候執行錯誤，需要回復到前幾個版本，但還想要查看歷史紀錄，如果我們使用前面說的 &lt;code>git log&lt;/code> 是看不到已經舊的紀錄，這時要使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git reflog&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/reflog.webp"
alt="Git reflog (圖一)" width="600">&lt;figcaption>
&lt;p>Git reflog (圖一)&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/log-1.webp"
alt="Git log (圖二)" width="600">&lt;figcaption>
&lt;p>Git log (圖二)&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>可以看到圖一是使用 &lt;code>reflog&lt;/code> 就可以知道我們還原的紀錄，但使用 &lt;code>log&lt;/code> 查看，會發現沒有辦法看到 test-2 的紀錄。&lt;/p>
&lt;br>
&lt;h3>提交類&lt;span class="hx-absolute -hx-mt-20" id="提交類">&lt;/span>
&lt;a href="#%e6%8f%90%e4%ba%a4%e9%a1%9e" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>add&lt;span class="hx-absolute -hx-mt-20" id="add">&lt;/span>
&lt;a href="#add" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>當我們上面使用 &lt;code>git init&lt;/code> 初始化資料夾後，還沒有開始進行版本控制，需要使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git add .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ git add test.txt&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;p>將檔案加入版本控制的暫存區。它的格式是 &lt;code>git add [檔案名稱]&lt;/code> ，如果想要把資料夾全部檔案都加入版本控制，可以使用 &lt;code>.&lt;/code> 來加入。&lt;/p>
&lt;br>
&lt;h4>commit&lt;span class="hx-absolute -hx-mt-20" id="commit">&lt;/span>
&lt;a href="#commit" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>當我們新增完後，要將它提交出去，就要使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git commit -m &lt;span style="color:#e6db74">&amp;#34;內容打這&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/commit.webp"
alt="Git commit" width="600">&lt;figcaption>
&lt;p>Git commit&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>我們可以在雙引號內輸入我們修改的內容，方便其他人了解該版本的差異。&lt;/p>
&lt;br>
&lt;h3>分支類&lt;span class="hx-absolute -hx-mt-20" id="分支類">&lt;/span>
&lt;a href="#%e5%88%86%e6%94%af%e9%a1%9e" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>branch&lt;span class="hx-absolute -hx-mt-20" id="branch">&lt;/span>
&lt;a href="#branch" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>我們專案初始化後，一開始都只會有一個 master 分支，如果想要新增分支，可以使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git branch &lt;span style="color:#e6db74">&amp;#34;分支名稱&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>會將所在分支的檔案狀態複製到新增的分支上，當該分支改動時，不會影響到原本的分支。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/branch.webp"
alt="Git branch" width="600">&lt;figcaption>
&lt;p>Git branch&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h4>checkout&lt;span class="hx-absolute -hx-mt-20" id="checkout">&lt;/span>
&lt;a href="#checkout" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>如果想要切換不同版本或是分支，就可以使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git checkout &lt;span style="color:#e6db74">&amp;#34;分支名稱/分支ID&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>來切換不同的分支或是以前的版本。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/checkout_1.webp"
alt="Git checkout" width="600">&lt;figcaption>
&lt;p>Git checkout&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>如果想要同時建立分支並切換，可以使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git chechout -b &lt;span style="color:#e6db74">&amp;#34;分支名稱&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>-b&lt;/code> 這個參數就等於是 &lt;code>git branch &amp;quot;分支&amp;quot; &amp;amp; git checkout &amp;quot;分支&amp;quot;&lt;/code>。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/checkout_2.webp"
alt="Git checkout -b" width="600">&lt;figcaption>
&lt;p>Git checkout -b&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h3>遠端類&lt;span class="hx-absolute -hx-mt-20" id="遠端類">&lt;/span>
&lt;a href="#%e9%81%a0%e7%ab%af%e9%a1%9e" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>clone&lt;span class="hx-absolute -hx-mt-20" id="clone">&lt;/span>
&lt;a href="#clone" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>如果我們遠端上已經有版本庫，想要下載到本地端，就可以使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git clone &lt;span style="color:#f92672">[&lt;/span>遠端網址&lt;span style="color:#f92672">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>會在下指令的當前路徑下，下載整個遠端的專案。&lt;/p>
&lt;br>
&lt;h4>remote&lt;span class="hx-absolute -hx-mt-20" id="remote">&lt;/span>
&lt;a href="#remote" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>如果要新增遠端版本庫，就可以使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git remote add &lt;span style="color:#f92672">[&lt;/span>簡稱&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>遠端網址&lt;span style="color:#f92672">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>取一個可以代表要新增的遠端 Git 版本庫簡稱。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/remote_1.webp"
alt="Git remote" width="600">&lt;figcaption>
&lt;p>Git remote&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>如果想要檢視已經設定好的遠端版本庫，就可以使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git remote&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>他會列出每個遠端本版本庫的簡稱。&lt;/p>
&lt;p>也可以使用 &lt;code>git remote -v&lt;/code> 指令，會顯示 Git 用來讀寫遠端簡稱時所用的網址：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/remote_2.webp"
alt="Git remote -v" width="600">&lt;figcaption>
&lt;p>Git remote -v&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h4>push&lt;span class="hx-absolute -hx-mt-20" id="push">&lt;/span>
&lt;a href="#push" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>當我們已經設定好遠端版本庫的位址，我們如果想要將本地端的專案版本庫放到遠端，就可以使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git push &lt;span style="color:#f92672">[&lt;/span>簡稱&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>分支名稱&lt;span style="color:#f92672">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>將本地端版本庫推到遠端的版本庫。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/push.webp"
alt="Git push" width="600">&lt;figcaption>
&lt;p>Git push&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>上面這張圖片，就是把本地端的 &lt;code>master&lt;/code> 分支內容，推一份到 &lt;code>origin&lt;/code> 這個地方 (可能是 GitHub 或公司內部 Git 伺服器)，並且在 &lt;code>origin&lt;/code> 這個地方形成同名的 &lt;code>master&lt;/code> 分支。&lt;/p>
&lt;br>
&lt;p>但很多人不知道的是，其實 push 指令的完整型態長這樣：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git push origin master:master&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>意思就是「把本地的 &lt;code>master&lt;/code> 分支內容，推一份到 &lt;code>origin&lt;/code> 上，並且在 &lt;code>origin&lt;/code> 上建立一個 &lt;code>master&lt;/code> 分支」&lt;/p>
&lt;br>
&lt;p>如果我們把指令改為：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git push origin master:dog&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>意思就會變成「把本地的 &lt;code>master&lt;/code> 分支內容，推一份到 &lt;code>origin&lt;/code> 上，並且在 &lt;code>origin&lt;/code> 上建立一個 &lt;code>dog&lt;/code> 分支」&lt;/p>
&lt;br>
&lt;h4>pull&lt;span class="hx-absolute -hx-mt-20" id="pull">&lt;/span>
&lt;a href="#pull" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>如果我們想要將遠端的專案 &lt;strong>下載並合併&lt;/strong> 至本地端，就可以使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git pull &lt;span style="color:#f92672">[&lt;/span>簡稱&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>分支名稱&lt;span style="color:#f92672">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>將遠端專案資料下載並合併到本地端。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/pull.webp"
alt="Git pull" width="600">&lt;figcaption>
&lt;p>Git pull&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h4>fetch&lt;span class="hx-absolute -hx-mt-20" id="fetch">&lt;/span>
&lt;a href="#fetch" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>如果我們單純只想要將遠端的專案 &lt;strong>下載&lt;/strong> 至本地端，就可以使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git fetch &lt;span style="color:#f92672">[&lt;/span>簡稱&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>分支名稱&lt;span style="color:#f92672">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>將遠端專案資料下載到本地端。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/fetch.webp"
alt="Git fetch" width="600">&lt;figcaption>
&lt;p>Git fetch&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h4>clone、pull、fetch 差異&lt;span class="hx-absolute -hx-mt-20" id="clonepullfetch-差異">&lt;/span>
&lt;a href="#clonepullfetch-%e5%b7%ae%e7%95%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: center">差異&lt;/th>
&lt;th style="text-align: center">clone&lt;/th>
&lt;th style="text-align: center">fetch&lt;/th>
&lt;th style="text-align: center">pull&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: center">功能&lt;/td>
&lt;td style="text-align: center">會把遠端整份專案都下載到本地端&lt;/td>
&lt;td style="text-align: center">只會下載，並不會合併&lt;/td>
&lt;td style="text-align: center">會下載且合併檔案&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">補充說明&lt;/td>
&lt;td style="text-align: center">適用於專案一開始時使用，如果 clone 之後要再更新，通常是執行 &lt;code>git fetch&lt;/code> or &lt;code>git pull&lt;/code>&lt;/td>
&lt;td style="text-align: center">假設我遠端叫 &lt;code>orgin&lt;/code>，當執行時，Git 會比對本地端與遠端，會「下載 &lt;code>origin&lt;/code> 上有但本地端沒有的檔案下來」&lt;/td>
&lt;td style="text-align: center">pull 與 fetch 做的事情差不多，多了一個進行合併的功能&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;br>
&lt;h3>合併類&lt;span class="hx-absolute -hx-mt-20" id="合併類">&lt;/span>
&lt;a href="#%e5%90%88%e4%bd%b5%e9%a1%9e" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>merge&lt;span class="hx-absolute -hx-mt-20" id="merge">&lt;/span>
&lt;a href="#merge" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>如果想要將不同分支內容合併，就可以使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git merge &lt;span style="color:#f92672">[&lt;/span>分支名稱&lt;span style="color:#f92672">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>像下面這張圖，我們將分支 123 合併到分支 master。(要記得先切換到要合併的主分支，才可以合併其他的分支進來)&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/merge.webp"
alt="Git merge" width="600">&lt;figcaption>
&lt;p>Git merge&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h4>merge (fast-fastward)&lt;span class="hx-absolute -hx-mt-20" id="merge-fast-fastward">&lt;/span>
&lt;a href="#merge-fast-fastward" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>merge 有一個參數叫做 fast-fastward，我們先看圖片再來說明：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/merge_1.gif"
alt="Git merge fast-fastward 圖一 (CS Visualized: Useful Git Commands)" width="700">&lt;figcaption>
&lt;p>Git merge fast-fastward 圖一 (&lt;a href="https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1#merge" target="_blank" rel="noopener">CS Visualized: Useful Git Commands&lt;/a>)&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/merge_2.gif"
alt="Git merge no fast-fastward 圖二 (CS Visualized: Useful Git Commands)" width="700">&lt;figcaption>
&lt;p>Git merge no fast-fastward 圖二 (&lt;a href="https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1#merge" target="_blank" rel="noopener">CS Visualized: Useful Git Commands&lt;/a>)&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>圖一是我們的 &lt;code>fast-fastward&lt;/code>，也是 Git 預設的合併方式，當我們要將 dev 合併到 master，&lt;code>fast-fastward&lt;/code> 會將 dev 分支的 commit 紀錄合併到 master 上，然而圖二是不使用 &lt;code>fast-fastward&lt;/code> 方式，會保留 dev 分支上的 commit 紀錄，並在 master 上新增一個。&lt;/p>
&lt;br>
&lt;p>&lt;code>no fast-fastward&lt;/code> 好處是可以完整保留每個分支的 commit 紀錄，壞處是假如 commit 紀錄只有一個，合併多次就會出現很多小叉路。要怎麽使用 &lt;code>no fast-fastward&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git merge --no-ff &lt;span style="color:#f92672">[&lt;/span>分支名稱&lt;span style="color:#f92672">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;h4>rebase (合併)&lt;span class="hx-absolute -hx-mt-20" id="rebase-合併">&lt;/span>
&lt;a href="#rebase-%e5%90%88%e4%bd%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>如果想要重新修改特定分支的「 基礎版本 」，要把另一個分支的變更，當成我這隻分支的基礎，就可以使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git rebase &lt;span style="color:#f92672">[&lt;/span>分支名稱&lt;span style="color:#f92672">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/rebase_1.gif"
alt="Git rebase (合併) (CS Visualized: Useful Git Commands)" width="700">&lt;figcaption>
&lt;p>Git rebase (合併) (&lt;a href="https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1#Rebasing" target="_blank" rel="noopener">CS Visualized: Useful Git Commands&lt;/a>)&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h4>rebase (修改)&lt;span class="hx-absolute -hx-mt-20" id="rebase-修改">&lt;/span>
&lt;a href="#rebase-%e4%bf%ae%e6%94%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>如果想要修改特定分支上任何一個版本資訊，就可以使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git rebase -i &lt;span style="color:#f92672">[&lt;/span>HEAD~?&lt;span style="color:#f92672">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>但要記得，如果再使用前，要先詢問是否有人正在使用此分支，因為 rebase 會改變歷史紀錄。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/rebase_2.gif"
alt="Git rebase (修改) (CS Visualized: Useful Git Commands)" width="700">&lt;figcaption>
&lt;p>Git rebase (修改) (&lt;a href="https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1#Rebasing" target="_blank" rel="noopener">CS Visualized: Useful Git Commands&lt;/a>)&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h4>cherry-pick&lt;span class="hx-absolute -hx-mt-20" id="cherry-pick">&lt;/span>
&lt;a href="#cherry-pick" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>如果想要從某個分支，拉幾個 Commit 進來該分支，就可以使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git cherry-pick &lt;span style="color:#f92672">[&lt;/span>分支ID&lt;span style="color:#f92672">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>但做此動作，需要解決修改後的版本衝突。&lt;/p>
&lt;br>
&lt;h3>還原類&lt;span class="hx-absolute -hx-mt-20" id="還原類">&lt;/span>
&lt;a href="#%e9%82%84%e5%8e%9f%e9%a1%9e" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>reset&lt;span class="hx-absolute -hx-mt-20" id="reset">&lt;/span>
&lt;a href="#reset" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>如果想要還原任意 Commit，就可以使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git reset &lt;span style="color:#f92672">[&lt;/span>HEAD~?&lt;span style="color:#f92672">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>會還原選擇的 Commit，且檔案還是維持最新版本。&lt;/p>
&lt;br>
&lt;p>&lt;code>reset&lt;/code> 指令可以搭配參數使用，常見到的三種參數，方別是 &lt;code>--mixed&lt;/code>、&lt;code>--soft&lt;/code>、&lt;code>--hard&lt;/code>，不同的參數執行之後會有稍微不太一樣的結果。&lt;/p>
&lt;ul>
&lt;li>mixed 模式：&lt;code>--mixed&lt;/code> 是預設的參數，如果沒有特別加其他參數，&lt;code>got reset&lt;/code> 會使用 &lt;code>--mix&lt;/code> 模式。這個模式會把暫存區的檔案丟掉，但不會影響到工作目錄的檔案，也就是說 Commit 拆出來的檔案會留在工作目錄(實體的檔案)，但不會留在暫存區。&lt;/li>
&lt;li>soft 模式：這個模式下的 reset，工作目錄跟暫存區檔案都不會被丟掉，所以看起來只有 HEAD 的移動而已。也因此，Commit 拆出來的檔案會直接放在暫存區。&lt;/li>
&lt;li>hard 模式：在這個模式下，不管是工作目錄以及暫存區的檔案都會丟掉。&lt;/li>
&lt;/ul>
&lt;p>以下用表格在整理一次：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: center">模式&lt;/th>
&lt;th style="text-align: center">mixed 模式&lt;/th>
&lt;th style="text-align: center">soft 模式&lt;/th>
&lt;th style="text-align: center">hard 模式&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: center">工作目錄(實體的檔案)&lt;/td>
&lt;td style="text-align: center">不變&lt;/td>
&lt;td style="text-align: center">不變&lt;/td>
&lt;td style="text-align: center">丟掉&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">暫存區&lt;/td>
&lt;td style="text-align: center">丟掉&lt;/td>
&lt;td style="text-align: center">不變&lt;/td>
&lt;td style="text-align: center">丟掉&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;br>
&lt;p>文字說明也不太懂對吧！沒錯我也是 😂，所以我整理了三種不同的範例，我們一起做看看吧！&lt;/p>
&lt;p>我們先開一個新專案，在 master 上面 commit 2 次，可以參考下方圖片：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/reset_1.webp"
alt="Git reset 示範" width="700">&lt;figcaption>
&lt;p>Git reset 示範&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>我們用 &lt;code>git log&lt;/code> 來看一下記錄：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/reset_2.webp"
alt="Git reset 示範 log 紀錄" width="700">&lt;figcaption>
&lt;p>Git reset 示範 log 紀錄&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>都設定好後，我們要來測試每個參數的不同之處，先以預設的 &lt;code>--mixed&lt;/code> 來測試：&lt;/p>
&lt;h5>reset - mixed&lt;span class="hx-absolute -hx-mt-20" id="reset---mixed">&lt;/span>
&lt;a href="#reset---mixed" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>我們下 &lt;code>git reset --minxed&lt;/code> 按 Tab 可以看要還原的 commit，我們之後的測試都是還原到 &lt;code>24aeb0d -- [HEAD^] add a.txt&lt;/code> 這個，來觀察 &lt;code>add b.txt&lt;/code> 這個 commit 的變化。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/reset_3.webp"
alt="Git reset mixed 模式" width="800">&lt;figcaption>
&lt;p>Git reset mixed 模式&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>所以我們的指令是 &lt;code>git reset --mixed 24aebo4&lt;/code>，我們再來觀看看看，檔案狀態也就是 b.txt 以及暫存區狀態。&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/reset_4.webp"
alt="Git reset mixed 模式" width="800">&lt;figcaption>
&lt;p>Git reset mixed 模式&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>可以看到使用 &lt;code>--mixed&lt;/code> 模式，檔案 b.txt 還會存在，只是移除暫存區。&lt;/p>
&lt;br>
&lt;h5>reset - soft&lt;span class="hx-absolute -hx-mt-20" id="reset---soft">&lt;/span>
&lt;a href="#reset---soft" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>我們指令是 &lt;code>git reset --soft 24aebo4&lt;/code>：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/reset_5.webp"
alt="Git reset soft 模式" width="800">&lt;figcaption>
&lt;p>Git reset soft 模式&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>可以看到使用 &lt;code>--soft&lt;/code> 模式，檔案 b.txt 還會存在，且會在暫存區。&lt;/p>
&lt;br>
&lt;h5>reset - hard&lt;span class="hx-absolute -hx-mt-20" id="reset---hard">&lt;/span>
&lt;a href="#reset---hard" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>我們指令是 &lt;code>git reset --hard 24aebo4&lt;/code>：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/reset_6.webp"
alt="Git reset hard 模式" width="800">&lt;figcaption>
&lt;p>Git reset hard 模式&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>可以看到使用 &lt;code>--hard&lt;/code> 模式，檔案 b.txt 不見了，所以也不會在暫存區。&lt;/p>
&lt;br>
&lt;h4>revert&lt;span class="hx-absolute -hx-mt-20" id="revert">&lt;/span>
&lt;a href="#revert" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>如果想要還原任意 Commit，但又想保留在歷史紀錄，就可以使用：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git revert &lt;span style="color:#f92672">[&lt;/span>HEAD~?&lt;span style="color:#f92672">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>會還原選擇的 Commit，檔案也會還原到舊的版本&lt;/p>
&lt;br>
&lt;h4>reset 與 revert 差異&lt;span class="hx-absolute -hx-mt-20" id="reset-與-revert-差異">&lt;/span>
&lt;a href="#reset-%e8%88%87-revert-%e5%b7%ae%e7%95%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: center">指令&lt;/th>
&lt;th style="text-align: center">reset&lt;/th>
&lt;th style="text-align: center">revert&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: center">改變歷史狀態&lt;/td>
&lt;td style="text-align: center">是&lt;/td>
&lt;td style="text-align: center">否&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">說明&lt;/td>
&lt;td style="text-align: center">把目前狀態設定成某個指定的 Commit 狀態，通常適用於尚未推到遠端的 Commit&lt;/td>
&lt;td style="text-align: center">新增一個 Commit 來取消另一個 Commit 的內容，原本的 Commit 依舊會保留在歷史紀錄中。通常適用於已經推到遠端的 Commit&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;br>
&lt;h3>其他&lt;span class="hx-absolute -hx-mt-20" id="其他">&lt;/span>
&lt;a href="#%e5%85%b6%e4%bb%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>tag&lt;span class="hx-absolute -hx-mt-20" id="tag">&lt;/span>
&lt;a href="#tag" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>標籤是用於標記特定的點或是提交的歷史，通常會用來標記發佈版本的名稱或是編號，例如：&lt;code>v1.0&lt;/code>。標籤看起來有點像是分支，但打上標籤的提交是固定的，不能隨意的變更位置。&lt;/p>
&lt;p>Git 中有兩種標籤類型：輕量標籤(lightweight tag)和標示標籤(annotated tag)，他們有什麼區別呢？我們分別列出他們不同之處。&lt;/p>
&lt;br>
&lt;ul>
&lt;li>
&lt;p>輕量標籤(lightweight tag)&lt;/p>
&lt;ul>
&lt;li>不可以變更的暫時標籤&lt;/li>
&lt;li>可以添加名稱&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>標示標籤(annotated tag)&lt;/p>
&lt;ul>
&lt;li>可以添加打標籤者的名稱、email、日期&lt;/li>
&lt;li>可以添加名稱&lt;/li>
&lt;li>可以添加註解&lt;/li>
&lt;li>可以添加簽名&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;br>
&lt;p>一般情況下，標示標籤都會用在較為重要的提交上，如發布提交可以使用標示標籤來新增註解或簽名，另一方面，輕量標籤通常使用在本機端最為暫時性的使用或是一次性使用。&lt;/p>
&lt;p>我們分別來看一下要如何新增輕量標籤(lightweight tag)以及標示標籤(annotated tag)吧！&lt;/p>
&lt;br>
&lt;p>我們先隨意在分支上推一次 commit ，如下圖，讓我們等等有 commit 可以來新增標籤：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/tag.webp"
alt="在隨意的分支推一個 commit" width="800">&lt;figcaption>
&lt;p>在隨意的分支推一個 commit&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;h5>輕量標籤&lt;span class="hx-absolute -hx-mt-20" id="輕量標籤">&lt;/span>
&lt;a href="#%e8%bc%95%e9%87%8f%e6%a8%99%e7%b1%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>使用 &lt;code>tag&lt;/code> 且不帶其他的參數來下指令：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git tag lightweight bc4c597&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>lightweight 是我們 tag 名稱，bc4c597 是剛剛 commit 的 SHA-1&lt;/p>
&lt;br>
&lt;p>接著我們使用 &lt;code>git show lightweight&lt;/code> 來查看標籤：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/tag_1.webp"
alt="輕量標籤 lightweight" width="800">&lt;figcaption>
&lt;p>輕量標籤 lightweight&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>可以發現因為我們使用「輕量標籤」，所以沒有存任何資訊，但可以在圖片第一行最後面看到我們使用的 tag。&lt;/p>
&lt;br>
&lt;h5>標示標籤&lt;span class="hx-absolute -hx-mt-20" id="標示標籤">&lt;/span>
&lt;a href="#%e6%a8%99%e7%a4%ba%e6%a8%99%e7%b1%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>我們一樣使用 &lt;code>tag&lt;/code>，但後面可以加上 -a -m 參數：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ git tag annotated bc4c597 -a -m &lt;span style="color:#e6db74">&amp;#34;可以備註&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>-a&lt;/code> 參數是請 Git 幫我們建立有附註的標籤，後面的 &lt;code>-m&lt;/code> 則是跟我們 commit 一樣可以來輸入訊息&lt;/p>
&lt;br>
&lt;p>接著我們使用 &lt;code>git show annotated&lt;/code> 來查看標籤：&lt;/p>
&lt;br>
&lt;figure>&lt;img src="https://pin-yi.me/git-or-cicd/git-introduce/tag_2.webp"
alt="標示標籤 annotated" width="800">&lt;figcaption>
&lt;p>標示標籤 annotated&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;br>
&lt;p>可以看到我們使用標示標籤，所以可以查看標籤是誰填寫、他的信箱、填寫時間以及他的備註內容。&lt;/p>
&lt;br>
&lt;p>官方文件對於這兩種標籤的說明：&lt;/p>
&lt;p>有標示標籤主要用來做像是軟體版號之類的用途，而輕量標籤則是來於個人使用或暫時的標記用途。簡單來說，有標示標籤的好處是有更多關於這張標籤的資訊，假設不是很在乎這些資訊，使用一般的輕量標籤也是沒有問題的！&lt;/p>
&lt;br>
&lt;h2>Git 常見問題&lt;span class="hx-absolute -hx-mt-20" id="git-常見問題">&lt;/span>
&lt;a href="#git-%e5%b8%b8%e8%a6%8b%e5%95%8f%e9%a1%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>Git 裡的 HEAD 是什麼？&lt;/li>
&lt;/ul>
&lt;p>HEAD 本身是一個指標，通常會指向某個本地端分支或是其他 Commit，所以也可以把 HEAD 當作目前所在的分支。&lt;/p>
&lt;br>
&lt;ul>
&lt;li>刪除合併後的分支會發生什麼事情嗎？&lt;/li>
&lt;/ul>
&lt;p>分支本身就像指標或是貼紙一樣，貼在某個 Commit 上面，分支並不是目錄或是檔案，所以當我們刪除已經合併過的分支，不會造成檔案或目錄跟著被刪除。&lt;/p>
&lt;br>
&lt;h2>參考資料&lt;span class="hx-absolute -hx-mt-20" id="參考資料">&lt;/span>
&lt;a href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>什麼是 Git？為什麼要學習它？：&lt;a href="https://gitbook.tw/chapters/introduction/what-is-git" target="_blank" rel="noopener">https://gitbook.tw/chapters/introduction/what-is-git&lt;/a>&lt;/p>
&lt;p>Git：基本概念介紹與指令：&lt;a href="https://medium.com/@tina2793778/git-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%BB%8B%E7%B4%B9%E8%88%87%E6%8C%87%E4%BB%A4-d5d85607cd7d" target="_blank" rel="noopener">https://medium.com/@tina2793778/git-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%BB%8B%E7%B4%B9%E8%88%87%E6%8C%87%E4%BB%A4-d5d85607cd7d&lt;/a>&lt;/p>
&lt;p>[Git] 初始設定：&lt;a href="https://ithelp.ithome.com.tw/articles/10240965" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10240965&lt;/a>&lt;/p>
&lt;p>連猴子都能懂的Git入門指南：&lt;a href="https://backlog.com/git-tutorial/tw/" target="_blank" rel="noopener">https://backlog.com/git-tutorial/tw/&lt;/a>&lt;/p>
&lt;p>Git教學】分支合併: merge 與 rebase 差異：&lt;a href="https://www.maxlist.xyz/2020/05/02/git-merge-rebase/" target="_blank" rel="noopener">https://www.maxlist.xyz/2020/05/02/git-merge-rebase/&lt;/a>&lt;/p>
&lt;p>Git 面試題：&lt;a href="https://gitbook.tw/interview" target="_blank" rel="noopener">https://gitbook.tw/interview&lt;/a>&lt;/p>
&lt;p>Reset、Revert 跟 Rebase 指令有什麼差別？：&lt;a href="https://gitbook.tw/chapters/rewrite-history/reset-revert-and-rebase" target="_blank" rel="noopener">https://gitbook.tw/chapters/rewrite-history/reset-revert-and-rebase&lt;/a>&lt;/p></description></item></channel></rss>